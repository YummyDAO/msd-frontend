{"version":3,"sources":["../../../src/EthersLiquityConnection.ts","../../../src/Decimal.ts","../.yalc/@liquity/chicken-bonds/lusd/types/index.js","../../index.ts","../../../src/_utils.ts","../../../src/constants.ts","../../../../src/hooks/useLiquityStore.ts","../../../src/WebSocketAugmentedProvider.ts","../../../src/WebSocketProvider.ts","../../../src/contracts.ts","../../../src/ReadableEthersLiquity.ts","../../../src/BlockPolledLiquityStore.ts","../../../src/PopulatableEthersLiquity.ts","../../../src/SendableEthersLiquity.ts","../../../../src/components/LiquityStoreProvider.tsx","../../../../src/utils/equals.ts","../.yalc/@liquity/chicken-bonds/lusd/types/factories/BLUSDToken__factory.js","../.yalc/@liquity/chicken-bonds/lusd/types/factories/BondNFT__factory.js","../.yalc/@liquity/chicken-bonds/lusd/types/factories/ChickenBondManager__factory.js","../.yalc/@liquity/chicken-bonds/lusd/types/factories/ERC20Faucet__factory.js","../.yalc/@liquity/chicken-bonds/lusd/types/external/factories/CurveCryptoSwap2ETH__factory.js","../.yalc/@liquity/chicken-bonds/lusd/types/external/index.js","../../../src/BatchedProvider.ts","../../../src/Trove.ts","../../../src/StabilityDeposit.ts","../../../src/LQTYStake.ts","../../../src/Fees.ts","../../../src/TransactableLiquity.ts","../../../src/SendableLiquity.ts","../../../src/LiquityStore.ts","../../../src/_CachedReadableLiquity.ts","../../../src/_Multicall.ts","../../../src/ObservableEthersLiquity.ts","../../../src/parseLogs.ts","../../../src/EthersLiquity.ts","../../../../src/hooks/useLiquityReducer.ts","../../../../src/hooks/useLiquitySelector.ts","../.yalc/@liquity/chicken-bonds/lusd/types/factories/index.js","../.yalc/@liquity/chicken-bonds/lusd/addresses/index.js","../.yalc/@liquity/chicken-bonds/lusd/types/external/factories/index.js","config/index.ts","hooks/LiquityContext.tsx","connectors/injectedConnector.ts","components/Icon.tsx","components/Dialog.tsx","components/RetryDialog.tsx","components/WaitingDialog.tsx","components/ConnectionConfirmationDialog.tsx","components/MetaMaskIcon.tsx","components/Modal.tsx","components/WalletConnector.tsx","hooks/useAuthorizedConnection.ts","components/Tooltip.tsx","components/TransactionStatus.tsx","components/Transaction.tsx","components/Bonds/context/transitions.ts","theme.ts","testUtils/DisposableWalletProvider.ts","strings.ts","utils/shortenAddress.ts","components/Bonds/lexicon.ts","components/Bonds/context/BondViewContext.tsx","components/UserAccount.tsx","components/InfoIcon.tsx","components/Statistic.tsx","components/SystemStats.tsx","components/SystemStatsPopup.tsx","components/LiquityLogo.tsx","components/Link.tsx","components/Nav.tsx","components/SideNav.tsx","components/Header.tsx","components/ActionDescription.tsx","components/Trove/Editor.tsx","components/LoadingOverlay.tsx","components/Trove/CollateralRatio.tsx","components/Trove/TroveEditor.tsx","components/Trove/TroveAction.tsx","components/Trove/context/TroveViewContext.tsx","components/ErrorDescription.tsx","components/Trove/validation/validateTroveChange.tsx","components/Trove/TroveManager.tsx","components/Trove/ReadOnlyTrove.tsx","components/InfoMessage.tsx","components/Trove/NoTrove.tsx","hooks/useStableTroveChange.ts","components/Warning.tsx","components/Trove/ExpensiveTroveChangeWarning.tsx","components/Trove/Opening.tsx","components/Trove/Adjusting.tsx","components/CollateralSurplusAction.tsx","components/Trove/RedeemedTrove.tsx","components/Trove/LiquidatedTrove.tsx","components/Trove/Trove.tsx","components/Stability/StabilityDepositEditor.tsx","components/Stability/StabilityDepositAction.tsx","components/Stability/context/StabilityViewContext.tsx","components/Stability/StabilityActionDescription.tsx","components/Stability/validation/validateStabilityDepositChange.tsx","components/Stability/StabilityDepositManager.tsx","components/Stability/actions/ClaimAndMove.tsx","components/Stability/actions/ClaimRewards.tsx","components/Stability/RemainingLQTY.tsx","components/Badge.tsx","components/Stability/context/fetchLqtyPrice.ts","components/Stability/Yield.tsx","components/Stability/ActiveDeposit.tsx","components/Stability/NoDeposit.tsx","components/Stability/Stability.tsx","components/PriceManager.tsx","components/Bonds/views/idle/Empty.tsx","components/Bonds/BondsTable.tsx","pages/Dashboard.tsx","pages/UnregisteredFrontend.tsx","pages/FrontendRegistration.tsx","pages/FrontendRegistrationSuccess.tsx","pages/PageSwitcher.tsx","components/LiquidationManager.tsx","components/Abbreviation.tsx","components/RiskyTroves.tsx","pages/RiskyTrovesPage.tsx","components/Redemption/DisabledRedemption.tsx","components/Redemption/RedemptionAction.tsx","components/Redemption/RedemptionManager.tsx","components/Redemption/Redemption.tsx","pages/RedemptionPage.tsx","components/TreasuryChart.tsx","components/BondStats.tsx","components/Placeholder.tsx","components/HorizontalTimeline.tsx","components/Bonds/Record.tsx","components/Bonds/views/idle/actions/Actions.tsx","components/Bonds/views/idle/Bond.tsx","components/Bonds/views/idle/OptimisticBond.tsx","components/Bonds/views/idle/FilteredBondList.tsx","components/Bonds/views/idle/BondList.tsx","components/Bonds/views/idle/Idle.tsx","components/Bonds/views/actioning/actions/cancel/Cancel.tsx","components/Bonds/views/actioning/actions/claim/Claim.tsx","components/ReactModal.tsx","components/Bonds/utils.ts","components/Bonds/views/actioning/Actioning.tsx","components/Wizard/Context.tsx","components/Wizard/Wizard.tsx","components/ModalWizard.tsx","components/Bonds/context/api.ts","hooks/useTransaction.ts","components/AppLoader.tsx","hooks/useContract.ts","components/Bonds/context/useBondContracts.tsx","components/Bonds/context/BondViewProvider.tsx","components/HorizontalSlider.tsx","components/Bonds/views/creating/Details.tsx","components/Bonds/views/creating/Information.tsx","components/Bonds/views/creating/Creating.tsx","components/Bonds/views/swapping/SwapPane.tsx","components/Bonds/views/swapping/Swapping.tsx","components/Bonds/views/managing/PoolDetails.tsx","components/Bonds/views/managing/DepositPane.tsx","components/Bonds/views/managing/WithdrawPane.tsx","components/Bonds/views/managing/ManagingLiquidity.tsx","components/Bonds/views/managing/AddingLiquidity.tsx","components/Bonds/Bonds.tsx","pages/Bonds.tsx","components/Trove/context/TroveViewProvider.tsx","components/Stability/context/StabilityViewProvider.tsx","components/Staking/context/StakingViewContext.tsx","components/Staking/context/StakingViewProvider.tsx","LiquityFrontend.tsx","App.tsx","index.tsx"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","ERC20Faucet__factory","ChickenBondManager__factory","BLUSDToken__factory","BondNFT__factory","factories","require","BondNFT__factory_1","BLUSDToken__factory_1","ChickenBondManager__factory_1","ERC20Faucet__factory_1","__exportStar","WebSocketProvider","address","overrides","ethers_1","_abi","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","_bytecode","isSuperArgs","xs","length","args","name_","symbol_","signer","utils","Interface","signerOrProvider","Contract","ContractFactory","bytecode","abi","_initialArtworkAddress","_transferLockoutPeriodSeconds","components","_externalContractAddresses","_params","_name","_symbol","_tapAmount","_tapPeriod","CurveCryptoSwap2ETH__factory","CurveCryptoSwap2ETH__factory_1","a","readable","LUSD_OVERRIDE_ADDRESS","BLUSD_AMM_STAKING_ADDRESS","BLUSD_AMM_ADDRESS","BLUSD_TOKEN_ADDRESS","CHICKEN_BOND_MANAGER_ADDRESS","BOND_NFT_ADDRESS","addresses_json_1","defaultConfig","frontendTag","AddressZero","hasKey","parseConfig","json","config","isAddress","getAddress","console","error","log","infuraApiKey","testnetOnly","configPromise","fetchConfig","fetch","response","ok","Error","status","getConfig","LiquityContext","createContext","webSocketSupportedNetworks","LiquityProvider","children","loader","unsupportedNetworkFallback","unsupportedMainnetFallback","useWeb3React","provider","library","account","chainId","useState","setConfig","connection","useMemo","_connectByChainId","getSigner","userAddress","useStore","useEffect","then","isBatchedProvider","isWebSocketAugmentedProvider","network","getNetwork","includes","openWebSocket","wsParams","_isDev","window","location","hostname","closeWebSocket","liquity","EthersLiquity","_from","store","logging","Provider","useLiquity","liquityContext","useContext","injectedConnector","InjectedConnector","add","faCircleNotch","faCheck","faCheckCircle","faExclamationTriangle","faInfoCircle","faTimes","faTrash","faChartLine","faRedo","faHistory","faChevronLeft","faChevronRight","faClipboard","faClipboardCheck","faUserCircle","faWallet","faExternalLinkAlt","faCog","faPlug","faExclamationCircle","faAngleUp","faAngleDoubleUp","faAngleDown","faAngleDoubleDown","faPen","faHandPaper","faHeartbeat","faBars","faQuestionCircle","faArrowDown","getIcon","Icon","style","rest","icon","iconFromIntent","intent","color","aria-label","Dialog","title","cancelLabel","onCancel","sx","p","borderRadius","height","bg","justifyContent","alignItems","borderBottom","borderColor","pb","as","textAlign","fontSize","px","variant","onClick","size","RetryDialog","retryLabel","onRetry","borderTop","flexDirection","mr","mb","width","WaitingDialog","waitReason","ConnectionConfirmationDialog","fontWeight","MetaMaskIcon","viewBox","fill","xmlns","d","x","y","Modal","connectionReducer","state","action","connector","message","match","warn","WalletConnector","activate","deactivate","active","triedAuthorizedConnection","tried","setTried","isAuthorized","tryToActivateIfAuthorized","useAuthorizedConnection","useReducer","connectionState","dispatch","isMetaMask","ethereum","detectMetaMask","ml","lineHeight","href","target","Tooltip","placement","event","useRef","show","setShow","referenceElement","setReferenceElement","popperElement","setPopperElement","usePopper","styles","attributes","React","cloneElement","Children","only","onMouseOver","current","onMouseOut","setTimeout","ref","popper","circularProgressbarStyle","strokeLinecap","pathColor","trailColor","slowProgress","strokeWidth","buildStyles","pathTransitionDuration","fastProgress","Donut","memo","CircularProgressbarWithChildren","TransactionProgressDonut","setValue","maxValue","spin","TransactionStatus","pl","position","bottom","overflow","TransactionContext","TransactionProvider","transactionState","useTransactionState","useMyTransactionState","myId","id","useTransactionFunction","send","setTransactionState","useCallback","tx","Transaction","tooltip","tooltipPlacement","showFailure","requires","sendTransaction","trigger","failureReasons","filter","map","push","clonedTrigger","disabled","BLusdAmmTokenIndex","tryToGetRevertReason","blockNumber","hexDataLength","hexDataSlice","defaultAbiCoder","decode","TransactionMonitor","cancelled","finished","txHash","rawSentTransaction","hash","waitForConfirmation","waitForReceipt","receipt","confirmations","rawReceipt","reason","EthersTransactionCancelledError","baseColors","colors","primary","secondary","accent","success","warning","danger","dangerHover","info","invalid","text","background","muted","highlight","buttonBase","display","cursor","button","py","border","opacity","buttonOutline","hoverColor","iconButton","padding","cardHeadingFontSize","cardGapX","cardGapY","card","mt","boxShadow","infoCard","h2","formBase","flexShrink","formCell","modalOverlay","left","top","headerGradient","theme","breakpoints","space","fonts","body","join","heading","monospace","fontSizes","fontWeights","light","medium","bold","lineHeights","borders","shadows","fontFamily","buttons","outline","cancel","dangerIcon","titleIcon","close","cards","pr","infoPopup","right","overflowY","zIndex","forms","label","radioLabel","svg","unit","input","flex","editor","layout","header","footer","minHeight","main","maxWidth","mx","columns","flexWrap","justifyItems","actions","disabledOverlay","modal","infoOverlay","infoMessage","minWidth","sidenav","badge","backgroundColor","root","textDecoration","progress","links","nav","textTransform","letterSpacing","DisposableWalletProvider","url","funderPrivateKey","ethAmount","wallet","funderWallet","haveFunded","Wallet","createRandom","Decimal","from","find","toLowerCase","to","hex","gas","hexlify","method","params","fund","Promise","all","nonce","findWallet","signTransaction","gasLimit","headers","JSON","stringify","jsonrpc","assign","COIN","GT","shortenAddress","substr","BONDS","term","description","NOT_BONDED_YET","BOND_CREATED","BOND_NFT","BREAK_EVEN_TIME","OPTIMUM_REBOND_TIME","REBOND_RETURN","REBOND_TIME_ROI","OPTIMUM_APY","BOND_DEPOSIT","ACCRUED_AMOUNT","MARKET_VALUE","BOND_RETURN","CANCEL_BOND","CLAIM_BOND","BLUSD_MARKET_PRICE","BLUSD_FAIR_PRICE","TOTAL_BONDS_STATISTIC","PENDING_BONDS_STATISTIC","CANCELLED_BONDS_STATISTIC","CLAIMED_BONDS_STATISTIC","BLUSD_SUPPLY","BLUSD_FLOOR_PRICE","TREASURY_TOTAL","TREASURY_PENDING","TREASURY_ACQUIRED","TREASURY_PERMANENT","BondViewContext","useBondView","context","statuses","PENDING","CANCELLED","CLAIMED","NON_EXISTENT","select","accountBalance","lusdBalance","lqtyBalance","UserAccount","useLiquitySelector","realLusdBalance","bLusdBalance","customLusdBalance","i","currency","balance","prettify","InfoIcon","interactive","content","Statistic","selectBalances","Balances","GitHubCommit","numberOfTroves","price","total","lusdInStabilityPool","borrowingRate","redemptionRate","totalStakedLQTY","frontend","kickbackRate","SystemStats","showBalances","contractsVersion","version","deploymentDate","lusdInStabilityPoolPct","debt","nonZero","Percent","div","totalCollateralRatioPct","collateralRatio","borrowingFeePct","kickbackRatePct","mul","toString","collateral","shorten","collateralRatioIsBelowCritical","toLocaleString","process","SystemStatsPopup","systemStatsOpen","setSystemStatsOpen","systemStatsOverlayRef","pt","e","LiquityLogo","boxProps","src","ExactLink","props","exact","Link","TemporaryNewBadge","Date","Nav","SideNav","isVisible","setIsVisible","overlay","Header","isFrontendRegistered","borderLeft","ActionDescription","Amount","whiteSpace","Row","labelId","labelFor","infoIcon","htmlFor","PendingAmount","startsWith","StaticAmounts","inputId","labelledBy","amount","pendingAmount","pendingColor","aria-labelledby","staticStyle","flexGrow","editableStyle","StaticRow","DisabledEditableRow","EditableRow","editingState","editedAmount","setEditedAmount","maxAmount","maxedOut","editing","setEditing","setInvalid","autoFocus","step","defaultValue","onChange","onBlur","stopPropagation","LoadingOverlay","CollateralRatio","change","collateralRatioPct","changePct","gt","CRITICAL_COLLATERAL_RATIO","lte","positive","absoluteValue","negative","nonZeroish","lt","TroveEditor","original","edited","fee","changePending","feePct","originalCollateralRatio","isEmpty","collateralRatioChange","Difference","between","LUSD_LIQUIDATION_RESERVE","TroveAction","transactionId","maxBorrowingRate","borrowingFeeDecayToleranceMinutes","openTrove","bind","closeTrove","adjustTrove","TroveViewContext","useTroveView","ErrorDescription","mcrPercent","MINIMUM_COLLATERAL_RATIO","ccrPercent","TroveChangeDescription","depositCollateral","borrowLUSD","repayLUSD","withdrawCollateral","selectForTroveChangeValidation","validateTroveChange","originalTrove","adjustedTrove","selectedState","whatChanged","resultingTrove","apply","recoveryMode","wouldTriggerRecoveryMode","subtract","LUSD_MINIMUM_DEBT","errorDescription","validateTroveCreation","validateTroveClosure","validateTroveAdjustment","LUSD_MINIMUM_NET_DEBT","isOpenableInRecoveryMode","collateralRatioIsBelowMinimum","sub","init","trove","Trove","debtDirty","addedMinimumDebt","reduceWith","reduce","addMinimumDebt","removeMinimumDebt","finishChange","revert","newCollateral","newValue","newState","setCollateral","isZero","setDebt","changeCommitted","stateChange","troveBeforeRedistribution","feeFrom","ZERO","fees","validationContext","transactionIdPrefix","transactionIdMatcher","RegExp","TroveManager","useLiquityReducer","validChange","dispatchEvent","handleCancel","openingNewTrove","myTransactionState","ReadOnlyTrove","handleAdjustTrove","handleCloseTrove","InfoMessage","NoTrove","handleOpenTrove","paramsEq","b","eq","useStableTroveChange","troveChange","stableTroveChange","setStableTroveChange","Warning","ExpensiveTroveChangeWarning","gasEstimationState","setGasEstimationState","timeoutId","populate","populatedTx","rawPopulatedTransaction","clearTimeout","gasHeadroom","selector","EMPTY_TROVE","TRANSACTION_ID","GAS_ROOM_ETH","Opening","borrowAmount","setBorrowAmount","totalDebt","isDirty","maxCollateral","collateralMaxedOut","isTransactionPending","handleCancelPressed","reset","Adjusting","previousTrove","netDebt","setNetDebt","nextCollateral","unsavedChanges","applyUnsavedCollateralChanges","nextNetDebt","applyUnsavedNetDebtChanges","isDebtIncrease","debtIncreaseAmount","updatedTrove","availableEth","collateralSurplusBalance","CollateralSurplusAction","myTransactionId","claimCollateralSurplus","hasSurplusCollateral","RedeemedTrove","LiquidatedTrove","view","StabilityDepositEditor","originalDeposit","editedLUSD","currentLUSD","lusdInStabilityPoolAfterChange","originalPoolShare","mulDiv","newPoolShare","poolShareChange","infinite","concat","collateralGain","lqtyReward","selectFrontendRegistered","StabilityDepositAction","depositLUSD","depositLUSDInStabilityPool","withdrawLUSDFromStabilityPool","withdrawLUSD","StabilityViewContext","useStabilityView","StabilityActionDescription","selectForStabilityDepositChangeValidation","ownFrontend","haveUndercollateralizedTroves","haveOwnFrontend","stabilityDeposit","updatedDeposit","initialLUSD","StabilityDepositManager","validateStabilityDepositChange","makingNewDeposit","ClaimAndMove","transferCollateralGainToTrove","ClaimRewards","withdrawGainsFromStabilityPool","remainingStabilityPoolLQTYReward","RemainingLQTY","Badge","hasProp","validateCoinGeckoSimplePriceResponse","expectedCoinIds","expectedCurrencies","coinId","coinPrices","fetchCoinGeckoSimplePrice","coinIds","vsCurrencies","simplePriceUrl","URLSearchParams","ids","vs_currencies","accept","fetchLqtyPrice","lqtyPriceUSD","usd","dailyIssuanceFraction","dailyIssuancePercentage","Yield","lqtyPrice","setLqtyPrice","hasZeroValue","aprPercentage","remainingLqtyInUSD","ActiveDeposit","poolShare","handleAdjustDeposit","hasReward","hasGain","hasTrove","isWaitingForTransaction","NoDeposit","Stability","selectPrice","PriceManager","canSetPrice","_priceFeedIsTestnet","editedPrice","setEditedPrice","setPrice","Empty","lexicon","BOND_AMOUNT","LineSegment","formatDays","days","parseFloat","toFixed","Line","Array","_","idx","BondsTable","bonds","pendingBonds","bond","hasBonds","gap","alignContent","breakEvenDays","breakEvenTime","getTime","now","rebondDays","rebondTime","Fragment","deposit","accrued","marketValue","Dashboard","UnregisteredFrontend","FrontendRegistrationAction","registerFrontend","FrontendRegistration","setKickbackRate","cut","setCut","kickbackRateString","setKickbackRateString","newKickbackRate","newCut","ONE","FrontendRegistrationSuccess","onDismiss","selectFrontend","PageSwitcher","unregistered","registering","setRegistering","LiquidationManager","numberOfTrovesToLiquidate","setNumberOfTrovesToLiquidate","min","liquidateUpTo","parseInt","Abbreviation","short","rowHeight","liquidatableInNormalMode","liquidatableInRecoveryMode","totalCollateralRatio","gte","blockTag","RiskyTroves","pageSize","loading","setLoading","troves","setTroves","reload","setReload","forceReload","page","setPage","numberOfPages","Math","ceil","clampedPage","mounted","getTroves","first","sortedBy","startingAt","copied","setCopied","ownerAddress","onCopy","liquidate","RiskyTrovesPage","DisabledRedemption","disabledDays","unlockDate","RedemptionAction","lusdAmount","maxRedemptionRate","redeemLUSD","RedemptionManager","setLUSDAmount","setChangePending","dirty","ethFee","canRedeem","selectBlockTimestamp","blockTimestamp","Redemption","bootstrapPeriod","bootstrapPeriodDays","round","bootstrapEndTime","bootstrapEndDate","RedemptionPage","lusdAddress","addresses","labels","RADIAN","PI","treasury","share","BucketLabel","cx","cy","midAngle","innerRadius","outerRadius","index","radius","cos","sin","textAnchor","dominantBaseline","ShareLabel","positions","circle","r","TreasuryChart","ResponsiveContainer","PieChart","isAnimationActive","Pie","data","dataKey","nameKey","strokeOpacity","Cell","labelLine","Metric","BondStats","stats","protocolInfo","fontweight","l","marketPrice","fairPrice","floorPrice","bLusdSupply","cancelledBonds","claimedBonds","totalBonds","pending","reserve","permanent","keyframes","Placeholder","backgroundImage","animation","mutedGray","defaultCircleStyle","solidCircleStyle","transparentCircleStyle","defaultLineStyle","margin","solidLineStyle","fadeLineStyle","leftColor","rightColor","Circle","UNKNOWN_DATE","SubLabel","alignSelf","Label","LoadingEvent","my","Event","isFirst","isLast","isPast","date","isEndOfLife","isMilestone","isLoading","isToday","toLocaleDateString","isUnknownDate","toDateString","circleStyle","leftLineStyle","rightLineStyle","dateText","month","day","year","HorizontalTimeline","events","orderedEvents","sort","Number","endOfLifeIdx","findIndex","Record","Actions","bondId","transitions","IDLE","CREATE_BOND_PRESSED","CANCEL_BOND_PRESSED","CLAIM_BOND_PRESSED","SWAP_PRESSED","ADD_LIQUIDITY_PRESSED","MANAGE_LIQUIDITY_PRESSED","CREATING","ABORT_PRESSED","CREATE_BOND_CONFIRMED","BACK_PRESSED","APPROVE_PRESSED","CONFIRM_PRESSED","CLAIMING","CLAIM_BOND_CONFIRMED","CANCELLING","CANCEL_BOND_CONFIRMED","SWAPPING","SWAP_CONFIRMED","ADDING_LIQUIDITY","MANAGE_LIQUIDITY_CONFIRMED","MANAGING_LIQUIDITY","Bond","startTime","endTime","breakEvenAccrual","rebondAccrual","getBondEvents","tokenUri","alt","open","inputToken","BLUSD","OptimisticBond","bondFilterToBondStatusMap","claimed","FilteredBondList","optimisticBond","bondFilter","useParams","showOptimisticBond","filteredBonds","getFilteredBonds","BondList","useRouteMatch","path","Idle","getLusdFromFaucet","lpTokenBalance","showLusdFaucet","LUSD","Cancel","selectedBond","isProcessingTransaction","CANCEL","Claim","CLAIM","modalStyle","marginRight","transform","maxHeight","ReactModal","isOpen","onRequestClose","contentLabel","milliseconds","seconds","toFloat","decimal","numberify","bigNumber","toNumber","decimalify","fromBigNumberString","toHexString","percentify","fraction","getBondAgeInDays","getReturn","accruedLusdValue","getTokenUri","encodedTokenUri","dataStartIndex","indexOf","hack","atob","slice","replace","parse","image","getBreakEvenDays","alphaAccrualFactor","marketPricePremium","claimBondFee","effectivePremium","INFINITY","getFutureBLusdAccrualFactor","daysInFuture","bondAgeInDays","duration","getRebondDays","sqrt","dividend","divisor","getFutureDateByDays","daysToMilliseconds","Actioning","handleDismiss","claimNowReturn","rebondReturn","rebondRoi","rebondApr","WizardContext","useWizard","next","back","go","WizardProvider","onFinish","setStep","history","setHistory","nextStep","prev","component","child","Wizard","ModalWizard","BOND_STATUS","getAccountBonds","bondNft","chickenBondManager","balanceOf","bondIdRequests","tokenOfOwnerByIndex","bondIds","bondRequests","deposits","getBondAmount","accrueds","calcAccruedBLUSD","startTimes","getBondStartTime","endTimes","getBondEndTime","getBondStatus","tokenUris","tokenURI","bondDeposits","bondAccrueds","bondStartTimes","bondEndTimes","bondStatuses","bondTokenUris","accumulator","depositMinusClaimBondFee","_getProtocolInfo","hasMarketPremium","breakEvenAccrualFactor","rebondAccrualFactor","getProtocolInfo","bLusdToken","bLusdAmm","reserveSize","totalSupply","price_oracle","CHICKEN_IN_AMM_FEE","accrualParameter","simulatedMarketPrice","getStats","getOpenBondCount","countChickenOut","countChickenIn","getTreasury","erc20From","tokenAddress","getLpToken","pool","token","getTokenBalance","getTokenTotalSupply","isInfiniteBondApproved","lusdToken","allowance","constants","MaxInt256","approveInfiniteBond","approve","MaxUint256","_hex","wait","createBond","createdEvent","cancelBond","minimumLusd","chickenOut","cancelledEvent","claimBond","chickenIn","bondClaimedEvent","isTokenApprovedWithBLusdAmm","approveTokenWithBLusdAmm","getOtherToken","thisToken","getExpectedSwapOutput","inputAmount","get_dy","swapTokens","minOutputAmount","exchangeEvent","amountsFrom","bLusdAmount","getExpectedLpTokens","calc_token_amount","addLiquidity","minLpTokens","amounts","estimateGas","gasEstimate","addLiquidityEvent","getCoinBalances","balances","getExpectedWithdrawal","burnLp","output","lpToken","totalLp","coinBalances","Map","calc_withdraw_one_coin","api","removeLiquidity","burnLpTokens","minBLusdAmount","minLusdAmount","minAmounts","removeLiquidityEvent","removeLiquidityOneCoin","minAmount","removeLiquidityOneEvent","useTransaction","transactionFunction","dependencies","setStatus","timeout","AppLoader","useContract","contract","setContract","getCode","connectedContract","ethers","instance","isValidEvent","transition","BondViewProvider","setView","viewRef","selectedBondId","setSelectedBondId","setOptimisticBond","shouldSynchronize","setShouldSynchronize","setBonds","setTreasury","setStats","setProtocolInfo","simulatedProtocolInfo","setSimulatedProtocolInfo","setIsInfiniteBondApproved","isLusdApprovedWithBlusdAmm","setIsLusdApprovedWithBlusdAmm","isBLusdApprovedWithBlusdAmm","setIsBLusdApprovedWithBlusdAmm","isSynchronizing","setIsSynchronizing","setInputToken","APPROVE","CREATE","APPROVE_AMM","SWAP","MANAGE_LIQUIDITY","setStatuses","setBLusdBalance","setLusdBalance","setLpTokenBalance","lpTokenSupply","setLpTokenSupply","bLusdAmmBLusdBalance","setBLusdAmmBLusdBalance","bLusdAmmLusdBalance","setBLusdAmmLusdBalance","contracts","LUSDTokenAbi","lusdTokenDefault","lusdTokenDefaultStatus","lusdTokenOverride","lusdTokenOverrideStatus","lusdTokenStatus","bLusdTokenStatus","bondNftStatus","chickenBondManagerStatus","hasFoundContracts","getLatestData","bLusdAmmCoinBalances","useBondContracts","setSimulatedMarketPrice","resetSimulatedMarketPrice","removeBondFromList","nextBonds","changeBondStatusToClaimed","updatedBond","tap","REACT_APP_DEMO_MODE","getTrove","isApproved","timer","latest","approveStatus","tokensNeedingApproval","approveAmm","approveAmmStatus","createStatus","cancelStatus","claimStatus","swapStatus","manageLiquidity","manageLiquidityStatus","payload","nextView","isCurrentViewEvent","_view","_event","isInputTokenApprovedWithBLusdAmm","HorizontalSlider","max","onSliderChange","onReset","Details","onBack","setDeposit","depositEditingState","isApprovingOrConfirming","handleBack","timestamp","marketPriceMin","marketPriceMax","subLabel","fontStyle","InformationContainer","Information","hideMessageRef","checked","localStorage","setItem","Creating","getItem","tokenSymbol","outputToken","marginalAmount","SwapPane","inputTokenBalance","setInputAmount","outputAmount","setOutputAmount","exchangeRate","setExchangeRate","priceImpact","setPriceImpact","priceImpactPct","isApprovePending","isSwapPending","isBalanceInsufficient","marginalOutput","marginalExchangeRate","Swapping","PoolBalance","symbol","PoolDetails","DepositPane","setBLusdAmount","setLusdAmount","lpTokens","setLpTokens","coalescedBLusdBalance","coalescedLusdBalance","isManageLiquidityPending","isBLusdBalanceInsufficient","isLusdBalanceInsufficient","isAnyBalanceInsufficient","flat","areInputTokensApprovedWithBLusdAmm","expectedLpTokens","WithdrawnAmount","zeros","WithdrawPane","setBurnLp","setOutput","withdrawal","setWithdrawal","coalescedLpTokenBalance","handleOutputChange","checkOutput","expectedWithdrawal","entries","key","ManagingLiquidity","selectedPane","setSelectedPane","AddingLiquidity","Bonds","View","statusMap","FAILED","CONFIRMED","transaction","keys","NONE","OPEN_TROVE_PRESSED","TROVE_OPENED","LIQUIDATED","TROVE_SURPLUS_COLLATERAL_CLAIMED","REDEEMED","OPENING","CANCEL_ADJUST_TROVE_PRESSED","ADJUSTING","TROVE_ADJUSTED","TROVE_CLOSED","TROVE_LIQUIDATED","TROVE_REDEEMED","CLOSING","ACTIVE","ADJUST_TROVE_PRESSED","CLOSE_TROVE_PRESSED","troveStatusEvents","closedByOwner","closedByLiquidation","closedByRedemption","TroveViewProvider","troveStatus","getInitialView","DEPOSIT_PRESSED","DEPOSITING","CANCEL_PRESSED","DEPOSIT_CONFIRMED","REWARDS_CLAIMED","ADJUST_DEPOSIT_PRESSED","DEPOSIT_EMPTIED","StabilityViewProvider","StakingViewContext","lqtyStake","adjusting","oldStake","oldState","updatedStake","stakedLQTY","lusdGain","StakingViewProvider","stakingTransactionState","LiquityFrontend","autoRefreshOnNetworkChange","REACT_APP_RPC_URL","EthersWeb3ReactProvider","getLibrary","BatchedWebSocketAugmentedWeb3Provider","UnsupportedMainnetFallback","App","setAppElement","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.033f20d8.chunk.js","sourcesContent":["\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports._connect = exports._connectByChainId = exports._connectToDeployment = exports.UnsupportedNetworkError = exports._usingStore = exports._requireFrontendAddress = exports._requireAddress = exports._getProvider = exports._requireSigner = exports._getBlockTimestamp = exports._getContracts = void 0;\r\nconst abstract_signer_1 = require(\"@ethersproject/abstract-signer\");\r\nconst lib_base_1 = require(\"@liquity/lib-base\");\r\nconst dev_json_1 = __importDefault(require(\"../deployments/dev.json\"));\r\nconst goerli_json_1 = __importDefault(require(\"../deployments/goerli.json\"));\r\nconst kovan_json_1 = __importDefault(require(\"../deployments/kovan.json\"));\r\nconst rinkeby_json_1 = __importDefault(require(\"../deployments/rinkeby.json\"));\r\nconst ropsten_json_1 = __importDefault(require(\"../deployments/ropsten.json\"));\r\nconst mainnet_json_1 = __importDefault(require(\"../deployments/mainnet.json\"));\r\nconst kiln_json_1 = __importDefault(require(\"../deployments/kiln.json\"));\r\nconst _utils_1 = require(\"./_utils\");\r\nconst contracts_1 = require(\"./contracts\");\r\nconst _Multicall_1 = require(\"./_Multicall\");\r\nconst dev = dev_json_1.default;\r\nconst deployments = {\r\n    [mainnet_json_1.default.chainId]: mainnet_json_1.default,\r\n    [ropsten_json_1.default.chainId]: ropsten_json_1.default,\r\n    [rinkeby_json_1.default.chainId]: rinkeby_json_1.default,\r\n    [goerli_json_1.default.chainId]: goerli_json_1.default,\r\n    [kovan_json_1.default.chainId]: kovan_json_1.default,\r\n    [kiln_json_1.default.chainId]: kiln_json_1.default,\r\n    ...(dev !== null ? { [dev.chainId]: dev } : {})\r\n};\r\nconst branded = (t) => t;\r\nconst connectionFrom = (provider, signer, _contracts, _multicall, { deploymentDate, totalStabilityPoolLQTYReward, liquidityMiningLQTYRewardRate, ...deployment }, optionalParams) => {\r\n    if (optionalParams &&\r\n        optionalParams.useStore !== undefined &&\r\n        !validStoreOptions.includes(optionalParams.useStore)) {\r\n        throw new Error(`Invalid useStore value ${optionalParams.useStore}`);\r\n    }\r\n    return branded({\r\n        provider,\r\n        signer,\r\n        _contracts,\r\n        _multicall,\r\n        deploymentDate: new Date(deploymentDate),\r\n        totalStabilityPoolLQTYReward: lib_base_1.Decimal.from(totalStabilityPoolLQTYReward),\r\n        liquidityMiningLQTYRewardRate: lib_base_1.Decimal.from(liquidityMiningLQTYRewardRate),\r\n        ...deployment,\r\n        ...optionalParams\r\n    });\r\n};\r\n/** @internal */\r\nconst _getContracts = (connection) => connection._contracts;\r\nexports._getContracts = _getContracts;\r\nconst getMulticall = (connection) => connection._multicall;\r\nconst getTimestampFromBlock = ({ timestamp }) => timestamp;\r\n/** @internal */\r\nconst _getBlockTimestamp = (connection, blockTag = \"latest\") => { var _a, _b; return (_b = (_a = \r\n// Get the timestamp via a contract call whenever possible, to make it batchable with other calls\r\ngetMulticall(connection)) === null || _a === void 0 ? void 0 : _a.getCurrentBlockTimestamp({ blockTag }).then(_utils_1.numberify)) !== null && _b !== void 0 ? _b : exports._getProvider(connection).getBlock(blockTag).then(getTimestampFromBlock); };\r\nexports._getBlockTimestamp = _getBlockTimestamp;\r\n/** @internal */\r\nconst _requireSigner = (connection) => { var _a; return (_a = connection.signer) !== null && _a !== void 0 ? _a : _utils_1.panic(new Error(\"Must be connected through a Signer\")); };\r\nexports._requireSigner = _requireSigner;\r\n/** @internal */\r\nconst _getProvider = (connection) => connection.provider;\r\nexports._getProvider = _getProvider;\r\n// TODO parameterize error message?\r\n/** @internal */\r\nconst _requireAddress = (connection, overrides) => { var _a, _b; return (_b = (_a = overrides === null || overrides === void 0 ? void 0 : overrides.from) !== null && _a !== void 0 ? _a : connection.userAddress) !== null && _b !== void 0 ? _b : _utils_1.panic(new Error(\"A user address is required\")); };\r\nexports._requireAddress = _requireAddress;\r\n/** @internal */\r\nconst _requireFrontendAddress = (connection) => { var _a; return (_a = connection.frontendTag) !== null && _a !== void 0 ? _a : _utils_1.panic(new Error(\"A frontend address is required\")); };\r\nexports._requireFrontendAddress = _requireFrontendAddress;\r\n/** @internal */\r\nconst _usingStore = (connection) => connection.useStore !== undefined;\r\nexports._usingStore = _usingStore;\r\n/**\r\n * Thrown when trying to connect to a network where Liquity is not deployed.\r\n *\r\n * @remarks\r\n * Thrown by {@link ReadableEthersLiquity.(connect:2)} and {@link EthersLiquity.(connect:2)}.\r\n *\r\n * @public\r\n */\r\nclass UnsupportedNetworkError extends Error {\r\n    /** @internal */\r\n    constructor(chainId) {\r\n        super(`Unsupported network (chainId = ${chainId})`);\r\n        this.name = \"UnsupportedNetworkError\";\r\n        this.chainId = chainId;\r\n    }\r\n}\r\nexports.UnsupportedNetworkError = UnsupportedNetworkError;\r\nconst getProviderAndSigner = (signerOrProvider) => {\r\n    var _a;\r\n    const provider = abstract_signer_1.Signer.isSigner(signerOrProvider)\r\n        ? (_a = signerOrProvider.provider) !== null && _a !== void 0 ? _a : _utils_1.panic(new Error(\"Signer must have a Provider\")) : signerOrProvider;\r\n    const signer = abstract_signer_1.Signer.isSigner(signerOrProvider) ? signerOrProvider : undefined;\r\n    return [provider, signer];\r\n};\r\n/** @internal */\r\nconst _connectToDeployment = (deployment, signerOrProvider, optionalParams) => connectionFrom(...getProviderAndSigner(signerOrProvider), contracts_1._connectToContracts(signerOrProvider, deployment), undefined, deployment, optionalParams);\r\nexports._connectToDeployment = _connectToDeployment;\r\nconst validStoreOptions = [\"blockPolled\"];\r\n/** @internal */\r\nfunction _connectByChainId(provider, signer, chainId, optionalParams) {\r\n    var _a;\r\n    const deployment = (_a = deployments[chainId]) !== null && _a !== void 0 ? _a : _utils_1.panic(new UnsupportedNetworkError(chainId));\r\n    return connectionFrom(provider, signer, contracts_1._connectToContracts(signer !== null && signer !== void 0 ? signer : provider, deployment), _Multicall_1._connectToMulticall(signer !== null && signer !== void 0 ? signer : provider, chainId), deployment, optionalParams);\r\n}\r\nexports._connectByChainId = _connectByChainId;\r\n/** @internal */\r\nconst _connect = async (signerOrProvider, optionalParams) => {\r\n    const [provider, signer] = getProviderAndSigner(signerOrProvider);\r\n    if (signer) {\r\n        if ((optionalParams === null || optionalParams === void 0 ? void 0 : optionalParams.userAddress) !== undefined) {\r\n            throw new Error(\"Can't override userAddress when connecting through Signer\");\r\n        }\r\n        optionalParams = {\r\n            ...optionalParams,\r\n            userAddress: await signer.getAddress()\r\n        };\r\n    }\r\n    return _connectByChainId(provider, signer, (await provider.getNetwork()).chainId, optionalParams);\r\n};\r\nexports._connect = _connect;\r\n//# sourceMappingURL=EthersLiquityConnection.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Percent = exports.Difference = exports.Decimal = void 0;\r\nconst assert_1 = __importDefault(require(\"assert\"));\r\nconst bignumber_1 = require(\"@ethersproject/bignumber\");\r\nconst getDigits = (numDigits) => TEN.pow(numDigits);\r\nconst MAX_UINT_256 = \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\";\r\nconst PRECISION = 18;\r\nconst ONE = bignumber_1.BigNumber.from(1);\r\nconst TEN = bignumber_1.BigNumber.from(10);\r\nconst DIGITS = getDigits(PRECISION);\r\nconst stringRepresentationFormat = /^[0-9]*(\\.[0-9]*)?(e[-+]?[0-9]+)?$/;\r\nconst trailingZeros = /0*$/;\r\nconst magnitudes = [\"\", \"K\", \"M\", \"B\", \"T\"];\r\nconst roundedMul = (x, y) => x.mul(y).add(Decimal.HALF.hex).div(DIGITS);\r\n/**\r\n * Fixed-point decimal bignumber with 18 digits of precision.\r\n *\r\n * @remarks\r\n * Used by Liquity libraries to precisely represent native currency (e.g. Ether), LUSD and LQTY\r\n * amounts, as well as derived metrics like collateral ratios.\r\n *\r\n * @public\r\n */\r\nclass Decimal {\r\n    constructor(bigNumber) {\r\n        if (bigNumber.isNegative()) {\r\n            throw new Error(\"negatives not supported by Decimal\");\r\n        }\r\n        this._bigNumber = bigNumber;\r\n    }\r\n    /** @internal */\r\n    get hex() {\r\n        return this._bigNumber.toHexString();\r\n    }\r\n    /** @internal */\r\n    get bigNumber() {\r\n        return this._bigNumber.toString();\r\n    }\r\n    static fromBigNumberString(bigNumberString) {\r\n        return new Decimal(bignumber_1.BigNumber.from(bigNumberString));\r\n    }\r\n    static _fromString(representation) {\r\n        if (!representation || !representation.match(stringRepresentationFormat)) {\r\n            throw new Error(`bad decimal format: \"${representation}\"`);\r\n        }\r\n        if (representation.includes(\"e\")) {\r\n            // eslint-disable-next-line prefer-const\r\n            let [coefficient, exponent] = representation.split(\"e\");\r\n            if (exponent.startsWith(\"-\")) {\r\n                return new Decimal(Decimal._fromString(coefficient)._bigNumber.div(TEN.pow(bignumber_1.BigNumber.from(exponent.substr(1)))));\r\n            }\r\n            if (exponent.startsWith(\"+\")) {\r\n                exponent = exponent.substr(1);\r\n            }\r\n            return new Decimal(Decimal._fromString(coefficient)._bigNumber.mul(TEN.pow(bignumber_1.BigNumber.from(exponent))));\r\n        }\r\n        if (!representation.includes(\".\")) {\r\n            return new Decimal(bignumber_1.BigNumber.from(representation).mul(DIGITS));\r\n        }\r\n        // eslint-disable-next-line prefer-const\r\n        let [characteristic, mantissa] = representation.split(\".\");\r\n        if (mantissa.length < PRECISION) {\r\n            mantissa += \"0\".repeat(PRECISION - mantissa.length);\r\n        }\r\n        else {\r\n            mantissa = mantissa.substr(0, PRECISION);\r\n        }\r\n        return new Decimal(bignumber_1.BigNumber.from(characteristic || 0)\r\n            .mul(DIGITS)\r\n            .add(mantissa));\r\n    }\r\n    static from(decimalish) {\r\n        switch (typeof decimalish) {\r\n            case \"object\":\r\n                if (decimalish instanceof Decimal) {\r\n                    return decimalish;\r\n                }\r\n                else {\r\n                    throw new Error(\"invalid Decimalish value\");\r\n                }\r\n            case \"string\":\r\n                return Decimal._fromString(decimalish);\r\n            case \"number\":\r\n                return Decimal._fromString(decimalish.toString());\r\n            default:\r\n                throw new Error(\"invalid Decimalish value\");\r\n        }\r\n    }\r\n    _toStringWithAutomaticPrecision() {\r\n        const characteristic = this._bigNumber.div(DIGITS);\r\n        const mantissa = this._bigNumber.mod(DIGITS);\r\n        if (mantissa.isZero()) {\r\n            return characteristic.toString();\r\n        }\r\n        else {\r\n            const paddedMantissa = mantissa.toString().padStart(PRECISION, \"0\");\r\n            const trimmedMantissa = paddedMantissa.replace(trailingZeros, \"\");\r\n            return characteristic.toString() + \".\" + trimmedMantissa;\r\n        }\r\n    }\r\n    _roundUp(precision) {\r\n        const halfDigit = getDigits(PRECISION - 1 - precision).mul(5);\r\n        return this._bigNumber.add(halfDigit);\r\n    }\r\n    _toStringWithPrecision(precision) {\r\n        if (precision < 0) {\r\n            throw new Error(\"precision must not be negative\");\r\n        }\r\n        const value = precision < PRECISION ? this._roundUp(precision) : this._bigNumber;\r\n        const characteristic = value.div(DIGITS);\r\n        const mantissa = value.mod(DIGITS);\r\n        if (precision === 0) {\r\n            return characteristic.toString();\r\n        }\r\n        else {\r\n            const paddedMantissa = mantissa.toString().padStart(PRECISION, \"0\");\r\n            const trimmedMantissa = paddedMantissa.substr(0, precision);\r\n            return characteristic.toString() + \".\" + trimmedMantissa;\r\n        }\r\n    }\r\n    toString(precision) {\r\n        if (this.infinite) {\r\n            return \"∞\";\r\n        }\r\n        else if (precision !== undefined) {\r\n            return this._toStringWithPrecision(precision);\r\n        }\r\n        else {\r\n            return this._toStringWithAutomaticPrecision();\r\n        }\r\n    }\r\n    prettify(precision = 2) {\r\n        const [characteristic, mantissa] = this.toString(precision).split(\".\");\r\n        const prettyCharacteristic = characteristic.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\");\r\n        return mantissa !== undefined ? prettyCharacteristic + \".\" + mantissa : prettyCharacteristic;\r\n    }\r\n    shorten() {\r\n        const characteristicLength = this.toString(0).length;\r\n        const magnitude = Math.min(Math.floor((characteristicLength - 1) / 3), magnitudes.length - 1);\r\n        const precision = Math.max(3 * (magnitude + 1) - characteristicLength, 0);\r\n        const normalized = this.div(new Decimal(getDigits(PRECISION + 3 * magnitude)));\r\n        return normalized.prettify(precision) + magnitudes[magnitude];\r\n    }\r\n    add(addend) {\r\n        return new Decimal(this._bigNumber.add(Decimal.from(addend)._bigNumber));\r\n    }\r\n    sub(subtrahend) {\r\n        return new Decimal(this._bigNumber.sub(Decimal.from(subtrahend)._bigNumber));\r\n    }\r\n    mul(multiplier) {\r\n        return new Decimal(this._bigNumber.mul(Decimal.from(multiplier)._bigNumber).div(DIGITS));\r\n    }\r\n    div(divider) {\r\n        divider = Decimal.from(divider);\r\n        if (divider.isZero) {\r\n            return Decimal.INFINITY;\r\n        }\r\n        return new Decimal(this._bigNumber.mul(DIGITS).div(divider._bigNumber));\r\n    }\r\n    /** @internal */\r\n    _divCeil(divider) {\r\n        divider = Decimal.from(divider);\r\n        if (divider.isZero) {\r\n            return Decimal.INFINITY;\r\n        }\r\n        return new Decimal(this._bigNumber.mul(DIGITS).add(divider._bigNumber.sub(ONE)).div(divider._bigNumber));\r\n    }\r\n    mulDiv(multiplier, divider) {\r\n        multiplier = Decimal.from(multiplier);\r\n        divider = Decimal.from(divider);\r\n        if (divider.isZero) {\r\n            return Decimal.INFINITY;\r\n        }\r\n        return new Decimal(this._bigNumber.mul(multiplier._bigNumber).div(divider._bigNumber));\r\n    }\r\n    pow(exponent) {\r\n        assert_1.default(Number.isInteger(exponent));\r\n        assert_1.default(0 <= exponent && exponent <= 0xffffffff); // Ensure we're safe to use bitwise ops\r\n        if (exponent === 0) {\r\n            return Decimal.ONE;\r\n        }\r\n        if (exponent === 1) {\r\n            return this;\r\n        }\r\n        let x = this._bigNumber;\r\n        let y = DIGITS;\r\n        for (; exponent > 1; exponent >>>= 1) {\r\n            if (exponent & 1) {\r\n                y = roundedMul(x, y);\r\n            }\r\n            x = roundedMul(x, x);\r\n        }\r\n        return new Decimal(roundedMul(x, y));\r\n    }\r\n    get isZero() {\r\n        return this._bigNumber.isZero();\r\n    }\r\n    get zero() {\r\n        if (this.isZero) {\r\n            return this;\r\n        }\r\n    }\r\n    get nonZero() {\r\n        if (!this.isZero) {\r\n            return this;\r\n        }\r\n    }\r\n    get infinite() {\r\n        if (this.eq(Decimal.INFINITY)) {\r\n            return this;\r\n        }\r\n    }\r\n    get finite() {\r\n        if (!this.eq(Decimal.INFINITY)) {\r\n            return this;\r\n        }\r\n    }\r\n    /** @internal */\r\n    get absoluteValue() {\r\n        return this;\r\n    }\r\n    lt(that) {\r\n        return this._bigNumber.lt(Decimal.from(that)._bigNumber);\r\n    }\r\n    eq(that) {\r\n        return this._bigNumber.eq(Decimal.from(that)._bigNumber);\r\n    }\r\n    gt(that) {\r\n        return this._bigNumber.gt(Decimal.from(that)._bigNumber);\r\n    }\r\n    gte(that) {\r\n        return this._bigNumber.gte(Decimal.from(that)._bigNumber);\r\n    }\r\n    lte(that) {\r\n        return this._bigNumber.lte(Decimal.from(that)._bigNumber);\r\n    }\r\n    static min(a, b) {\r\n        a = Decimal.from(a);\r\n        b = Decimal.from(b);\r\n        return a.lt(b) ? a : b;\r\n    }\r\n    static max(a, b) {\r\n        a = Decimal.from(a);\r\n        b = Decimal.from(b);\r\n        return a.gt(b) ? a : b;\r\n    }\r\n}\r\nexports.Decimal = Decimal;\r\nDecimal.INFINITY = Decimal.fromBigNumberString(MAX_UINT_256);\r\nDecimal.ZERO = Decimal.from(0);\r\nDecimal.HALF = Decimal.from(0.5);\r\nDecimal.ONE = Decimal.from(1);\r\n/** @alpha */\r\nclass Difference {\r\n    constructor(number) {\r\n        this._number = number;\r\n    }\r\n    static between(d1, d2) {\r\n        if (d1 === undefined || d2 === undefined) {\r\n            return new Difference(undefined);\r\n        }\r\n        d1 = Decimal.from(d1);\r\n        d2 = Decimal.from(d2);\r\n        if (d1.infinite && d2.infinite) {\r\n            return new Difference(undefined);\r\n        }\r\n        else if (d1.infinite) {\r\n            return new Difference({ sign: \"+\", absoluteValue: d1 });\r\n        }\r\n        else if (d2.infinite) {\r\n            return new Difference({ sign: \"-\", absoluteValue: d2 });\r\n        }\r\n        else if (d1.gt(d2)) {\r\n            return new Difference({ sign: \"+\", absoluteValue: Decimal.from(d1).sub(d2) });\r\n        }\r\n        else if (d2.gt(d1)) {\r\n            return new Difference({ sign: \"-\", absoluteValue: Decimal.from(d2).sub(d1) });\r\n        }\r\n        else {\r\n            return new Difference({ sign: \"\", absoluteValue: Decimal.ZERO });\r\n        }\r\n    }\r\n    toString(precision) {\r\n        if (!this._number) {\r\n            return \"N/A\";\r\n        }\r\n        return this._number.sign + this._number.absoluteValue.toString(precision);\r\n    }\r\n    prettify(precision) {\r\n        if (!this._number) {\r\n            return this.toString();\r\n        }\r\n        return this._number.sign + this._number.absoluteValue.prettify(precision);\r\n    }\r\n    mul(multiplier) {\r\n        return new Difference(this._number && {\r\n            sign: this._number.sign,\r\n            absoluteValue: this._number.absoluteValue.mul(multiplier)\r\n        });\r\n    }\r\n    get nonZero() {\r\n        var _a;\r\n        return ((_a = this._number) === null || _a === void 0 ? void 0 : _a.absoluteValue.nonZero) && this;\r\n    }\r\n    get positive() {\r\n        var _a;\r\n        return ((_a = this._number) === null || _a === void 0 ? void 0 : _a.sign) === \"+\" ? this : undefined;\r\n    }\r\n    get negative() {\r\n        var _a;\r\n        return ((_a = this._number) === null || _a === void 0 ? void 0 : _a.sign) === \"-\" ? this : undefined;\r\n    }\r\n    get absoluteValue() {\r\n        var _a;\r\n        return (_a = this._number) === null || _a === void 0 ? void 0 : _a.absoluteValue;\r\n    }\r\n    get infinite() {\r\n        var _a;\r\n        return ((_a = this._number) === null || _a === void 0 ? void 0 : _a.absoluteValue.infinite) && this;\r\n    }\r\n    get finite() {\r\n        var _a;\r\n        return ((_a = this._number) === null || _a === void 0 ? void 0 : _a.absoluteValue.finite) && this;\r\n    }\r\n}\r\nexports.Difference = Difference;\r\n/** @alpha */\r\nclass Percent {\r\n    constructor(ratio) {\r\n        this._percent = ratio.infinite || (ratio.mul && ratio.mul(100)) || ratio;\r\n    }\r\n    nonZeroish(precision) {\r\n        var _a;\r\n        const zeroish = `0.${\"0\".repeat(precision)}5`;\r\n        if ((_a = this._percent.absoluteValue) === null || _a === void 0 ? void 0 : _a.gte(zeroish)) {\r\n            return this;\r\n        }\r\n    }\r\n    toString(precision) {\r\n        return (this._percent.toString(precision) +\r\n            (this._percent.absoluteValue && !this._percent.infinite ? \"%\" : \"\"));\r\n    }\r\n    prettify() {\r\n        var _a, _b;\r\n        if ((_a = this._percent.absoluteValue) === null || _a === void 0 ? void 0 : _a.gte(\"1000\")) {\r\n            return this.toString(0);\r\n        }\r\n        else if ((_b = this._percent.absoluteValue) === null || _b === void 0 ? void 0 : _b.gte(\"10\")) {\r\n            return this.toString(1);\r\n        }\r\n        else {\r\n            return this.toString(2);\r\n        }\r\n    }\r\n}\r\nexports.Percent = Percent;\r\n//# sourceMappingURL=Decimal.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC20Faucet__factory = exports.ChickenBondManager__factory = exports.BLUSDToken__factory = exports.BondNFT__factory = exports.factories = void 0;\nexports.factories = __importStar(require(\"./factories\"));\nvar BondNFT__factory_1 = require(\"./factories/BondNFT__factory\");\nObject.defineProperty(exports, \"BondNFT__factory\", { enumerable: true, get: function () { return BondNFT__factory_1.BondNFT__factory; } });\nvar BLUSDToken__factory_1 = require(\"./factories/BLUSDToken__factory\");\nObject.defineProperty(exports, \"BLUSDToken__factory\", { enumerable: true, get: function () { return BLUSDToken__factory_1.BLUSDToken__factory; } });\nvar ChickenBondManager__factory_1 = require(\"./factories/ChickenBondManager__factory\");\nObject.defineProperty(exports, \"ChickenBondManager__factory\", { enumerable: true, get: function () { return ChickenBondManager__factory_1.ChickenBondManager__factory; } });\nvar ERC20Faucet__factory_1 = require(\"./factories/ERC20Faucet__factory\");\nObject.defineProperty(exports, \"ERC20Faucet__factory\", { enumerable: true, get: function () { return ERC20Faucet__factory_1.ERC20Faucet__factory; } });\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./src/constants\"), exports);\r\n__exportStar(require(\"./src/Decimal\"), exports);\r\n__exportStar(require(\"./src/Trove\"), exports);\r\n__exportStar(require(\"./src/StabilityDeposit\"), exports);\r\n__exportStar(require(\"./src/LQTYStake\"), exports);\r\n__exportStar(require(\"./src/Fees\"), exports);\r\n__exportStar(require(\"./src/ReadableLiquity\"), exports);\r\n__exportStar(require(\"./src/ObservableLiquity\"), exports);\r\n__exportStar(require(\"./src/TransactableLiquity\"), exports);\r\n__exportStar(require(\"./src/SendableLiquity\"), exports);\r\n__exportStar(require(\"./src/PopulatableLiquity\"), exports);\r\n__exportStar(require(\"./src/LiquityStore\"), exports);\r\n__exportStar(require(\"./src/_CachedReadableLiquity\"), exports);\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.promiseAllValues = exports.panic = exports.decimalify = exports.numberify = void 0;\r\nconst lib_base_1 = require(\"@liquity/lib-base\");\r\nconst numberify = (bigNumber) => bigNumber.toNumber();\r\nexports.numberify = numberify;\r\nconst decimalify = (bigNumber) => lib_base_1.Decimal.fromBigNumberString(bigNumber.toHexString());\r\nexports.decimalify = decimalify;\r\nconst panic = (e) => {\r\n    throw e;\r\n};\r\nexports.panic = panic;\r\nconst promiseAllValues = (object) => {\r\n    const keys = Object.keys(object);\r\n    return Promise.all(Object.values(object)).then(values => Object.fromEntries(values.map((value, i) => [keys[i], value])));\r\n};\r\nexports.promiseAllValues = promiseAllValues;\r\n//# sourceMappingURL=_utils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.MINIMUM_REDEMPTION_RATE = exports.MAXIMUM_BORROWING_RATE = exports.MINIMUM_BORROWING_RATE = exports.LUSD_MINIMUM_DEBT = exports.LUSD_MINIMUM_NET_DEBT = exports.LUSD_LIQUIDATION_RESERVE = exports.MINIMUM_COLLATERAL_RATIO = exports.CRITICAL_COLLATERAL_RATIO = void 0;\r\nconst Decimal_1 = require(\"./Decimal\");\r\n/**\r\n * Total collateral ratio below which recovery mode is triggered.\r\n *\r\n * @public\r\n */\r\nexports.CRITICAL_COLLATERAL_RATIO = Decimal_1.Decimal.from(1.5);\r\n/**\r\n * Collateral ratio below which a Trove can be liquidated in normal mode.\r\n *\r\n * @public\r\n */\r\nexports.MINIMUM_COLLATERAL_RATIO = Decimal_1.Decimal.from(1.1);\r\n/**\r\n * Amount of LUSD that's reserved for compensating the liquidator of a Trove.\r\n *\r\n * @public\r\n */\r\nexports.LUSD_LIQUIDATION_RESERVE = Decimal_1.Decimal.from(100);\r\n/**\r\n * A Trove must always have at least this much debt on top of the\r\n * {@link LUSD_LIQUIDATION_RESERVE | liquidation reserve}.\r\n *\r\n * @remarks\r\n * Any transaction that would result in a Trove with less net debt than this will be reverted.\r\n *\r\n * @public\r\n */\r\nexports.LUSD_MINIMUM_NET_DEBT = Decimal_1.Decimal.from(200);\r\n/**\r\n * A Trove must always have at least this much debt.\r\n *\r\n * @remarks\r\n * Any transaction that would result in a Trove with less debt than this will be reverted.\r\n *\r\n * @public\r\n */\r\nexports.LUSD_MINIMUM_DEBT = exports.LUSD_LIQUIDATION_RESERVE.add(exports.LUSD_MINIMUM_NET_DEBT);\r\n/**\r\n * Value that the {@link Fees.borrowingRate | borrowing rate} will never decay below.\r\n *\r\n * @remarks\r\n * Note that the borrowing rate can still be lower than this during recovery mode, when it's\r\n * overridden by zero.\r\n *\r\n * @public\r\n */\r\nexports.MINIMUM_BORROWING_RATE = Decimal_1.Decimal.from(0.005);\r\n/**\r\n * Value that the {@link Fees.borrowingRate | borrowing rate} will never exceed.\r\n *\r\n * @public\r\n */\r\nexports.MAXIMUM_BORROWING_RATE = Decimal_1.Decimal.from(0.05);\r\n/**\r\n * Value that the {@link Fees.redemptionRate | redemption rate} will never decay below.\r\n *\r\n * @public\r\n */\r\nexports.MINIMUM_REDEMPTION_RATE = Decimal_1.Decimal.from(0.005);\r\n//# sourceMappingURL=constants.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useLiquityStore = void 0;\r\nconst react_1 = require(\"react\");\r\nconst LiquityStoreProvider_1 = require(\"../components/LiquityStoreProvider\");\r\nconst useLiquityStore = () => {\r\n    const store = react_1.useContext(LiquityStoreProvider_1.LiquityStoreContext);\r\n    if (!store) {\r\n        throw new Error(\"You must provide a LiquityStore via LiquityStoreProvider\");\r\n    }\r\n    return store;\r\n};\r\nexports.useLiquityStore = useLiquityStore;\r\n//# sourceMappingURL=useLiquityStore.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebSocketAugmentedWeb3Provider = exports.WebSocketAugmented = exports.isWebSocketAugmentedProvider = void 0;\r\nconst providers_1 = require(\"@ethersproject/providers\");\r\nconst bytes_1 = require(\"@ethersproject/bytes\");\r\nconst WebSocketProvider_1 = require(\"./WebSocketProvider\");\r\nconst webSocketAugmentedProviders = [];\r\nconst isWebSocketAugmentedProvider = (provider) => webSocketAugmentedProviders.some(webSocketAugmentedProvider => provider instanceof webSocketAugmentedProvider);\r\nexports.isWebSocketAugmentedProvider = isWebSocketAugmentedProvider;\r\nconst isHeaderNotFoundError = (error) => typeof error === \"object\" &&\r\n    typeof error.message === \"string\" &&\r\n    (error.message.includes(\r\n    // geth\r\n    \"header not found\") ||\r\n        error.message.includes(\r\n        // openethereum\r\n        \"request is not supported because your node is running with state pruning\"));\r\nconst isTransactionHash = (eventName) => typeof eventName === \"string\" && bytes_1.hexDataLength(eventName) === 32;\r\nconst loadBalancingGlitchRetryIntervalMs = 200;\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\nconst waitFor = (f) => (g) => (t, { isActive }) => {\r\n    f(t).then(u => {\r\n        if (u !== null && isActive()) {\r\n            g(u);\r\n        }\r\n    });\r\n};\r\nconst pass = (f) => (t, _) => {\r\n    f(t);\r\n};\r\nconst passOnce = (f) => (t, { removeMe }) => {\r\n    f(t);\r\n    removeMe();\r\n};\r\nconst sequence = (f, g) => (h) => (t, context) => {\r\n    f(u => g(h)(u, context))(t, context);\r\n};\r\nconst defer = (f) => (t) => {\r\n    setTimeout(() => {\r\n        f(t);\r\n    }, 0);\r\n};\r\nconst WebSocketAugmented = (Base) => {\r\n    let webSocketAugmentedProvider = class extends Base {\r\n        constructor() {\r\n            super(...arguments);\r\n            this._seenBlock = 0;\r\n            this._blockListenerScheduled = false;\r\n            this._blockListeners = new Map();\r\n            this._blockListener = this._onBlock.bind(this);\r\n        }\r\n        openWebSocket(url, network) {\r\n            this._wsProvider = new WebSocketProvider_1.WebSocketProvider(url, network);\r\n            this._wsProvider.onClose = this._onWebSocketClose.bind(this);\r\n            this._wsParams = [url, network];\r\n            this._switchover();\r\n        }\r\n        _onWebSocketClose() {\r\n            this.closeWebSocket();\r\n            console.warn(\"WebSocketProvider disconnected. Retrying in 10 seconds.\");\r\n            this._reconnectTimerId = setTimeout(() => this.openWebSocket(...this._wsParams), 10000);\r\n        }\r\n        closeWebSocket() {\r\n            if (this._wsProvider) {\r\n                this._wsProvider.onClose = null;\r\n                this._wsProvider.close(1000); // normal closure\r\n                this._wsProvider = undefined;\r\n                this._switchover();\r\n                if (this._reconnectTimerId !== undefined) {\r\n                    clearTimeout(this._reconnectTimerId);\r\n                    this._reconnectTimerId = undefined;\r\n                }\r\n            }\r\n        }\r\n        _switchover() {\r\n            if (this._blockListeners.size > 0) {\r\n                if (this._wsProvider) {\r\n                    super.off(\"block\", this._blockListener);\r\n                }\r\n                this._startBlockEvents();\r\n            }\r\n        }\r\n        _onBlock(blockNumber) {\r\n            this._seenBlock = blockNumber;\r\n            if (!this._blockListenerScheduled) {\r\n                this._blockListenerScheduled = true;\r\n                setTimeout(() => {\r\n                    this._blockListenerScheduled = false;\r\n                    [...this._blockListeners].forEach(([, listener]) => listener(this._seenBlock));\r\n                }, 50);\r\n            }\r\n        }\r\n        async _retrySeenBlock(perform, startingBlock) {\r\n            for (let retries = 0;; ++retries) {\r\n                try {\r\n                    const ret = await perform();\r\n                    if (retries) {\r\n                        // console.log(`Glitch resolved after ${retries} ${retries === 1 ? \"retry\" : \"retries\"}.`);\r\n                    }\r\n                    return ret;\r\n                }\r\n                catch (error) {\r\n                    if (this._seenBlock !== startingBlock || !isHeaderNotFoundError(error)) {\r\n                        throw error;\r\n                    }\r\n                }\r\n                // console.warn(\"Load balancing glitch. Retrying...\");\r\n                await delay(loadBalancingGlitchRetryIntervalMs);\r\n            }\r\n        }\r\n        async call(transaction, blockTag) {\r\n            const resolvedBlockTag = await blockTag;\r\n            const perform = () => {\r\n                var _a;\r\n                return ((_a = this._wsProvider) === null || _a === void 0 ? void 0 : _a.isReady) ? this._wsProvider.call(transaction, resolvedBlockTag)\r\n                    : super.call(transaction, resolvedBlockTag);\r\n            };\r\n            return resolvedBlockTag === this._seenBlock\r\n                ? this._retrySeenBlock(perform, this._seenBlock)\r\n                : perform();\r\n        }\r\n        async getBalance(addressOrName, blockTag) {\r\n            const resolvedBlockTag = await blockTag;\r\n            const perform = () => {\r\n                var _a;\r\n                return ((_a = this._wsProvider) === null || _a === void 0 ? void 0 : _a.isReady) ? this._wsProvider.getBalance(addressOrName, resolvedBlockTag)\r\n                    : super.getBalance(addressOrName, resolvedBlockTag);\r\n            };\r\n            return resolvedBlockTag === this._seenBlock\r\n                ? this._retrySeenBlock(perform, this._seenBlock)\r\n                : perform();\r\n        }\r\n        _startBlockEvents() {\r\n            if (this._wsProvider) {\r\n                console.log(\"Listening for new blocks on WebSocketProvider\");\r\n                this._wsProvider.on(\"block\", this._blockListener);\r\n            }\r\n            else {\r\n                console.log(\"Listening for new blocks on basic Provider\");\r\n                super.on(\"block\", this._blockListener);\r\n            }\r\n        }\r\n        _stopBlockEvents() {\r\n            if (this._wsProvider) {\r\n                this._wsProvider.off(\"block\", this._blockListener);\r\n            }\r\n            else {\r\n                super.off(\"block\", this._blockListener);\r\n            }\r\n        }\r\n        _wrap(f, g) {\r\n            return [\r\n                f,\r\n                (u) => g(defer(f))(u, {\r\n                    isActive: () => this._blockListeners.has(f),\r\n                    removeMe: () => this._blockListeners.delete(f)\r\n                })\r\n            ];\r\n        }\r\n        on(eventName, listener) {\r\n            if (isTransactionHash(eventName)) {\r\n                const fetchReceipt = this._getTransactionReceiptFromLatest.bind(this, eventName);\r\n                const [, passReceipt] = this._wrap(listener, waitFor(fetchReceipt));\r\n                passReceipt(undefined);\r\n                return this._addBlockListener(listener, passReceipt);\r\n            }\r\n            else if (eventName === \"block\") {\r\n                return this._addBlockListener(...this._wrap(listener, pass));\r\n            }\r\n            else {\r\n                return super.on(eventName, listener);\r\n            }\r\n        }\r\n        _addBlockListener(key, blockListener) {\r\n            if (!this._blockListeners.has(key)) {\r\n                this._blockListeners.set(key, blockListener);\r\n                if (this._blockListeners.size === 1) {\r\n                    this._startBlockEvents();\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n        once(eventName, listener) {\r\n            if (isTransactionHash(eventName)) {\r\n                const fetchReceipt = this._getTransactionReceiptFromLatest.bind(this, eventName);\r\n                const [, passReceiptOnce] = this._wrap(listener, sequence(waitFor(fetchReceipt), passOnce));\r\n                passReceiptOnce(undefined);\r\n                return this._addBlockListener(listener, passReceiptOnce);\r\n            }\r\n            else if (eventName === \"block\") {\r\n                return this._addBlockListener(...this._wrap(listener, passOnce));\r\n            }\r\n            else {\r\n                return super.once(eventName, listener);\r\n            }\r\n        }\r\n        off(eventName, listener) {\r\n            if (isTransactionHash(eventName) || eventName === \"block\") {\r\n                return this._removeBlockListener(listener);\r\n            }\r\n            else {\r\n                return super.off(eventName, listener);\r\n            }\r\n        }\r\n        _removeBlockListener(key) {\r\n            if (this._blockListeners.has(key)) {\r\n                this._blockListeners.delete(key);\r\n                if (this._blockListeners.size === 0) {\r\n                    this._stopBlockEvents();\r\n                }\r\n            }\r\n            return this;\r\n        }\r\n        async getTransaction(transactionHash) {\r\n            var _a, _b;\r\n            const txPromises = [\r\n                super.getTransaction(transactionHash),\r\n                ...(((_a = this._wsProvider) === null || _a === void 0 ? void 0 : _a.isReady) ? [this._wsProvider.getTransaction(transactionHash)] : [])\r\n            ];\r\n            const first = await Promise.race(txPromises);\r\n            const tx = (_b = first !== null && first !== void 0 ? first : (await Promise.all(txPromises)).find(tx => tx !== null)) !== null && _b !== void 0 ? _b : null;\r\n            return tx;\r\n        }\r\n        getTransactionReceipt(transactionHash) {\r\n            var _a;\r\n            return ((_a = this._wsProvider) === null || _a === void 0 ? void 0 : _a.isReady) ? this._wsProvider.getTransactionReceipt(transactionHash)\r\n                : super.getTransactionReceipt(transactionHash);\r\n        }\r\n        getTransactionCount(addressOrName, blockTag) {\r\n            var _a;\r\n            return ((_a = this._wsProvider) === null || _a === void 0 ? void 0 : _a.isReady) ? this._wsProvider.getTransactionCount(addressOrName, blockTag)\r\n                : super.getTransactionCount(addressOrName, blockTag);\r\n        }\r\n        getBlock(blockHashOrBlockTag) {\r\n            var _a;\r\n            return ((_a = this._wsProvider) === null || _a === void 0 ? void 0 : _a.isReady) ? this._wsProvider.getBlock(blockHashOrBlockTag)\r\n                : super.getBlock(blockHashOrBlockTag);\r\n        }\r\n        getBlockWithTransactions(blockHashOrBlockTag) {\r\n            var _a;\r\n            return ((_a = this._wsProvider) === null || _a === void 0 ? void 0 : _a.isReady) ? this._wsProvider.getBlockWithTransactions(blockHashOrBlockTag)\r\n                : super.getBlockWithTransactions(blockHashOrBlockTag);\r\n        }\r\n        async _blockContainsTx(blockNumber, txHash) {\r\n            let block;\r\n            for (block = null; !block; block = await this.getBlock(blockNumber)) {\r\n                await delay(loadBalancingGlitchRetryIntervalMs);\r\n            }\r\n            return block.transactions.some(txHashInBlock => txHashInBlock === txHash);\r\n        }\r\n        async _getTransactionReceiptFromLatest(txHash, latestBlock) {\r\n            txHash = await txHash;\r\n            for (let retries = 0;; ++retries) {\r\n                const receipt = (await this.getTransactionReceipt(txHash));\r\n                if (latestBlock === undefined ||\r\n                    (receipt === null && !(await this._blockContainsTx(latestBlock, txHash))) ||\r\n                    (receipt !== null && receipt.blockNumber + receipt.confirmations - 1 >= latestBlock)) {\r\n                    if (retries) {\r\n                        // console.log(`Glitch resolved after ${retries} ${retries === 1 ? \"retry\" : \"retries\"}.`);\r\n                    }\r\n                    return receipt;\r\n                }\r\n                // console.warn(\"Load balancing glitch. Retrying...\");\r\n                await delay(loadBalancingGlitchRetryIntervalMs);\r\n            }\r\n        }\r\n        async waitForTransaction(txHash, confirmations, timeout) {\r\n            if (timeout !== undefined) {\r\n                // We don't use timeout, don't implement it\r\n                return super.waitForTransaction(txHash, confirmations, timeout);\r\n            }\r\n            let latestBlock = undefined;\r\n            for (;;) {\r\n                const receipt = await this._getTransactionReceiptFromLatest(txHash, latestBlock);\r\n                if (receipt !== null &&\r\n                    (confirmations === undefined || receipt.confirmations >= confirmations)) {\r\n                    return receipt;\r\n                }\r\n                latestBlock = await new Promise(resolve => this.once(\"block\", resolve));\r\n            }\r\n        }\r\n    };\r\n    webSocketAugmentedProviders.push(webSocketAugmentedProvider);\r\n    return webSocketAugmentedProvider;\r\n};\r\nexports.WebSocketAugmented = WebSocketAugmented;\r\nexports.WebSocketAugmentedWeb3Provider = exports.WebSocketAugmented(providers_1.Web3Provider);\r\n//# sourceMappingURL=WebSocketAugmentedProvider.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.WebSocketProvider = void 0;\r\nconst providers_1 = require(\"@ethersproject/providers\");\r\nclass WebSocketProvider extends providers_1.WebSocketProvider {\r\n    get isReady() {\r\n        return this._websocket.readyState === WebSocket.OPEN;\r\n    }\r\n    set onClose(closeListener) {\r\n        this._websocket.onclose = closeListener;\r\n    }\r\n    close(code) {\r\n        this._websocket.close(code);\r\n    }\r\n    async detectNetwork() {\r\n        return this.network;\r\n    }\r\n}\r\nexports.WebSocketProvider = WebSocketProvider;\r\n//# sourceMappingURL=WebSocketProvider.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports._connectToContracts = exports._uniTokenIsMock = exports._priceFeedIsTestnet = exports._LiquityContract = void 0;\r\nconst contracts_1 = require(\"@ethersproject/contracts\");\r\nconst ActivePool_json_1 = __importDefault(require(\"../abi/ActivePool.json\"));\r\nconst BorrowerOperations_json_1 = __importDefault(require(\"../abi/BorrowerOperations.json\"));\r\nconst TroveManager_json_1 = __importDefault(require(\"../abi/TroveManager.json\"));\r\nconst LUSDToken_json_1 = __importDefault(require(\"../abi/LUSDToken.json\"));\r\nconst CollSurplusPool_json_1 = __importDefault(require(\"../abi/CollSurplusPool.json\"));\r\nconst CommunityIssuance_json_1 = __importDefault(require(\"../abi/CommunityIssuance.json\"));\r\nconst DefaultPool_json_1 = __importDefault(require(\"../abi/DefaultPool.json\"));\r\nconst LQTYToken_json_1 = __importDefault(require(\"../abi/LQTYToken.json\"));\r\nconst HintHelpers_json_1 = __importDefault(require(\"../abi/HintHelpers.json\"));\r\nconst LockupContractFactory_json_1 = __importDefault(require(\"../abi/LockupContractFactory.json\"));\r\nconst LQTYStaking_json_1 = __importDefault(require(\"../abi/LQTYStaking.json\"));\r\nconst MultiTroveGetter_json_1 = __importDefault(require(\"../abi/MultiTroveGetter.json\"));\r\nconst PriceFeed_json_1 = __importDefault(require(\"../abi/PriceFeed.json\"));\r\nconst PriceFeedTestnet_json_1 = __importDefault(require(\"../abi/PriceFeedTestnet.json\"));\r\nconst SortedTroves_json_1 = __importDefault(require(\"../abi/SortedTroves.json\"));\r\nconst StabilityPool_json_1 = __importDefault(require(\"../abi/StabilityPool.json\"));\r\nconst GasPool_json_1 = __importDefault(require(\"../abi/GasPool.json\"));\r\nconst Unipool_json_1 = __importDefault(require(\"../abi/Unipool.json\"));\r\nconst IERC20_json_1 = __importDefault(require(\"../abi/IERC20.json\"));\r\nconst ERC20Mock_json_1 = __importDefault(require(\"../abi/ERC20Mock.json\"));\r\nconst buildEstimatedFunctions = (estimateFunctions, functions) => Object.fromEntries(Object.keys(estimateFunctions).map(functionName => [\r\n    functionName,\r\n    async (overrides, adjustEstimate, ...args) => {\r\n        if (overrides.gasLimit === undefined) {\r\n            const estimatedGas = await estimateFunctions[functionName](...args, overrides);\r\n            overrides = {\r\n                ...overrides,\r\n                gasLimit: adjustEstimate(estimatedGas)\r\n            };\r\n        }\r\n        return functions[functionName](...args, overrides);\r\n    }\r\n]));\r\nclass _LiquityContract extends contracts_1.Contract {\r\n    constructor(addressOrName, contractInterface, signerOrProvider) {\r\n        super(addressOrName, contractInterface, signerOrProvider);\r\n        // this.estimateAndCall = buildEstimatedFunctions(this.estimateGas, this);\r\n        this.estimateAndPopulate = buildEstimatedFunctions(this.estimateGas, this.populateTransaction);\r\n    }\r\n    extractEvents(logs, name) {\r\n        return logs\r\n            .filter(log => log.address === this.address)\r\n            .map(log => this.interface.parseLog(log))\r\n            .filter(e => e.name === name);\r\n    }\r\n}\r\nexports._LiquityContract = _LiquityContract;\r\n/** @internal */\r\nconst _priceFeedIsTestnet = (priceFeed) => \"setPrice\" in priceFeed;\r\nexports._priceFeedIsTestnet = _priceFeedIsTestnet;\r\n/** @internal */\r\nconst _uniTokenIsMock = (uniToken) => \"mint\" in uniToken;\r\nexports._uniTokenIsMock = _uniTokenIsMock;\r\nconst getAbi = (priceFeedIsTestnet, uniTokenIsMock) => ({\r\n    activePool: ActivePool_json_1.default,\r\n    borrowerOperations: BorrowerOperations_json_1.default,\r\n    troveManager: TroveManager_json_1.default,\r\n    lusdToken: LUSDToken_json_1.default,\r\n    communityIssuance: CommunityIssuance_json_1.default,\r\n    defaultPool: DefaultPool_json_1.default,\r\n    lqtyToken: LQTYToken_json_1.default,\r\n    hintHelpers: HintHelpers_json_1.default,\r\n    lockupContractFactory: LockupContractFactory_json_1.default,\r\n    lqtyStaking: LQTYStaking_json_1.default,\r\n    multiTroveGetter: MultiTroveGetter_json_1.default,\r\n    priceFeed: priceFeedIsTestnet ? PriceFeedTestnet_json_1.default : PriceFeed_json_1.default,\r\n    sortedTroves: SortedTroves_json_1.default,\r\n    stabilityPool: StabilityPool_json_1.default,\r\n    gasPool: GasPool_json_1.default,\r\n    collSurplusPool: CollSurplusPool_json_1.default,\r\n    unipool: Unipool_json_1.default,\r\n    uniToken: uniTokenIsMock ? ERC20Mock_json_1.default : IERC20_json_1.default\r\n});\r\nconst mapLiquityContracts = (contracts, f) => Object.fromEntries(Object.entries(contracts).map(([key, t]) => [key, f(t, key)]));\r\n/** @internal */\r\nconst _connectToContracts = (signerOrProvider, { addresses, _priceFeedIsTestnet, _uniTokenIsMock }) => {\r\n    const abi = getAbi(_priceFeedIsTestnet, _uniTokenIsMock);\r\n    return mapLiquityContracts(addresses, (address, key) => new _LiquityContract(address, abi[key], signerOrProvider));\r\n};\r\nexports._connectToContracts = _connectToContracts;\r\n//# sourceMappingURL=contracts.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ReadableEthersLiquity = void 0;\r\nconst lib_base_1 = require(\"@liquity/lib-base\");\r\nconst _utils_1 = require(\"./_utils\");\r\nconst EthersLiquityConnection_1 = require(\"./EthersLiquityConnection\");\r\nconst BlockPolledLiquityStore_1 = require(\"./BlockPolledLiquityStore\");\r\n// TODO: these are constant in the contracts, so it doesn't make sense to make a call for them,\r\n// but to avoid having to update them here when we change them in the contracts, we could read\r\n// them once after deployment and save them to LiquityDeployment.\r\nconst MINUTE_DECAY_FACTOR = lib_base_1.Decimal.from(\"0.999037758833783000\");\r\nconst BETA = lib_base_1.Decimal.from(2);\r\nvar BackendTroveStatus;\r\n(function (BackendTroveStatus) {\r\n    BackendTroveStatus[BackendTroveStatus[\"nonExistent\"] = 0] = \"nonExistent\";\r\n    BackendTroveStatus[BackendTroveStatus[\"active\"] = 1] = \"active\";\r\n    BackendTroveStatus[BackendTroveStatus[\"closedByOwner\"] = 2] = \"closedByOwner\";\r\n    BackendTroveStatus[BackendTroveStatus[\"closedByLiquidation\"] = 3] = \"closedByLiquidation\";\r\n    BackendTroveStatus[BackendTroveStatus[\"closedByRedemption\"] = 4] = \"closedByRedemption\";\r\n})(BackendTroveStatus || (BackendTroveStatus = {}));\r\nconst userTroveStatusFrom = (backendStatus) => backendStatus === BackendTroveStatus.nonExistent\r\n    ? \"nonExistent\"\r\n    : backendStatus === BackendTroveStatus.active\r\n        ? \"open\"\r\n        : backendStatus === BackendTroveStatus.closedByOwner\r\n            ? \"closedByOwner\"\r\n            : backendStatus === BackendTroveStatus.closedByLiquidation\r\n                ? \"closedByLiquidation\"\r\n                : backendStatus === BackendTroveStatus.closedByRedemption\r\n                    ? \"closedByRedemption\"\r\n                    : _utils_1.panic(new Error(`invalid backendStatus ${backendStatus}`));\r\nconst convertToDate = (timestamp) => new Date(timestamp * 1000);\r\nconst validSortingOptions = [\"ascendingCollateralRatio\", \"descendingCollateralRatio\"];\r\nconst expectPositiveInt = (obj, key) => {\r\n    if (obj[key] !== undefined) {\r\n        if (!Number.isInteger(obj[key])) {\r\n            throw new Error(`${key} must be an integer`);\r\n        }\r\n        if (obj[key] < 0) {\r\n            throw new Error(`${key} must not be negative`);\r\n        }\r\n    }\r\n};\r\n/**\r\n * Ethers-based implementation of {@link @liquity/lib-base#ReadableLiquity}.\r\n *\r\n * @public\r\n */\r\nclass ReadableEthersLiquity {\r\n    /** @internal */\r\n    constructor(connection) {\r\n        this.connection = connection;\r\n    }\r\n    /** @internal */\r\n    static _from(connection) {\r\n        const readable = new ReadableEthersLiquity(connection);\r\n        return connection.useStore === \"blockPolled\"\r\n            ? new _BlockPolledReadableEthersLiquity(readable)\r\n            : readable;\r\n    }\r\n    /**\r\n     * Connect to the Liquity protocol and create a `ReadableEthersLiquity` object.\r\n     *\r\n     * @param signerOrProvider - Ethers `Signer` or `Provider` to use for connecting to the Ethereum\r\n     *                           network.\r\n     * @param optionalParams - Optional parameters that can be used to customize the connection.\r\n     */\r\n    static async connect(signerOrProvider, optionalParams) {\r\n        return ReadableEthersLiquity._from(await EthersLiquityConnection_1._connect(signerOrProvider, optionalParams));\r\n    }\r\n    hasStore() {\r\n        return false;\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalRedistributed} */\r\n    async getTotalRedistributed(overrides) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const [collateral, debt] = await Promise.all([\r\n            troveManager.L_ETH({ ...overrides }).then(_utils_1.decimalify),\r\n            troveManager.L_LUSDDebt({ ...overrides }).then(_utils_1.decimalify)\r\n        ]);\r\n        return new lib_base_1.Trove(collateral, debt);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTroveBeforeRedistribution} */\r\n    async getTroveBeforeRedistribution(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const [trove, snapshot] = await Promise.all([\r\n            troveManager.Troves(address, { ...overrides }),\r\n            troveManager.rewardSnapshots(address, { ...overrides })\r\n        ]);\r\n        if (trove.status === BackendTroveStatus.active) {\r\n            return new lib_base_1.TroveWithPendingRedistribution(address, userTroveStatusFrom(trove.status), _utils_1.decimalify(trove.coll), _utils_1.decimalify(trove.debt), _utils_1.decimalify(trove.stake), new lib_base_1.Trove(_utils_1.decimalify(snapshot.ETH), _utils_1.decimalify(snapshot.LUSDDebt)));\r\n        }\r\n        else {\r\n            return new lib_base_1.TroveWithPendingRedistribution(address, userTroveStatusFrom(trove.status));\r\n        }\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTrove} */\r\n    async getTrove(address, overrides) {\r\n        const [trove, totalRedistributed] = await Promise.all([\r\n            this.getTroveBeforeRedistribution(address, overrides),\r\n            this.getTotalRedistributed(overrides)\r\n        ]);\r\n        return trove.applyRedistribution(totalRedistributed);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getNumberOfTroves} */\r\n    async getNumberOfTroves(overrides) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return (await troveManager.getTroveOwnersCount({ ...overrides })).toNumber();\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getPrice} */\r\n    getPrice(overrides) {\r\n        const { priceFeed } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return priceFeed.callStatic.fetchPrice({ ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** @internal */\r\n    async _getActivePool(overrides) {\r\n        const { activePool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const [activeCollateral, activeDebt] = await Promise.all([\r\n            activePool.getETH({ ...overrides }),\r\n            activePool.getLUSDDebt({ ...overrides })\r\n        ].map(getBigNumber => getBigNumber.then(_utils_1.decimalify)));\r\n        return new lib_base_1.Trove(activeCollateral, activeDebt);\r\n    }\r\n    /** @internal */\r\n    async _getDefaultPool(overrides) {\r\n        const { defaultPool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const [liquidatedCollateral, closedDebt] = await Promise.all([\r\n            defaultPool.getETH({ ...overrides }),\r\n            defaultPool.getLUSDDebt({ ...overrides })\r\n        ].map(getBigNumber => getBigNumber.then(_utils_1.decimalify)));\r\n        return new lib_base_1.Trove(liquidatedCollateral, closedDebt);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotal} */\r\n    async getTotal(overrides) {\r\n        const [activePool, defaultPool] = await Promise.all([\r\n            this._getActivePool(overrides),\r\n            this._getDefaultPool(overrides)\r\n        ]);\r\n        return activePool.add(defaultPool);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getStabilityDeposit} */\r\n    async getStabilityDeposit(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const [{ frontEndTag, initialValue }, currentLUSD, collateralGain, lqtyReward] = await Promise.all([\r\n            stabilityPool.deposits(address, { ...overrides }),\r\n            stabilityPool.getCompoundedLUSDDeposit(address, { ...overrides }),\r\n            stabilityPool.getDepositorETHGain(address, { ...overrides }),\r\n            stabilityPool.getDepositorLQTYGain(address, { ...overrides })\r\n        ]);\r\n        return new lib_base_1.StabilityDeposit(_utils_1.decimalify(initialValue), _utils_1.decimalify(currentLUSD), _utils_1.decimalify(collateralGain), _utils_1.decimalify(lqtyReward), frontEndTag);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getRemainingStabilityPoolLQTYReward} */\r\n    async getRemainingStabilityPoolLQTYReward(overrides) {\r\n        const { communityIssuance } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const issuanceCap = this.connection.totalStabilityPoolLQTYReward;\r\n        const totalLQTYIssued = _utils_1.decimalify(await communityIssuance.totalLQTYIssued({ ...overrides }));\r\n        // totalLQTYIssued approaches but never reaches issuanceCap\r\n        return issuanceCap.sub(totalLQTYIssued);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDInStabilityPool} */\r\n    getLUSDInStabilityPool(overrides) {\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return stabilityPool.getTotalLUSDDeposits({ ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDBalance} */\r\n    getLUSDBalance(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { lusdToken } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return lusdToken.balanceOf(address, { ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYBalance} */\r\n    getLQTYBalance(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { lqtyToken } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return lqtyToken.balanceOf(address, { ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getUniTokenBalance} */\r\n    getUniTokenBalance(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { uniToken } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return uniToken.balanceOf(address, { ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getUniTokenAllowance} */\r\n    getUniTokenAllowance(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { uniToken, unipool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return uniToken.allowance(address, unipool.address, { ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** @internal */\r\n    async _getRemainingLiquidityMiningLQTYRewardCalculator(overrides) {\r\n        const { unipool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const [totalSupply, rewardRate, periodFinish, lastUpdateTime] = await Promise.all([\r\n            unipool.totalSupply({ ...overrides }),\r\n            unipool.rewardRate({ ...overrides }).then(_utils_1.decimalify),\r\n            unipool.periodFinish({ ...overrides }).then(_utils_1.numberify),\r\n            unipool.lastUpdateTime({ ...overrides }).then(_utils_1.numberify)\r\n        ]);\r\n        return (blockTimestamp) => rewardRate.mul(Math.max(0, periodFinish - (totalSupply.isZero() ? lastUpdateTime : blockTimestamp)));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getRemainingLiquidityMiningLQTYReward} */\r\n    async getRemainingLiquidityMiningLQTYReward(overrides) {\r\n        const [calculateRemainingLQTY, blockTimestamp] = await Promise.all([\r\n            this._getRemainingLiquidityMiningLQTYRewardCalculator(overrides),\r\n            this._getBlockTimestamp(overrides === null || overrides === void 0 ? void 0 : overrides.blockTag)\r\n        ]);\r\n        return calculateRemainingLQTY(blockTimestamp);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLiquidityMiningStake} */\r\n    getLiquidityMiningStake(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { unipool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return unipool.balanceOf(address, { ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedUniTokens} */\r\n    getTotalStakedUniTokens(overrides) {\r\n        const { unipool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return unipool.totalSupply({ ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLiquidityMiningLQTYReward} */\r\n    getLiquidityMiningLQTYReward(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { unipool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return unipool.earned(address, { ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getCollateralSurplusBalance} */\r\n    getCollateralSurplusBalance(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { collSurplusPool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return collSurplusPool.getCollateral(address, { ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    async getTroves(params, overrides) {\r\n        var _a, _b;\r\n        const { multiTroveGetter } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        expectPositiveInt(params, \"first\");\r\n        expectPositiveInt(params, \"startingAt\");\r\n        if (!validSortingOptions.includes(params.sortedBy)) {\r\n            throw new Error(`sortedBy must be one of: ${validSortingOptions.map(x => `\"${x}\"`).join(\", \")}`);\r\n        }\r\n        const [totalRedistributed, backendTroves] = await Promise.all([\r\n            params.beforeRedistribution ? undefined : this.getTotalRedistributed({ ...overrides }),\r\n            multiTroveGetter.getMultipleSortedTroves(params.sortedBy === \"descendingCollateralRatio\"\r\n                ? (_a = params.startingAt) !== null && _a !== void 0 ? _a : 0 : -(((_b = params.startingAt) !== null && _b !== void 0 ? _b : 0) + 1), params.first, { ...overrides })\r\n        ]);\r\n        const troves = mapBackendTroves(backendTroves);\r\n        if (totalRedistributed) {\r\n            return troves.map(trove => trove.applyRedistribution(totalRedistributed));\r\n        }\r\n        else {\r\n            return troves;\r\n        }\r\n    }\r\n    /** @internal */\r\n    _getBlockTimestamp(blockTag) {\r\n        return EthersLiquityConnection_1._getBlockTimestamp(this.connection, blockTag);\r\n    }\r\n    /** @internal */\r\n    async _getFeesFactory(overrides) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const [lastFeeOperationTime, baseRateWithoutDecay] = await Promise.all([\r\n            troveManager.lastFeeOperationTime({ ...overrides }),\r\n            troveManager.baseRate({ ...overrides }).then(_utils_1.decimalify)\r\n        ]);\r\n        return (blockTimestamp, recoveryMode) => new lib_base_1.Fees(baseRateWithoutDecay, MINUTE_DECAY_FACTOR, BETA, convertToDate(lastFeeOperationTime.toNumber()), convertToDate(blockTimestamp), recoveryMode);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getFees} */\r\n    async getFees(overrides) {\r\n        const [createFees, total, price, blockTimestamp] = await Promise.all([\r\n            this._getFeesFactory(overrides),\r\n            this.getTotal(overrides),\r\n            this.getPrice(overrides),\r\n            this._getBlockTimestamp(overrides === null || overrides === void 0 ? void 0 : overrides.blockTag)\r\n        ]);\r\n        return createFees(blockTimestamp, total.collateralRatioIsBelowCritical(price));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYStake} */\r\n    async getLQTYStake(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this.connection));\r\n        const { lqtyStaking } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const [stakedLQTY, collateralGain, lusdGain] = await Promise.all([\r\n            lqtyStaking.stakes(address, { ...overrides }),\r\n            lqtyStaking.getPendingETHGain(address, { ...overrides }),\r\n            lqtyStaking.getPendingLUSDGain(address, { ...overrides })\r\n        ].map(getBigNumber => getBigNumber.then(_utils_1.decimalify)));\r\n        return new lib_base_1.LQTYStake(stakedLQTY, collateralGain, lusdGain);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedLQTY} */\r\n    async getTotalStakedLQTY(overrides) {\r\n        const { lqtyStaking } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        return lqtyStaking.totalLQTYStaked({ ...overrides }).then(_utils_1.decimalify);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getFrontendStatus} */\r\n    async getFrontendStatus(address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireFrontendAddress(this.connection));\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this.connection);\r\n        const { registered, kickbackRate } = await stabilityPool.frontEnds(address, { ...overrides });\r\n        return registered\r\n            ? { status: \"registered\", kickbackRate: _utils_1.decimalify(kickbackRate) }\r\n            : { status: \"unregistered\" };\r\n    }\r\n}\r\nexports.ReadableEthersLiquity = ReadableEthersLiquity;\r\nconst mapBackendTroves = (troves) => troves.map(trove => new lib_base_1.TroveWithPendingRedistribution(trove.owner, \"open\", // These Troves are coming from the SortedTroves list, so they must be open\r\n_utils_1.decimalify(trove.coll), _utils_1.decimalify(trove.debt), _utils_1.decimalify(trove.stake), new lib_base_1.Trove(_utils_1.decimalify(trove.snapshotETH), _utils_1.decimalify(trove.snapshotLUSDDebt))));\r\nclass _BlockPolledReadableEthersLiquity {\r\n    constructor(readable) {\r\n        const store = new BlockPolledLiquityStore_1.BlockPolledLiquityStore(readable);\r\n        this.store = store;\r\n        this.connection = readable.connection;\r\n        this._readable = readable;\r\n    }\r\n    _blockHit(overrides) {\r\n        return (!overrides ||\r\n            overrides.blockTag === undefined ||\r\n            overrides.blockTag === this.store.state.blockTag);\r\n    }\r\n    _userHit(address, overrides) {\r\n        return (this._blockHit(overrides) &&\r\n            (address === undefined || address === this.store.connection.userAddress));\r\n    }\r\n    _frontendHit(address, overrides) {\r\n        return (this._blockHit(overrides) &&\r\n            (address === undefined || address === this.store.connection.frontendTag));\r\n    }\r\n    hasStore(store) {\r\n        return store === undefined || store === \"blockPolled\";\r\n    }\r\n    async getTotalRedistributed(overrides) {\r\n        return this._blockHit(overrides)\r\n            ? this.store.state.totalRedistributed\r\n            : this._readable.getTotalRedistributed(overrides);\r\n    }\r\n    async getTroveBeforeRedistribution(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.troveBeforeRedistribution\r\n            : this._readable.getTroveBeforeRedistribution(address, overrides);\r\n    }\r\n    async getTrove(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.trove\r\n            : this._readable.getTrove(address, overrides);\r\n    }\r\n    async getNumberOfTroves(overrides) {\r\n        return this._blockHit(overrides)\r\n            ? this.store.state.numberOfTroves\r\n            : this._readable.getNumberOfTroves(overrides);\r\n    }\r\n    async getPrice(overrides) {\r\n        return this._blockHit(overrides) ? this.store.state.price : this._readable.getPrice(overrides);\r\n    }\r\n    async getTotal(overrides) {\r\n        return this._blockHit(overrides) ? this.store.state.total : this._readable.getTotal(overrides);\r\n    }\r\n    async getStabilityDeposit(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.stabilityDeposit\r\n            : this._readable.getStabilityDeposit(address, overrides);\r\n    }\r\n    async getRemainingStabilityPoolLQTYReward(overrides) {\r\n        return this._blockHit(overrides)\r\n            ? this.store.state.remainingStabilityPoolLQTYReward\r\n            : this._readable.getRemainingStabilityPoolLQTYReward(overrides);\r\n    }\r\n    async getLUSDInStabilityPool(overrides) {\r\n        return this._blockHit(overrides)\r\n            ? this.store.state.lusdInStabilityPool\r\n            : this._readable.getLUSDInStabilityPool(overrides);\r\n    }\r\n    async getLUSDBalance(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.lusdBalance\r\n            : this._readable.getLUSDBalance(address, overrides);\r\n    }\r\n    async getLQTYBalance(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.lqtyBalance\r\n            : this._readable.getLQTYBalance(address, overrides);\r\n    }\r\n    async getUniTokenBalance(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.uniTokenBalance\r\n            : this._readable.getUniTokenBalance(address, overrides);\r\n    }\r\n    async getUniTokenAllowance(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.uniTokenAllowance\r\n            : this._readable.getUniTokenAllowance(address, overrides);\r\n    }\r\n    async getRemainingLiquidityMiningLQTYReward(overrides) {\r\n        return this._blockHit(overrides)\r\n            ? this.store.state.remainingLiquidityMiningLQTYReward\r\n            : this._readable.getRemainingLiquidityMiningLQTYReward(overrides);\r\n    }\r\n    async getLiquidityMiningStake(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.liquidityMiningStake\r\n            : this._readable.getLiquidityMiningStake(address, overrides);\r\n    }\r\n    async getTotalStakedUniTokens(overrides) {\r\n        return this._blockHit(overrides)\r\n            ? this.store.state.totalStakedUniTokens\r\n            : this._readable.getTotalStakedUniTokens(overrides);\r\n    }\r\n    async getLiquidityMiningLQTYReward(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.liquidityMiningLQTYReward\r\n            : this._readable.getLiquidityMiningLQTYReward(address, overrides);\r\n    }\r\n    async getCollateralSurplusBalance(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.collateralSurplusBalance\r\n            : this._readable.getCollateralSurplusBalance(address, overrides);\r\n    }\r\n    async _getBlockTimestamp(blockTag) {\r\n        return this._blockHit({ blockTag })\r\n            ? this.store.state.blockTimestamp\r\n            : this._readable._getBlockTimestamp(blockTag);\r\n    }\r\n    async _getFeesFactory(overrides) {\r\n        return this._blockHit(overrides)\r\n            ? this.store.state._feesFactory\r\n            : this._readable._getFeesFactory(overrides);\r\n    }\r\n    async getFees(overrides) {\r\n        return this._blockHit(overrides) ? this.store.state.fees : this._readable.getFees(overrides);\r\n    }\r\n    async getLQTYStake(address, overrides) {\r\n        return this._userHit(address, overrides)\r\n            ? this.store.state.lqtyStake\r\n            : this._readable.getLQTYStake(address, overrides);\r\n    }\r\n    async getTotalStakedLQTY(overrides) {\r\n        return this._blockHit(overrides)\r\n            ? this.store.state.totalStakedLQTY\r\n            : this._readable.getTotalStakedLQTY(overrides);\r\n    }\r\n    async getFrontendStatus(address, overrides) {\r\n        return this._frontendHit(address, overrides)\r\n            ? this.store.state.frontend\r\n            : this._readable.getFrontendStatus(address, overrides);\r\n    }\r\n    getTroves(params, overrides) {\r\n        return this._readable.getTroves(params, overrides);\r\n    }\r\n    _getActivePool() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _getDefaultPool() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _getRemainingLiquidityMiningLQTYRewardCalculator() {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n//# sourceMappingURL=ReadableEthersLiquity.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlockPolledLiquityStore = void 0;\r\nconst constants_1 = require(\"@ethersproject/constants\");\r\nconst lib_base_1 = require(\"@liquity/lib-base\");\r\nconst _utils_1 = require(\"./_utils\");\r\nconst EthersLiquityConnection_1 = require(\"./EthersLiquityConnection\");\r\n/**\r\n * Ethers-based {@link @liquity/lib-base#LiquityStore} that updates state whenever there's a new\r\n * block.\r\n *\r\n * @public\r\n */\r\nclass BlockPolledLiquityStore extends lib_base_1.LiquityStore {\r\n    constructor(readable) {\r\n        super();\r\n        this.connection = readable.connection;\r\n        this._readable = readable;\r\n        this._provider = EthersLiquityConnection_1._getProvider(readable.connection);\r\n    }\r\n    async _getRiskiestTroveBeforeRedistribution(overrides) {\r\n        const riskiestTroves = await this._readable.getTroves({ first: 1, sortedBy: \"ascendingCollateralRatio\", beforeRedistribution: true }, overrides);\r\n        if (riskiestTroves.length === 0) {\r\n            return new lib_base_1.TroveWithPendingRedistribution(constants_1.AddressZero, \"nonExistent\");\r\n        }\r\n        return riskiestTroves[0];\r\n    }\r\n    async _get(blockTag) {\r\n        const { userAddress, frontendTag } = this.connection;\r\n        const { blockTimestamp, _feesFactory, calculateRemainingLQTY, ...baseState } = await _utils_1.promiseAllValues({\r\n            blockTimestamp: this._readable._getBlockTimestamp(blockTag),\r\n            _feesFactory: this._readable._getFeesFactory({ blockTag }),\r\n            calculateRemainingLQTY: this._readable._getRemainingLiquidityMiningLQTYRewardCalculator({\r\n                blockTag\r\n            }),\r\n            price: this._readable.getPrice({ blockTag }),\r\n            numberOfTroves: this._readable.getNumberOfTroves({ blockTag }),\r\n            totalRedistributed: this._readable.getTotalRedistributed({ blockTag }),\r\n            total: this._readable.getTotal({ blockTag }),\r\n            lusdInStabilityPool: this._readable.getLUSDInStabilityPool({ blockTag }),\r\n            totalStakedLQTY: this._readable.getTotalStakedLQTY({ blockTag }),\r\n            _riskiestTroveBeforeRedistribution: this._getRiskiestTroveBeforeRedistribution({ blockTag }),\r\n            totalStakedUniTokens: this._readable.getTotalStakedUniTokens({ blockTag }),\r\n            remainingStabilityPoolLQTYReward: this._readable.getRemainingStabilityPoolLQTYReward({\r\n                blockTag\r\n            }),\r\n            frontend: frontendTag\r\n                ? this._readable.getFrontendStatus(frontendTag, { blockTag })\r\n                : { status: \"unregistered\" },\r\n            ...(userAddress\r\n                ? {\r\n                    accountBalance: this._provider.getBalance(userAddress, blockTag).then(_utils_1.decimalify),\r\n                    lusdBalance: this._readable.getLUSDBalance(userAddress, { blockTag }),\r\n                    lqtyBalance: this._readable.getLQTYBalance(userAddress, { blockTag }),\r\n                    uniTokenBalance: this._readable.getUniTokenBalance(userAddress, { blockTag }),\r\n                    uniTokenAllowance: this._readable.getUniTokenAllowance(userAddress, { blockTag }),\r\n                    liquidityMiningStake: this._readable.getLiquidityMiningStake(userAddress, { blockTag }),\r\n                    liquidityMiningLQTYReward: this._readable.getLiquidityMiningLQTYReward(userAddress, {\r\n                        blockTag\r\n                    }),\r\n                    collateralSurplusBalance: this._readable.getCollateralSurplusBalance(userAddress, {\r\n                        blockTag\r\n                    }),\r\n                    troveBeforeRedistribution: this._readable.getTroveBeforeRedistribution(userAddress, {\r\n                        blockTag\r\n                    }),\r\n                    stabilityDeposit: this._readable.getStabilityDeposit(userAddress, { blockTag }),\r\n                    lqtyStake: this._readable.getLQTYStake(userAddress, { blockTag }),\r\n                    ownFrontend: this._readable.getFrontendStatus(userAddress, { blockTag })\r\n                }\r\n                : {\r\n                    accountBalance: lib_base_1.Decimal.ZERO,\r\n                    lusdBalance: lib_base_1.Decimal.ZERO,\r\n                    lqtyBalance: lib_base_1.Decimal.ZERO,\r\n                    uniTokenBalance: lib_base_1.Decimal.ZERO,\r\n                    uniTokenAllowance: lib_base_1.Decimal.ZERO,\r\n                    liquidityMiningStake: lib_base_1.Decimal.ZERO,\r\n                    liquidityMiningLQTYReward: lib_base_1.Decimal.ZERO,\r\n                    collateralSurplusBalance: lib_base_1.Decimal.ZERO,\r\n                    troveBeforeRedistribution: new lib_base_1.TroveWithPendingRedistribution(constants_1.AddressZero, \"nonExistent\"),\r\n                    stabilityDeposit: new lib_base_1.StabilityDeposit(lib_base_1.Decimal.ZERO, lib_base_1.Decimal.ZERO, lib_base_1.Decimal.ZERO, lib_base_1.Decimal.ZERO, constants_1.AddressZero),\r\n                    lqtyStake: new lib_base_1.LQTYStake(),\r\n                    ownFrontend: { status: \"unregistered\" }\r\n                })\r\n        });\r\n        return [\r\n            {\r\n                ...baseState,\r\n                _feesInNormalMode: _feesFactory(blockTimestamp, false),\r\n                remainingLiquidityMiningLQTYReward: calculateRemainingLQTY(blockTimestamp)\r\n            },\r\n            {\r\n                blockTag,\r\n                blockTimestamp,\r\n                _feesFactory\r\n            }\r\n        ];\r\n    }\r\n    /** @internal @override */\r\n    _doStart() {\r\n        this._get().then(state => {\r\n            if (!this._loaded) {\r\n                this._load(...state);\r\n            }\r\n        });\r\n        const blockListener = async (blockTag) => {\r\n            const state = await this._get(blockTag);\r\n            if (this._loaded) {\r\n                this._update(...state);\r\n            }\r\n            else {\r\n                this._load(...state);\r\n            }\r\n        };\r\n        this._provider.on(\"block\", blockListener);\r\n        return () => {\r\n            this._provider.off(\"block\", blockListener);\r\n        };\r\n    }\r\n    /** @internal @override */\r\n    _reduceExtra(oldState, stateUpdate) {\r\n        var _a, _b, _c;\r\n        return {\r\n            blockTag: (_a = stateUpdate.blockTag) !== null && _a !== void 0 ? _a : oldState.blockTag,\r\n            blockTimestamp: (_b = stateUpdate.blockTimestamp) !== null && _b !== void 0 ? _b : oldState.blockTimestamp,\r\n            _feesFactory: (_c = stateUpdate._feesFactory) !== null && _c !== void 0 ? _c : oldState._feesFactory\r\n        };\r\n    }\r\n}\r\nexports.BlockPolledLiquityStore = BlockPolledLiquityStore;\r\n//# sourceMappingURL=BlockPolledLiquityStore.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PopulatableEthersLiquity = exports.PopulatedEthersRedemption = exports.PopulatedEthersLiquityTransaction = exports.SentEthersLiquityTransaction = exports.EthersTransactionCancelledError = exports._RawErrorReason = exports._redeemMaxIterations = void 0;\r\nconst assert_1 = __importDefault(require(\"assert\"));\r\nconst constants_1 = require(\"@ethersproject/constants\");\r\nconst logger_1 = require(\"@ethersproject/logger\");\r\nconst lib_base_1 = require(\"@liquity/lib-base\");\r\nconst EthersLiquityConnection_1 = require(\"./EthersLiquityConnection\");\r\nconst _utils_1 = require(\"./_utils\");\r\nconst contracts_1 = require(\"./contracts\");\r\nconst parseLogs_1 = require(\"./parseLogs\");\r\nconst bigNumberMax = (a, b) => ((b === null || b === void 0 ? void 0 : b.gt(a)) ? b : a);\r\n// With 70 iterations redemption costs about ~10M gas, and each iteration accounts for ~138k more\r\n/** @internal */\r\nexports._redeemMaxIterations = 70;\r\nconst defaultBorrowingRateSlippageTolerance = lib_base_1.Decimal.from(0.005); // 0.5%\r\nconst defaultRedemptionRateSlippageTolerance = lib_base_1.Decimal.from(0.001); // 0.1%\r\nconst defaultBorrowingFeeDecayToleranceMinutes = 10;\r\nconst noDetails = () => undefined;\r\nconst compose = (f, g) => (_) => f(g(_));\r\nconst id = (t) => t;\r\n// Takes ~6-7K (use 10K to be safe) to update lastFeeOperationTime, but the cost of calculating the\r\n// decayed baseRate increases logarithmically with time elapsed since the last update.\r\nconst addGasForBaseRateUpdate = (maxMinutesSinceLastUpdate = 10) => (gas) => gas.add(10000 + 1414 * Math.ceil(Math.log2(maxMinutesSinceLastUpdate + 1)));\r\n// First traversal in ascending direction takes ~50K, then ~13.5K per extra step.\r\n// 80K should be enough for 3 steps, plus some extra to be safe.\r\nconst addGasForPotentialListTraversal = (gas) => gas.add(80000);\r\nconst addGasForLQTYIssuance = (gas) => gas.add(50000);\r\nconst addGasForUnipoolRewardUpdate = (gas) => gas.add(20000);\r\n// To get the best entropy available, we'd do something like:\r\n//\r\n// const bigRandomNumber = () =>\r\n//   BigNumber.from(\r\n//     `0x${Array.from(crypto.getRandomValues(new Uint32Array(8)))\r\n//       .map(u32 => u32.toString(16).padStart(8, \"0\"))\r\n//       .join(\"\")}`\r\n//   );\r\n//\r\n// However, Window.crypto is browser-specific. Since we only use this for randomly picking Troves\r\n// during the search for hints, Math.random() will do fine, too.\r\n//\r\n// This returns a random integer between 0 and Number.MAX_SAFE_INTEGER\r\nconst randomInteger = () => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER);\r\n// Maximum number of trials to perform in a single getApproxHint() call. If the number of trials\r\n// required to get a statistically \"good\" hint is larger than this, the search for the hint will\r\n// be broken up into multiple getApproxHint() calls.\r\n//\r\n// This should be low enough to work with popular public Ethereum providers like Infura without\r\n// triggering any fair use limits.\r\nconst maxNumberOfTrialsAtOnce = 2500;\r\nfunction* generateTrials(totalNumberOfTrials) {\r\n    assert_1.default(Number.isInteger(totalNumberOfTrials) && totalNumberOfTrials > 0);\r\n    while (totalNumberOfTrials) {\r\n        const numberOfTrials = Math.min(totalNumberOfTrials, maxNumberOfTrialsAtOnce);\r\n        yield numberOfTrials;\r\n        totalNumberOfTrials -= numberOfTrials;\r\n    }\r\n}\r\n/** @internal */\r\nvar _RawErrorReason;\r\n(function (_RawErrorReason) {\r\n    _RawErrorReason[\"TRANSACTION_FAILED\"] = \"transaction failed\";\r\n    _RawErrorReason[\"TRANSACTION_CANCELLED\"] = \"cancelled\";\r\n    _RawErrorReason[\"TRANSACTION_REPLACED\"] = \"replaced\";\r\n    _RawErrorReason[\"TRANSACTION_REPRICED\"] = \"repriced\";\r\n})(_RawErrorReason = exports._RawErrorReason || (exports._RawErrorReason = {}));\r\nconst transactionReplacementReasons = [\r\n    _RawErrorReason.TRANSACTION_CANCELLED,\r\n    _RawErrorReason.TRANSACTION_REPLACED,\r\n    _RawErrorReason.TRANSACTION_REPRICED\r\n];\r\nconst hasProp = (o, p) => p in o;\r\nconst isTransactionFailedError = (error) => hasProp(error, \"code\") &&\r\n    error.code === logger_1.ErrorCode.CALL_EXCEPTION &&\r\n    hasProp(error, \"reason\") &&\r\n    error.reason === _RawErrorReason.TRANSACTION_FAILED;\r\nconst isTransactionReplacedError = (error) => hasProp(error, \"code\") &&\r\n    error.code === logger_1.ErrorCode.TRANSACTION_REPLACED &&\r\n    hasProp(error, \"reason\") &&\r\n    transactionReplacementReasons.includes(error.reason);\r\n/**\r\n * Thrown when a transaction is cancelled or replaced by a different transaction.\r\n *\r\n * @public\r\n */\r\nclass EthersTransactionCancelledError extends Error {\r\n    /** @internal */\r\n    constructor(rawError) {\r\n        assert_1.default(rawError.reason !== _RawErrorReason.TRANSACTION_REPRICED);\r\n        super(`Transaction ${rawError.reason}`);\r\n        this.name = \"TransactionCancelledError\";\r\n        this.rawReplacementReceipt = rawError.receipt;\r\n        this.rawError = rawError;\r\n    }\r\n}\r\nexports.EthersTransactionCancelledError = EthersTransactionCancelledError;\r\n/**\r\n * A transaction that has already been sent.\r\n *\r\n * @remarks\r\n * Returned by {@link SendableEthersLiquity} functions.\r\n *\r\n * @public\r\n */\r\nclass SentEthersLiquityTransaction {\r\n    /** @internal */\r\n    constructor(rawSentTransaction, connection, parse) {\r\n        this.rawSentTransaction = rawSentTransaction;\r\n        this._connection = connection;\r\n        this._parse = parse;\r\n    }\r\n    _receiptFrom(rawReceipt) {\r\n        return rawReceipt\r\n            ? rawReceipt.status\r\n                ? lib_base_1._successfulReceipt(rawReceipt, this._parse(rawReceipt), () => parseLogs_1.logsToString(rawReceipt, EthersLiquityConnection_1._getContracts(this._connection)))\r\n                : lib_base_1._failedReceipt(rawReceipt)\r\n            : lib_base_1._pendingReceipt;\r\n    }\r\n    async _waitForRawReceipt(confirmations) {\r\n        try {\r\n            return await this.rawSentTransaction.wait(confirmations);\r\n        }\r\n        catch (error) {\r\n            if (error instanceof Error) {\r\n                if (isTransactionFailedError(error)) {\r\n                    return error.receipt;\r\n                }\r\n                if (isTransactionReplacedError(error)) {\r\n                    if (error.cancelled) {\r\n                        throw new EthersTransactionCancelledError(error);\r\n                    }\r\n                    else {\r\n                        return error.receipt;\r\n                    }\r\n                }\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SentLiquityTransaction.getReceipt} */\r\n    async getReceipt() {\r\n        return this._receiptFrom(await this._waitForRawReceipt(0));\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#SentLiquityTransaction.waitForReceipt}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    async waitForReceipt() {\r\n        const receipt = this._receiptFrom(await this._waitForRawReceipt());\r\n        assert_1.default(receipt.status !== \"pending\");\r\n        return receipt;\r\n    }\r\n}\r\nexports.SentEthersLiquityTransaction = SentEthersLiquityTransaction;\r\nconst normalizeBorrowingOperationOptionalParams = (maxBorrowingRateOrOptionalParams, currentBorrowingRate) => {\r\n    var _a, _b;\r\n    if (maxBorrowingRateOrOptionalParams === undefined) {\r\n        return {\r\n            maxBorrowingRate: (_a = currentBorrowingRate === null || currentBorrowingRate === void 0 ? void 0 : currentBorrowingRate.add(defaultBorrowingRateSlippageTolerance)) !== null && _a !== void 0 ? _a : lib_base_1.Decimal.ZERO,\r\n            borrowingFeeDecayToleranceMinutes: defaultBorrowingFeeDecayToleranceMinutes\r\n        };\r\n    }\r\n    else if (typeof maxBorrowingRateOrOptionalParams === \"number\" ||\r\n        typeof maxBorrowingRateOrOptionalParams === \"string\" ||\r\n        maxBorrowingRateOrOptionalParams instanceof lib_base_1.Decimal) {\r\n        return {\r\n            maxBorrowingRate: lib_base_1.Decimal.from(maxBorrowingRateOrOptionalParams),\r\n            borrowingFeeDecayToleranceMinutes: defaultBorrowingFeeDecayToleranceMinutes\r\n        };\r\n    }\r\n    else {\r\n        const { maxBorrowingRate, borrowingFeeDecayToleranceMinutes } = maxBorrowingRateOrOptionalParams;\r\n        return {\r\n            maxBorrowingRate: maxBorrowingRate !== undefined\r\n                ? lib_base_1.Decimal.from(maxBorrowingRate)\r\n                : (_b = currentBorrowingRate === null || currentBorrowingRate === void 0 ? void 0 : currentBorrowingRate.add(defaultBorrowingRateSlippageTolerance)) !== null && _b !== void 0 ? _b : lib_base_1.Decimal.ZERO,\r\n            borrowingFeeDecayToleranceMinutes: borrowingFeeDecayToleranceMinutes !== null && borrowingFeeDecayToleranceMinutes !== void 0 ? borrowingFeeDecayToleranceMinutes : defaultBorrowingFeeDecayToleranceMinutes\r\n        };\r\n    }\r\n};\r\n/**\r\n * A transaction that has been prepared for sending.\r\n *\r\n * @remarks\r\n * Returned by {@link PopulatableEthersLiquity} functions.\r\n *\r\n * @public\r\n */\r\nclass PopulatedEthersLiquityTransaction {\r\n    /** @internal */\r\n    constructor(rawPopulatedTransaction, connection, parse, gasHeadroom) {\r\n        this.rawPopulatedTransaction = rawPopulatedTransaction;\r\n        this._connection = connection;\r\n        this._parse = parse;\r\n        if (gasHeadroom !== undefined) {\r\n            this.gasHeadroom = gasHeadroom;\r\n        }\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatedLiquityTransaction.send} */\r\n    async send() {\r\n        return new SentEthersLiquityTransaction(await EthersLiquityConnection_1._requireSigner(this._connection).sendTransaction(this.rawPopulatedTransaction), this._connection, this._parse);\r\n    }\r\n}\r\nexports.PopulatedEthersLiquityTransaction = PopulatedEthersLiquityTransaction;\r\n/**\r\n * {@inheritDoc @liquity/lib-base#PopulatedRedemption}\r\n *\r\n * @public\r\n */\r\nclass PopulatedEthersRedemption extends PopulatedEthersLiquityTransaction {\r\n    /** @internal */\r\n    constructor(rawPopulatedTransaction, connection, attemptedLUSDAmount, redeemableLUSDAmount, increaseAmountByMinimumNetDebt) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(connection);\r\n        super(rawPopulatedTransaction, connection, ({ logs }) => troveManager\r\n            .extractEvents(logs, \"Redemption\")\r\n            .map(({ args: { _ETHSent, _ETHFee, _actualLUSDAmount, _attemptedLUSDAmount } }) => ({\r\n            attemptedLUSDAmount: _utils_1.decimalify(_attemptedLUSDAmount),\r\n            actualLUSDAmount: _utils_1.decimalify(_actualLUSDAmount),\r\n            collateralTaken: _utils_1.decimalify(_ETHSent),\r\n            fee: _utils_1.decimalify(_ETHFee)\r\n        }))[0]);\r\n        this.attemptedLUSDAmount = attemptedLUSDAmount;\r\n        this.redeemableLUSDAmount = redeemableLUSDAmount;\r\n        this.isTruncated = redeemableLUSDAmount.lt(attemptedLUSDAmount);\r\n        this._increaseAmountByMinimumNetDebt = increaseAmountByMinimumNetDebt;\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatedRedemption.increaseAmountByMinimumNetDebt} */\r\n    increaseAmountByMinimumNetDebt(maxRedemptionRate) {\r\n        if (!this._increaseAmountByMinimumNetDebt) {\r\n            throw new Error(\"PopulatedEthersRedemption: increaseAmountByMinimumNetDebt() can \" +\r\n                \"only be called when amount is truncated\");\r\n        }\r\n        return this._increaseAmountByMinimumNetDebt(maxRedemptionRate);\r\n    }\r\n}\r\nexports.PopulatedEthersRedemption = PopulatedEthersRedemption;\r\n/**\r\n * Ethers-based implementation of {@link @liquity/lib-base#PopulatableLiquity}.\r\n *\r\n * @public\r\n */\r\nclass PopulatableEthersLiquity {\r\n    constructor(readable) {\r\n        this._readable = readable;\r\n    }\r\n    _wrapSimpleTransaction(rawPopulatedTransaction) {\r\n        return new PopulatedEthersLiquityTransaction(rawPopulatedTransaction, this._readable.connection, noDetails);\r\n    }\r\n    _wrapTroveChangeWithFees(params, rawPopulatedTransaction, gasHeadroom) {\r\n        const { borrowerOperations } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return new PopulatedEthersLiquityTransaction(rawPopulatedTransaction, this._readable.connection, ({ logs }) => {\r\n            const [newTrove] = borrowerOperations\r\n                .extractEvents(logs, \"TroveUpdated\")\r\n                .map(({ args: { _coll, _debt } }) => new lib_base_1.Trove(_utils_1.decimalify(_coll), _utils_1.decimalify(_debt)));\r\n            const [fee] = borrowerOperations\r\n                .extractEvents(logs, \"LUSDBorrowingFeePaid\")\r\n                .map(({ args: { _LUSDFee } }) => _utils_1.decimalify(_LUSDFee));\r\n            return {\r\n                params,\r\n                newTrove,\r\n                fee\r\n            };\r\n        }, gasHeadroom);\r\n    }\r\n    async _wrapTroveClosure(rawPopulatedTransaction) {\r\n        const { activePool, lusdToken } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return new PopulatedEthersLiquityTransaction(rawPopulatedTransaction, this._readable.connection, ({ logs, from: userAddress }) => {\r\n            const [repayLUSD] = lusdToken\r\n                .extractEvents(logs, \"Transfer\")\r\n                .filter(({ args: { from, to } }) => from === userAddress && to === constants_1.AddressZero)\r\n                .map(({ args: { value } }) => _utils_1.decimalify(value));\r\n            const [withdrawCollateral] = activePool\r\n                .extractEvents(logs, \"EtherSent\")\r\n                .filter(({ args: { _to } }) => _to === userAddress)\r\n                .map(({ args: { _amount } }) => _utils_1.decimalify(_amount));\r\n            return {\r\n                params: repayLUSD.nonZero ? { withdrawCollateral, repayLUSD } : { withdrawCollateral }\r\n            };\r\n        });\r\n    }\r\n    _wrapLiquidation(rawPopulatedTransaction) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return new PopulatedEthersLiquityTransaction(rawPopulatedTransaction, this._readable.connection, ({ logs }) => {\r\n            const liquidatedAddresses = troveManager\r\n                .extractEvents(logs, \"TroveLiquidated\")\r\n                .map(({ args: { _borrower } }) => _borrower);\r\n            const [totals] = troveManager\r\n                .extractEvents(logs, \"Liquidation\")\r\n                .map(({ args: { _LUSDGasCompensation, _collGasCompensation, _liquidatedColl, _liquidatedDebt } }) => ({\r\n                collateralGasCompensation: _utils_1.decimalify(_collGasCompensation),\r\n                lusdGasCompensation: _utils_1.decimalify(_LUSDGasCompensation),\r\n                totalLiquidated: new lib_base_1.Trove(_utils_1.decimalify(_liquidatedColl), _utils_1.decimalify(_liquidatedDebt))\r\n            }));\r\n            return {\r\n                liquidatedAddresses,\r\n                ...totals\r\n            };\r\n        });\r\n    }\r\n    _extractStabilityPoolGainsWithdrawalDetails(logs) {\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const [newLUSDDeposit] = stabilityPool\r\n            .extractEvents(logs, \"UserDepositChanged\")\r\n            .map(({ args: { _newDeposit } }) => _utils_1.decimalify(_newDeposit));\r\n        const [[collateralGain, lusdLoss]] = stabilityPool\r\n            .extractEvents(logs, \"ETHGainWithdrawn\")\r\n            .map(({ args: { _ETH, _LUSDLoss } }) => [_utils_1.decimalify(_ETH), _utils_1.decimalify(_LUSDLoss)]);\r\n        const [lqtyReward] = stabilityPool\r\n            .extractEvents(logs, \"LQTYPaidToDepositor\")\r\n            .map(({ args: { _LQTY } }) => _utils_1.decimalify(_LQTY));\r\n        return {\r\n            lusdLoss,\r\n            newLUSDDeposit,\r\n            collateralGain,\r\n            lqtyReward\r\n        };\r\n    }\r\n    _wrapStabilityPoolGainsWithdrawal(rawPopulatedTransaction) {\r\n        return new PopulatedEthersLiquityTransaction(rawPopulatedTransaction, this._readable.connection, ({ logs }) => this._extractStabilityPoolGainsWithdrawalDetails(logs));\r\n    }\r\n    _wrapStabilityDepositTopup(change, rawPopulatedTransaction) {\r\n        return new PopulatedEthersLiquityTransaction(rawPopulatedTransaction, this._readable.connection, ({ logs }) => ({\r\n            ...this._extractStabilityPoolGainsWithdrawalDetails(logs),\r\n            change\r\n        }));\r\n    }\r\n    async _wrapStabilityDepositWithdrawal(rawPopulatedTransaction) {\r\n        const { stabilityPool, lusdToken } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return new PopulatedEthersLiquityTransaction(rawPopulatedTransaction, this._readable.connection, ({ logs, from: userAddress }) => {\r\n            const gainsWithdrawalDetails = this._extractStabilityPoolGainsWithdrawalDetails(logs);\r\n            const [withdrawLUSD] = lusdToken\r\n                .extractEvents(logs, \"Transfer\")\r\n                .filter(({ args: { from, to } }) => from === stabilityPool.address && to === userAddress)\r\n                .map(({ args: { value } }) => _utils_1.decimalify(value));\r\n            return {\r\n                ...gainsWithdrawalDetails,\r\n                change: { withdrawLUSD, withdrawAllLUSD: gainsWithdrawalDetails.newLUSDDeposit.isZero }\r\n            };\r\n        });\r\n    }\r\n    _wrapCollateralGainTransfer(rawPopulatedTransaction) {\r\n        const { borrowerOperations } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return new PopulatedEthersLiquityTransaction(rawPopulatedTransaction, this._readable.connection, ({ logs }) => {\r\n            const [newTrove] = borrowerOperations\r\n                .extractEvents(logs, \"TroveUpdated\")\r\n                .map(({ args: { _coll, _debt } }) => new lib_base_1.Trove(_utils_1.decimalify(_coll), _utils_1.decimalify(_debt)));\r\n            return {\r\n                ...this._extractStabilityPoolGainsWithdrawalDetails(logs),\r\n                newTrove\r\n            };\r\n        });\r\n    }\r\n    async _findHintsForNominalCollateralRatio(nominalCollateralRatio, ownAddress) {\r\n        const { sortedTroves, hintHelpers } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const numberOfTroves = await this._readable.getNumberOfTroves();\r\n        if (!numberOfTroves) {\r\n            return [constants_1.AddressZero, constants_1.AddressZero];\r\n        }\r\n        if (nominalCollateralRatio.infinite) {\r\n            return [constants_1.AddressZero, await sortedTroves.getFirst()];\r\n        }\r\n        const totalNumberOfTrials = Math.ceil(10 * Math.sqrt(numberOfTroves));\r\n        const [firstTrials, ...restOfTrials] = generateTrials(totalNumberOfTrials);\r\n        const collectApproxHint = ({ latestRandomSeed, results }, numberOfTrials) => hintHelpers\r\n            .getApproxHint(nominalCollateralRatio.hex, numberOfTrials, latestRandomSeed)\r\n            .then(({ latestRandomSeed, ...result }) => ({\r\n            latestRandomSeed,\r\n            results: [...results, result]\r\n        }));\r\n        const { results } = await restOfTrials.reduce((p, numberOfTrials) => p.then(state => collectApproxHint(state, numberOfTrials)), collectApproxHint({ latestRandomSeed: randomInteger(), results: [] }, firstTrials));\r\n        const { hintAddress } = results.reduce((a, b) => (a.diff.lt(b.diff) ? a : b));\r\n        let [prev, next] = await sortedTroves.findInsertPosition(nominalCollateralRatio.hex, hintAddress, hintAddress);\r\n        if (ownAddress) {\r\n            // In the case of reinsertion, the address of the Trove being reinserted is not a usable hint,\r\n            // because it is deleted from the list before the reinsertion.\r\n            // \"Jump over\" the Trove to get the proper hint.\r\n            if (prev === ownAddress) {\r\n                prev = await sortedTroves.getPrev(prev);\r\n            }\r\n            else if (next === ownAddress) {\r\n                next = await sortedTroves.getNext(next);\r\n            }\r\n        }\r\n        // Don't use `address(0)` as hint as it can result in huge gas cost.\r\n        // (See https://github.com/liquity/dev/issues/600).\r\n        if (prev === constants_1.AddressZero) {\r\n            prev = next;\r\n        }\r\n        else if (next === constants_1.AddressZero) {\r\n            next = prev;\r\n        }\r\n        return [prev, next];\r\n    }\r\n    async _findHints(trove, ownAddress) {\r\n        if (trove instanceof lib_base_1.TroveWithPendingRedistribution) {\r\n            throw new Error(\"Rewards must be applied to this Trove\");\r\n        }\r\n        return this._findHintsForNominalCollateralRatio(trove._nominalCollateralRatio, ownAddress);\r\n    }\r\n    async _findRedemptionHints(amount) {\r\n        const { hintHelpers } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const price = await this._readable.getPrice();\r\n        const { firstRedemptionHint, partialRedemptionHintNICR, truncatedLUSDamount } = await hintHelpers.getRedemptionHints(amount.hex, price.hex, exports._redeemMaxIterations);\r\n        const [partialRedemptionUpperHint, partialRedemptionLowerHint] = partialRedemptionHintNICR.isZero()\r\n            ? [constants_1.AddressZero, constants_1.AddressZero]\r\n            : await this._findHintsForNominalCollateralRatio(_utils_1.decimalify(partialRedemptionHintNICR)\r\n            // XXX: if we knew the partially redeemed Trove's address, we'd pass it here\r\n            );\r\n        return [\r\n            _utils_1.decimalify(truncatedLUSDamount),\r\n            firstRedemptionHint,\r\n            partialRedemptionUpperHint,\r\n            partialRedemptionLowerHint,\r\n            partialRedemptionHintNICR\r\n        ];\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.openTrove} */\r\n    async openTrove(params, maxBorrowingRateOrOptionalParams, overrides) {\r\n        const { borrowerOperations } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const normalizedParams = lib_base_1._normalizeTroveCreation(params);\r\n        const { depositCollateral, borrowLUSD } = normalizedParams;\r\n        const [fees, blockTimestamp, total, price] = await Promise.all([\r\n            this._readable._getFeesFactory(),\r\n            this._readable._getBlockTimestamp(),\r\n            this._readable.getTotal(),\r\n            this._readable.getPrice()\r\n        ]);\r\n        const recoveryMode = total.collateralRatioIsBelowCritical(price);\r\n        const decayBorrowingRate = (seconds) => fees(blockTimestamp + seconds, recoveryMode).borrowingRate();\r\n        const currentBorrowingRate = decayBorrowingRate(0);\r\n        const newTrove = lib_base_1.Trove.create(normalizedParams, currentBorrowingRate);\r\n        const hints = await this._findHints(newTrove);\r\n        const { maxBorrowingRate, borrowingFeeDecayToleranceMinutes } = normalizeBorrowingOperationOptionalParams(maxBorrowingRateOrOptionalParams, currentBorrowingRate);\r\n        const txParams = (borrowLUSD) => [\r\n            maxBorrowingRate.hex,\r\n            borrowLUSD.hex,\r\n            ...hints,\r\n            { value: depositCollateral.hex, ...overrides }\r\n        ];\r\n        let gasHeadroom;\r\n        if ((overrides === null || overrides === void 0 ? void 0 : overrides.gasLimit) === undefined) {\r\n            const decayedBorrowingRate = decayBorrowingRate(60 * borrowingFeeDecayToleranceMinutes);\r\n            const decayedTrove = lib_base_1.Trove.create(normalizedParams, decayedBorrowingRate);\r\n            const { borrowLUSD: borrowLUSDSimulatingDecay } = lib_base_1.Trove.recreate(decayedTrove, currentBorrowingRate);\r\n            if (decayedTrove.debt.lt(lib_base_1.LUSD_MINIMUM_DEBT)) {\r\n                throw new Error(`Trove's debt might fall below ${lib_base_1.LUSD_MINIMUM_DEBT} ` +\r\n                    `within ${borrowingFeeDecayToleranceMinutes} minutes`);\r\n            }\r\n            const [gasNow, gasLater] = await Promise.all([\r\n                borrowerOperations.estimateGas.openTrove(...txParams(borrowLUSD)),\r\n                borrowerOperations.estimateGas.openTrove(...txParams(borrowLUSDSimulatingDecay))\r\n            ]);\r\n            const gasLimit = addGasForBaseRateUpdate(borrowingFeeDecayToleranceMinutes)(bigNumberMax(addGasForPotentialListTraversal(gasNow), gasLater));\r\n            gasHeadroom = gasLimit.sub(gasNow).toNumber();\r\n            overrides = { ...overrides, gasLimit };\r\n        }\r\n        return this._wrapTroveChangeWithFees(normalizedParams, await borrowerOperations.populateTransaction.openTrove(...txParams(borrowLUSD)), gasHeadroom);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.closeTrove} */\r\n    async closeTrove(overrides) {\r\n        const { borrowerOperations } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapTroveClosure(await borrowerOperations.estimateAndPopulate.closeTrove({ ...overrides }, id));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.depositCollateral} */\r\n    depositCollateral(amount, overrides) {\r\n        return this.adjustTrove({ depositCollateral: amount }, undefined, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawCollateral} */\r\n    withdrawCollateral(amount, overrides) {\r\n        return this.adjustTrove({ withdrawCollateral: amount }, undefined, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.borrowLUSD} */\r\n    borrowLUSD(amount, maxBorrowingRate, overrides) {\r\n        return this.adjustTrove({ borrowLUSD: amount }, maxBorrowingRate, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.repayLUSD} */\r\n    repayLUSD(amount, overrides) {\r\n        return this.adjustTrove({ repayLUSD: amount }, undefined, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.adjustTrove} */\r\n    async adjustTrove(params, maxBorrowingRateOrOptionalParams, overrides) {\r\n        const address = EthersLiquityConnection_1._requireAddress(this._readable.connection, overrides);\r\n        const { borrowerOperations } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const normalizedParams = lib_base_1._normalizeTroveAdjustment(params);\r\n        const { depositCollateral, withdrawCollateral, borrowLUSD, repayLUSD } = normalizedParams;\r\n        const [trove, feeVars] = await Promise.all([\r\n            this._readable.getTrove(address),\r\n            borrowLUSD &&\r\n                _utils_1.promiseAllValues({\r\n                    fees: this._readable._getFeesFactory(),\r\n                    blockTimestamp: this._readable._getBlockTimestamp(),\r\n                    total: this._readable.getTotal(),\r\n                    price: this._readable.getPrice()\r\n                })\r\n        ]);\r\n        const decayBorrowingRate = (seconds) => feeVars === null || feeVars === void 0 ? void 0 : feeVars.fees(feeVars.blockTimestamp + seconds, feeVars.total.collateralRatioIsBelowCritical(feeVars.price)).borrowingRate();\r\n        const currentBorrowingRate = decayBorrowingRate(0);\r\n        const adjustedTrove = trove.adjust(normalizedParams, currentBorrowingRate);\r\n        const hints = await this._findHints(adjustedTrove, address);\r\n        const { maxBorrowingRate, borrowingFeeDecayToleranceMinutes } = normalizeBorrowingOperationOptionalParams(maxBorrowingRateOrOptionalParams, currentBorrowingRate);\r\n        const txParams = (borrowLUSD) => {\r\n            var _a;\r\n            return [\r\n                maxBorrowingRate.hex,\r\n                (withdrawCollateral !== null && withdrawCollateral !== void 0 ? withdrawCollateral : lib_base_1.Decimal.ZERO).hex,\r\n                ((_a = borrowLUSD !== null && borrowLUSD !== void 0 ? borrowLUSD : repayLUSD) !== null && _a !== void 0 ? _a : lib_base_1.Decimal.ZERO).hex,\r\n                !!borrowLUSD,\r\n                ...hints,\r\n                { value: depositCollateral === null || depositCollateral === void 0 ? void 0 : depositCollateral.hex, ...overrides }\r\n            ];\r\n        };\r\n        let gasHeadroom;\r\n        if ((overrides === null || overrides === void 0 ? void 0 : overrides.gasLimit) === undefined) {\r\n            const decayedBorrowingRate = decayBorrowingRate(60 * borrowingFeeDecayToleranceMinutes);\r\n            const decayedTrove = trove.adjust(normalizedParams, decayedBorrowingRate);\r\n            const { borrowLUSD: borrowLUSDSimulatingDecay } = trove.adjustTo(decayedTrove, currentBorrowingRate);\r\n            if (decayedTrove.debt.lt(lib_base_1.LUSD_MINIMUM_DEBT)) {\r\n                throw new Error(`Trove's debt might fall below ${lib_base_1.LUSD_MINIMUM_DEBT} ` +\r\n                    `within ${borrowingFeeDecayToleranceMinutes} minutes`);\r\n            }\r\n            const [gasNow, gasLater] = await Promise.all([\r\n                borrowerOperations.estimateGas.adjustTrove(...txParams(borrowLUSD)),\r\n                borrowLUSD &&\r\n                    borrowerOperations.estimateGas.adjustTrove(...txParams(borrowLUSDSimulatingDecay))\r\n            ]);\r\n            let gasLimit = bigNumberMax(addGasForPotentialListTraversal(gasNow), gasLater);\r\n            if (borrowLUSD) {\r\n                gasLimit = addGasForBaseRateUpdate(borrowingFeeDecayToleranceMinutes)(gasLimit);\r\n            }\r\n            gasHeadroom = gasLimit.sub(gasNow).toNumber();\r\n            overrides = { ...overrides, gasLimit };\r\n        }\r\n        return this._wrapTroveChangeWithFees(normalizedParams, await borrowerOperations.populateTransaction.adjustTrove(...txParams(borrowLUSD)), gasHeadroom);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.claimCollateralSurplus} */\r\n    async claimCollateralSurplus(overrides) {\r\n        const { borrowerOperations } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await borrowerOperations.estimateAndPopulate.claimCollateral({ ...overrides }, id));\r\n    }\r\n    /** @internal */\r\n    async setPrice(price, overrides) {\r\n        const { priceFeed } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        if (!contracts_1._priceFeedIsTestnet(priceFeed)) {\r\n            throw new Error(\"setPrice() unavailable on this deployment of Liquity\");\r\n        }\r\n        return this._wrapSimpleTransaction(await priceFeed.estimateAndPopulate.setPrice({ ...overrides }, id, lib_base_1.Decimal.from(price).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.liquidate} */\r\n    async liquidate(address, overrides) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        if (Array.isArray(address)) {\r\n            return this._wrapLiquidation(await troveManager.estimateAndPopulate.batchLiquidateTroves({ ...overrides }, addGasForLQTYIssuance, address));\r\n        }\r\n        else {\r\n            return this._wrapLiquidation(await troveManager.estimateAndPopulate.liquidate({ ...overrides }, addGasForLQTYIssuance, address));\r\n        }\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.liquidateUpTo} */\r\n    async liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapLiquidation(await troveManager.estimateAndPopulate.liquidateTroves({ ...overrides }, addGasForLQTYIssuance, maximumNumberOfTrovesToLiquidate));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.depositLUSDInStabilityPool} */\r\n    async depositLUSDInStabilityPool(amount, frontendTag, overrides) {\r\n        var _a;\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const depositLUSD = lib_base_1.Decimal.from(amount);\r\n        return this._wrapStabilityDepositTopup({ depositLUSD }, await stabilityPool.estimateAndPopulate.provideToSP({ ...overrides }, addGasForLQTYIssuance, depositLUSD.hex, (_a = frontendTag !== null && frontendTag !== void 0 ? frontendTag : this._readable.connection.frontendTag) !== null && _a !== void 0 ? _a : constants_1.AddressZero));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawLUSDFromStabilityPool} */\r\n    async withdrawLUSDFromStabilityPool(amount, overrides) {\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapStabilityDepositWithdrawal(await stabilityPool.estimateAndPopulate.withdrawFromSP({ ...overrides }, addGasForLQTYIssuance, lib_base_1.Decimal.from(amount).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawGainsFromStabilityPool} */\r\n    async withdrawGainsFromStabilityPool(overrides) {\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapStabilityPoolGainsWithdrawal(await stabilityPool.estimateAndPopulate.withdrawFromSP({ ...overrides }, addGasForLQTYIssuance, lib_base_1.Decimal.ZERO.hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.transferCollateralGainToTrove} */\r\n    async transferCollateralGainToTrove(overrides) {\r\n        const address = EthersLiquityConnection_1._requireAddress(this._readable.connection, overrides);\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const [initialTrove, stabilityDeposit] = await Promise.all([\r\n            this._readable.getTrove(address),\r\n            this._readable.getStabilityDeposit(address)\r\n        ]);\r\n        const finalTrove = initialTrove.addCollateral(stabilityDeposit.collateralGain);\r\n        return this._wrapCollateralGainTransfer(await stabilityPool.estimateAndPopulate.withdrawETHGainToTrove({ ...overrides }, compose(addGasForPotentialListTraversal, addGasForLQTYIssuance), ...(await this._findHints(finalTrove, address))));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.sendLUSD} */\r\n    async sendLUSD(toAddress, amount, overrides) {\r\n        const { lusdToken } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await lusdToken.estimateAndPopulate.transfer({ ...overrides }, id, toAddress, lib_base_1.Decimal.from(amount).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.sendLQTY} */\r\n    async sendLQTY(toAddress, amount, overrides) {\r\n        const { lqtyToken } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await lqtyToken.estimateAndPopulate.transfer({ ...overrides }, id, toAddress, lib_base_1.Decimal.from(amount).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.redeemLUSD} */\r\n    async redeemLUSD(amount, maxRedemptionRate, overrides) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const attemptedLUSDAmount = lib_base_1.Decimal.from(amount);\r\n        const [fees, total, [truncatedAmount, firstRedemptionHint, ...partialHints]] = await Promise.all([\r\n            this._readable.getFees(),\r\n            this._readable.getTotal(),\r\n            this._findRedemptionHints(attemptedLUSDAmount)\r\n        ]);\r\n        if (truncatedAmount.isZero) {\r\n            throw new Error(`redeemLUSD: amount too low to redeem (try at least ${lib_base_1.LUSD_MINIMUM_NET_DEBT})`);\r\n        }\r\n        const defaultMaxRedemptionRate = (amount) => lib_base_1.Decimal.min(fees.redemptionRate(amount.div(total.debt)).add(defaultRedemptionRateSlippageTolerance), lib_base_1.Decimal.ONE);\r\n        const populateRedemption = async (attemptedLUSDAmount, maxRedemptionRate, truncatedAmount = attemptedLUSDAmount, partialHints = [constants_1.AddressZero, constants_1.AddressZero, 0]) => {\r\n            const maxRedemptionRateOrDefault = maxRedemptionRate !== undefined\r\n                ? lib_base_1.Decimal.from(maxRedemptionRate)\r\n                : defaultMaxRedemptionRate(truncatedAmount);\r\n            return new PopulatedEthersRedemption(await troveManager.estimateAndPopulate.redeemCollateral({ ...overrides }, addGasForBaseRateUpdate(), truncatedAmount.hex, firstRedemptionHint, ...partialHints, exports._redeemMaxIterations, maxRedemptionRateOrDefault.hex), this._readable.connection, attemptedLUSDAmount, truncatedAmount, truncatedAmount.lt(attemptedLUSDAmount)\r\n                ? newMaxRedemptionRate => populateRedemption(truncatedAmount.add(lib_base_1.LUSD_MINIMUM_NET_DEBT), newMaxRedemptionRate !== null && newMaxRedemptionRate !== void 0 ? newMaxRedemptionRate : maxRedemptionRate)\r\n                : undefined);\r\n        };\r\n        return populateRedemption(attemptedLUSDAmount, maxRedemptionRate, truncatedAmount, partialHints);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.stakeLQTY} */\r\n    async stakeLQTY(amount, overrides) {\r\n        const { lqtyStaking } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await lqtyStaking.estimateAndPopulate.stake({ ...overrides }, id, lib_base_1.Decimal.from(amount).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.unstakeLQTY} */\r\n    async unstakeLQTY(amount, overrides) {\r\n        const { lqtyStaking } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await lqtyStaking.estimateAndPopulate.unstake({ ...overrides }, id, lib_base_1.Decimal.from(amount).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawGainsFromStaking} */\r\n    withdrawGainsFromStaking(overrides) {\r\n        return this.unstakeLQTY(lib_base_1.Decimal.ZERO, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.registerFrontend} */\r\n    async registerFrontend(kickbackRate, overrides) {\r\n        const { stabilityPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await stabilityPool.estimateAndPopulate.registerFrontEnd({ ...overrides }, id, lib_base_1.Decimal.from(kickbackRate).hex));\r\n    }\r\n    /** @internal */\r\n    async _mintUniToken(amount, address, overrides) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this._readable.connection, overrides));\r\n        const { uniToken } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        if (!contracts_1._uniTokenIsMock(uniToken)) {\r\n            throw new Error(\"_mintUniToken() unavailable on this deployment of Liquity\");\r\n        }\r\n        return this._wrapSimpleTransaction(await uniToken.estimateAndPopulate.mint({ ...overrides }, id, address, lib_base_1.Decimal.from(amount).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.approveUniTokens} */\r\n    async approveUniTokens(allowance, overrides) {\r\n        const { uniToken, unipool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await uniToken.estimateAndPopulate.approve({ ...overrides }, id, unipool.address, lib_base_1.Decimal.from(allowance !== null && allowance !== void 0 ? allowance : lib_base_1.Decimal.INFINITY).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.stakeUniTokens} */\r\n    async stakeUniTokens(amount, overrides) {\r\n        const { unipool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await unipool.estimateAndPopulate.stake({ ...overrides }, addGasForUnipoolRewardUpdate, lib_base_1.Decimal.from(amount).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.unstakeUniTokens} */\r\n    async unstakeUniTokens(amount, overrides) {\r\n        const { unipool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await unipool.estimateAndPopulate.withdraw({ ...overrides }, addGasForUnipoolRewardUpdate, lib_base_1.Decimal.from(amount).hex));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawLQTYRewardFromLiquidityMining} */\r\n    async withdrawLQTYRewardFromLiquidityMining(overrides) {\r\n        const { unipool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await unipool.estimateAndPopulate.claimReward({ ...overrides }, addGasForUnipoolRewardUpdate));\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#PopulatableLiquity.exitLiquidityMining} */\r\n    async exitLiquidityMining(overrides) {\r\n        const { unipool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        return this._wrapSimpleTransaction(await unipool.estimateAndPopulate.withdrawAndClaim({ ...overrides }, addGasForUnipoolRewardUpdate));\r\n    }\r\n}\r\nexports.PopulatableEthersLiquity = PopulatableEthersLiquity;\r\n//# sourceMappingURL=PopulatableEthersLiquity.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SendableEthersLiquity = void 0;\r\nconst sendTransaction = (tx) => tx.send();\r\n/**\r\n * Ethers-based implementation of {@link @liquity/lib-base#SendableLiquity}.\r\n *\r\n * @public\r\n */\r\nclass SendableEthersLiquity {\r\n    constructor(populatable) {\r\n        this._populate = populatable;\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.openTrove} */\r\n    async openTrove(params, maxBorrowingRateOrOptionalParams, overrides) {\r\n        return this._populate\r\n            .openTrove(params, maxBorrowingRateOrOptionalParams, overrides)\r\n            .then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.closeTrove} */\r\n    closeTrove(overrides) {\r\n        return this._populate.closeTrove(overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.adjustTrove} */\r\n    adjustTrove(params, maxBorrowingRateOrOptionalParams, overrides) {\r\n        return this._populate\r\n            .adjustTrove(params, maxBorrowingRateOrOptionalParams, overrides)\r\n            .then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositCollateral} */\r\n    depositCollateral(amount, overrides) {\r\n        return this._populate.depositCollateral(amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawCollateral} */\r\n    withdrawCollateral(amount, overrides) {\r\n        return this._populate.withdrawCollateral(amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.borrowLUSD} */\r\n    borrowLUSD(amount, maxBorrowingRate, overrides) {\r\n        return this._populate.borrowLUSD(amount, maxBorrowingRate, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.repayLUSD} */\r\n    repayLUSD(amount, overrides) {\r\n        return this._populate.repayLUSD(amount, overrides).then(sendTransaction);\r\n    }\r\n    /** @internal */\r\n    setPrice(price, overrides) {\r\n        return this._populate.setPrice(price, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidate} */\r\n    liquidate(address, overrides) {\r\n        return this._populate.liquidate(address, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.liquidateUpTo} */\r\n    liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides) {\r\n        return this._populate\r\n            .liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides)\r\n            .then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.depositLUSDInStabilityPool} */\r\n    depositLUSDInStabilityPool(amount, frontendTag, overrides) {\r\n        return this._populate\r\n            .depositLUSDInStabilityPool(amount, frontendTag, overrides)\r\n            .then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLUSDFromStabilityPool} */\r\n    withdrawLUSDFromStabilityPool(amount, overrides) {\r\n        return this._populate.withdrawLUSDFromStabilityPool(amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStabilityPool} */\r\n    withdrawGainsFromStabilityPool(overrides) {\r\n        return this._populate.withdrawGainsFromStabilityPool(overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.transferCollateralGainToTrove} */\r\n    transferCollateralGainToTrove(overrides) {\r\n        return this._populate.transferCollateralGainToTrove(overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLUSD} */\r\n    sendLUSD(toAddress, amount, overrides) {\r\n        return this._populate.sendLUSD(toAddress, amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.sendLQTY} */\r\n    sendLQTY(toAddress, amount, overrides) {\r\n        return this._populate.sendLQTY(toAddress, amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.redeemLUSD} */\r\n    redeemLUSD(amount, maxRedemptionRate, overrides) {\r\n        return this._populate.redeemLUSD(amount, maxRedemptionRate, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.claimCollateralSurplus} */\r\n    claimCollateralSurplus(overrides) {\r\n        return this._populate.claimCollateralSurplus(overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeLQTY} */\r\n    stakeLQTY(amount, overrides) {\r\n        return this._populate.stakeLQTY(amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeLQTY} */\r\n    unstakeLQTY(amount, overrides) {\r\n        return this._populate.unstakeLQTY(amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStaking} */\r\n    withdrawGainsFromStaking(overrides) {\r\n        return this._populate.withdrawGainsFromStaking(overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.registerFrontend} */\r\n    registerFrontend(kickbackRate, overrides) {\r\n        return this._populate.registerFrontend(kickbackRate, overrides).then(sendTransaction);\r\n    }\r\n    /** @internal */\r\n    _mintUniToken(amount, address, overrides) {\r\n        return this._populate._mintUniToken(amount, address, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.approveUniTokens} */\r\n    approveUniTokens(allowance, overrides) {\r\n        return this._populate.approveUniTokens(allowance, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.stakeUniTokens} */\r\n    stakeUniTokens(amount, overrides) {\r\n        return this._populate.stakeUniTokens(amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeUniTokens} */\r\n    unstakeUniTokens(amount, overrides) {\r\n        return this._populate.unstakeUniTokens(amount, overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLQTYRewardFromLiquidityMining} */\r\n    withdrawLQTYRewardFromLiquidityMining(overrides) {\r\n        return this._populate.withdrawLQTYRewardFromLiquidityMining(overrides).then(sendTransaction);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#SendableLiquity.exitLiquidityMining} */\r\n    exitLiquidityMining(overrides) {\r\n        return this._populate.exitLiquidityMining(overrides).then(sendTransaction);\r\n    }\r\n}\r\nexports.SendableEthersLiquity = SendableEthersLiquity;\r\n//# sourceMappingURL=SendableEthersLiquity.js.map","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LiquityStoreProvider = exports.LiquityStoreContext = void 0;\r\nconst react_1 = __importStar(require(\"react\"));\r\nexports.LiquityStoreContext = react_1.createContext(undefined);\r\nconst LiquityStoreProvider = ({ store, loader, children }) => {\r\n    const [loadedStore, setLoadedStore] = react_1.useState();\r\n    react_1.useEffect(() => {\r\n        store.onLoaded = () => setLoadedStore(store);\r\n        const stop = store.start();\r\n        return () => {\r\n            store.onLoaded = undefined;\r\n            setLoadedStore(undefined);\r\n            stop();\r\n        };\r\n    }, [store]);\r\n    if (!loadedStore) {\r\n        return react_1.default.createElement(react_1.default.Fragment, null, loader);\r\n    }\r\n    return react_1.default.createElement(exports.LiquityStoreContext.Provider, { value: loadedStore }, children);\r\n};\r\nexports.LiquityStoreProvider = LiquityStoreProvider;\r\n//# sourceMappingURL=LiquityStoreProvider.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.equals = void 0;\r\nconst hasOwnProperty = (o, key) => Object.prototype.hasOwnProperty.call(o, key);\r\nconst shallowEquals = (a, b) => {\r\n    const keysA = Object.keys(a);\r\n    const keysB = Object.keys(b);\r\n    return (keysA.length === keysB.length &&\r\n        keysA.every(key => hasOwnProperty(b, key) && Object.is(a[key], b[key])));\r\n};\r\nconst isObject = (a) => a !== null && typeof a === \"object\";\r\nconst equals = (a, b) => isObject(a) && isObject(b) ? shallowEquals(a, b) : Object.is(a, b);\r\nexports.equals = equals;\r\n//# sourceMappingURL=equals.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BLUSDToken__factory = void 0;\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"name_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"string\",\n                name: \"symbol_\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\",\n            },\n        ],\n        name: \"OwnershipTransferred\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_bLUSDAmount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"burn\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"chickenBondManagerAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"subtractedValue\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"decreaseAllowance\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"addedValue\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"increaseAllowance\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_bLUSDAmount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"mint\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"renounceOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_chickenBondManagerAddress\",\n                type: \"address\",\n            },\n        ],\n        name: \"setAddresses\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\",\n            },\n        ],\n        name: \"transferOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\nconst _bytecode = \"0x60806040523480156200001157600080fd5b506040516200110e3803806200110e833981016040819052620000349162000251565b8151829082906200004d906003906020850190620000de565b50805162000063906004906020840190620000de565b505050620000806200007a6200008860201b60201c565b6200008c565b5050620002f7565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000ec90620002bb565b90600052602060002090601f0160209004810192826200011057600085556200015b565b82601f106200012b57805160ff19168380011785556200015b565b828001600101855582156200015b579182015b828111156200015b5782518255916020019190600101906200013e565b50620001699291506200016d565b5090565b5b808211156200016957600081556001016200016e565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ac57600080fd5b81516001600160401b0380821115620001c957620001c962000184565b604051601f8301601f19908116603f01168101908282118183101715620001f457620001f462000184565b816040528381526020925086838588010111156200021157600080fd5b600091505b8382101562000235578582018301518183018401529082019062000216565b83821115620002475760008385830101525b9695505050505050565b600080604083850312156200026557600080fd5b82516001600160401b03808211156200027d57600080fd5b6200028b868387016200019a565b93506020850151915080821115620002a257600080fd5b50620002b1858286016200019a565b9150509250929050565b600181811c90821680620002d057607f821691505b602082108103620002f157634e487b7160e01b600052602260045260246000fd5b50919050565b610e0780620003076000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806381d3c435116100a2578063a457c2d711610071578063a457c2d71461023c578063a9059cbb1461024f578063c6315aa014610262578063dd62ed3e14610275578063f2fde38b1461028857600080fd5b806381d3c435146101e95780638da5cb5b146101fc57806395d89b41146102215780639dc29fac1461022957600080fd5b8063313ce567116100e9578063313ce56714610181578063395093511461019057806340c10f19146101a357806370a08231146101b8578063715018a6146101e157600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b61012361029b565b6040516101309190610bf1565b60405180910390f35b61014c610147366004610c62565b61032d565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610c8c565b610345565b60405160128152602001610130565b61014c61019e366004610c62565b610369565b6101b66101b1366004610c62565b61038b565b005b6101606101c6366004610cc8565b6001600160a01b031660009081526020819052604090205490565b6101b66103a1565b6101b66101f7366004610cc8565b6103e0565b6005546001600160a01b03165b6040516001600160a01b039091168152602001610130565b610123610430565b6101b6610237366004610c62565b61043f565b61014c61024a366004610c62565b610451565b61014c61025d366004610c62565b6104cc565b600654610209906001600160a01b031681565b610160610283366004610cea565b6104da565b6101b6610296366004610cc8565b610505565b6060600380546102aa90610d1d565b80601f01602080910402602001604051908101604052809291908181526020018280546102d690610d1d565b80156103235780601f106102f857610100808354040283529160200191610323565b820191906000526020600020905b81548152906001019060200180831161030657829003601f168201915b5050505050905090565b60003361033b81858561059d565b5060019392505050565b6000336103538582856106c2565b61035e85858561073c565b506001949350505050565b60003361033b81858561037c83836104da565b6103869190610d6d565b61059d565b61039361090a565b61039d828261097a565b5050565b6005546001600160a01b031633146103d45760405162461bcd60e51b81526004016103cb90610d85565b60405180910390fd5b6103de6000610a59565b565b6005546001600160a01b0316331461040a5760405162461bcd60e51b81526004016103cb90610d85565b600680546001600160a01b0319166001600160a01b03831617905561042d6103a1565b50565b6060600480546102aa90610d1d565b61044761090a565b61039d8282610aab565b6000338161045f82866104da565b9050838110156104bf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103cb565b61035e828686840361059d565b60003361033b81858561073c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b0316331461052f5760405162461bcd60e51b81526004016103cb90610d85565b6001600160a01b0381166105945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103cb565b61042d81610a59565b6001600160a01b0383166105ff5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103cb565b6001600160a01b0382166106605760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103cb565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106ce84846104da565b9050600019811461073657818110156107295760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103cb565b610736848484840361059d565b50505050565b6001600160a01b0383166107a05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103cb565b6001600160a01b0382166108025760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103cb565b6001600160a01b0383166000908152602081905260409020548181101561087a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103cb565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906108b1908490610d6d565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108fd91815260200190565b60405180910390a3610736565b6006546001600160a01b031633146103de5760405162461bcd60e51b815260206004820152602d60248201527f424c555344546f6b656e3a2043616c6c6572206d75737420626520436869636b60448201526c32b72137b73226b0b730b3b2b960991b60648201526084016103cb565b6001600160a01b0382166109d05760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103cb565b80600260008282546109e29190610d6d565b90915550506001600160a01b03821660009081526020819052604081208054839290610a0f908490610d6d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b0b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103cb565b6001600160a01b03821660009081526020819052604090205481811015610b7f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103cb565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bae908490610dba565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016106b5565b600060208083528351808285015260005b81811015610c1e57858101830151858201604001528201610c02565b81811115610c30576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c5d57600080fd5b919050565b60008060408385031215610c7557600080fd5b610c7e83610c46565b946020939093013593505050565b600080600060608486031215610ca157600080fd5b610caa84610c46565b9250610cb860208501610c46565b9150604084013590509250925092565b600060208284031215610cda57600080fd5b610ce382610c46565b9392505050565b60008060408385031215610cfd57600080fd5b610d0683610c46565b9150610d1460208401610c46565b90509250929050565b600181811c90821680610d3157607f821691505b602082108103610d5157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d8057610d80610d57565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082821015610dcc57610dcc610d57565b50039056fea264697066735822122023b9afd8587abe84641f48a109e36ac476f6943a9477697b75ccd34746f371c664736f6c634300080d0033\";\nconst isSuperArgs = (xs) => xs.length > 1;\nclass BLUSDToken__factory extends ethers_1.ContractFactory {\n    constructor(...args) {\n        if (isSuperArgs(args)) {\n            super(...args);\n        }\n        else {\n            super(_abi, _bytecode, args[0]);\n        }\n    }\n    deploy(name_, symbol_, overrides) {\n        return super.deploy(name_, symbol_, overrides || {});\n    }\n    getDeployTransaction(name_, symbol_, overrides) {\n        return super.getDeployTransaction(name_, symbol_, overrides || {});\n    }\n    attach(address) {\n        return super.attach(address);\n    }\n    connect(signer) {\n        return super.connect(signer);\n    }\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.BLUSDToken__factory = BLUSDToken__factory;\nBLUSDToken__factory.bytecode = _bytecode;\nBLUSDToken__factory.abi = _abi;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BondNFT__factory = void 0;\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"name_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"string\",\n                name: \"symbol_\",\n                type: \"string\",\n            },\n            {\n                internalType: \"address\",\n                name: \"_initialArtworkAddress\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_transferLockoutPeriodSeconds\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"approved\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"operator\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"bool\",\n                name: \"approved\",\n                type: \"bool\",\n            },\n        ],\n        name: \"ApprovalForAll\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\",\n            },\n        ],\n        name: \"OwnershipTransferred\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"artwork\",\n        outputs: [\n            {\n                internalType: \"contract IBondNFTArtwork\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"chickenBondManager\",\n        outputs: [\n            {\n                internalType: \"contract IChickenBondManager\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getApproved\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_tokenID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getBondAmount\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_tokenID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getBondEndTime\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_tokenID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getBondFinalDna\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"finalDna\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint128\",\n                name: \"_tokenID\",\n                type: \"uint128\",\n            },\n        ],\n        name: \"getBondFinalHalfDna\",\n        outputs: [\n            {\n                internalType: \"uint128\",\n                name: \"finalHalfDna\",\n                type: \"uint128\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_tokenID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getBondInitialDna\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"initialDna\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_tokenID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getBondInitialHalfDna\",\n        outputs: [\n            {\n                internalType: \"uint128\",\n                name: \"initialHalfDna\",\n                type: \"uint128\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_tokenID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getBondStartTime\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_tokenID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getBondStatus\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"status\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"operator\",\n                type: \"address\",\n            },\n        ],\n        name: \"isApprovedForAll\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_bonder\",\n                type: \"address\",\n            },\n        ],\n        name: \"mint\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"ownerOf\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"renounceOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"safeTransferFrom\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"bytes\",\n                name: \"_data\",\n                type: \"bytes\",\n            },\n        ],\n        name: \"safeTransferFrom\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_chickenBondManagerAddress\",\n                type: \"address\",\n            },\n        ],\n        name: \"setAddresses\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"operator\",\n                type: \"address\",\n            },\n            {\n                internalType: \"bool\",\n                name: \"approved\",\n                type: \"bool\",\n            },\n        ],\n        name: \"setApprovalForAll\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_artworkAddress\",\n                type: \"address\",\n            },\n        ],\n        name: \"setArtworkAddress\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes4\",\n                name: \"interfaceId\",\n                type: \"bytes4\",\n            },\n        ],\n        name: \"supportsInterface\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"index\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"tokenByIndex\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"index\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"tokenOfOwnerByIndex\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_tokenID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"tokenURI\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"tokenId\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"transferLockoutPeriodSeconds\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\",\n            },\n        ],\n        name: \"transferOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\nconst _bytecode = \"0x60a06040523480156200001157600080fd5b50604051620026b5380380620026b5833981016040819052620000349162000276565b8351849084906200004d90600090602085019062000103565b5080516200006390600190602084019062000103565b505050620000806200007a620000ad60201b60201c565b620000b1565b600c80546001600160a01b0319166001600160a01b03939093169290921790915560805250620003459050565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001119062000309565b90600052602060002090601f01602090048101928262000135576000855562000180565b82601f106200015057805160ff191683800117855562000180565b8280016001018555821562000180579182015b828111156200018057825182559160200191906001019062000163565b506200018e92915062000192565b5090565b5b808211156200018e576000815560010162000193565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001d157600080fd5b81516001600160401b0380821115620001ee57620001ee620001a9565b604051601f8301601f19908116603f01168101908282118183101715620002195762000219620001a9565b816040528381526020925086838588010111156200023657600080fd5b600091505b838210156200025a57858201830151818301840152908201906200023b565b838211156200026c5760008385830101525b9695505050505050565b600080600080608085870312156200028d57600080fd5b84516001600160401b0380821115620002a557600080fd5b620002b388838901620001bf565b95506020870151915080821115620002ca57600080fd5b50620002d987828801620001bf565b604087015190945090506001600160a01b0381168114620002f957600080fd5b6060959095015193969295505050565b600181811c908216806200031e57607f821691505b6020821081036200033f57634e487b7160e01b600052602260045260246000fd5b50919050565b60805161234d620003686000396000818161030f0152611945015261234d6000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80636a6278421161011a578063a22cb465116100ad578063d7aecbb71161007c578063d7aecbb71461045c578063e91b0a411461046f578063e985e9c514610494578063ec8e1e13146104d0578063f2fde38b146104e357600080fd5b8063a22cb46514610410578063aec0932d14610423578063b88d4fde14610436578063c87b56dd1461044957600080fd5b8063715018a6116100e9578063715018a6146103dc57806381d3c435146103e45780638da5cb5b146103f757806395d89b411461040857600080fd5b80636a627842146103905780636c15314f146103a35780636df881ae146103b657806370a08231146103c957600080fd5b806326cc133e116101925780634f6ccce7116101615780634f6ccce71461034457806356d83ed9146103575780636352211e1461036a578063659c152a1461037d57600080fd5b806326cc133e146102e45780632f745c59146102f757806337c797301461030a57806342842e0e1461033157600080fd5b8063106d8bbb116101ce578063106d8bbb1461027d57806310a6b766146102a857806318160ddd146102c957806323b872dd146102d157600080fd5b806301ffc9a71461020057806306fdde0314610228578063081812fc1461023d578063095ea7b314610268575b600080fd5b61021361020e366004611d3e565b6104f6565b60405190151581526020015b60405180910390f35b610230610521565b60405161021f9190611dba565b61025061024b366004611dcd565b6105b3565b6040516001600160a01b03909116815260200161021f565b61027b610276366004611e02565b61064d565b005b61029061028b366004611dcd565b610762565b6040516001600160801b03909116815260200161021f565b6102bb6102b6366004611dcd565b6107dc565b60405190815260200161021f565b6008546102bb565b61027b6102df366004611e2c565b610856565b600c54610250906001600160a01b031681565b6102bb610305366004611e02565b610887565b6102bb7f000000000000000000000000000000000000000000000000000000000000000081565b61027b61033f366004611e2c565b61091d565b6102bb610352366004611dcd565b610938565b600b54610250906001600160a01b031681565b610250610378366004611dcd565b6109cb565b61029061038b366004611e7d565b610a42565b6102bb61039e366004611e9a565b610ac3565b6102bb6103b1366004611dcd565b610aef565b6102bb6103c4366004611dcd565b610b93565b6102bb6103d7366004611e9a565b610c1a565b61027b610ca1565b61027b6103f2366004611e9a565b610cd7565b600a546001600160a01b0316610250565b610230610e07565b61027b61041e366004611eb5565b610e16565b6102bb610431366004611dcd565b610e25565b61027b610444366004611f60565b610e9f565b610230610457366004611dcd565b610ed7565b6102bb61046a366004611dcd565b610fe5565b61048261047d366004611dcd565b61105f565b60405160ff909116815260200161021f565b6102136104a236600461200b565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61027b6104de366004611e9a565b6110d8565b61027b6104f1366004611e9a565b611195565b60006001600160e01b0319821663780e9d6360e01b148061051b575061051b8261122d565b92915050565b6060600080546105309061203e565b80601f016020809104026020016040519081016040528092919081815260200182805461055c9061203e565b80156105a95780601f1061057e576101008083540402835291602001916105a9565b820191906000526020600020905b81548152906001019060200180831161058c57829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166106315760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610658826109cb565b9050806001600160a01b0316836001600160a01b0316036106c55760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610628565b336001600160a01b03821614806106e157506106e181336104a2565b6107535760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610628565b61075d838361127d565b505050565b600b5460405163da10594360e01b8152600481018390526000916001600160a01b03169063da1059439060240160c060405180830381865afa1580156107ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d09190612078565b50909695505050505050565b600b5460405163da10594360e01b8152600481018390526000916001600160a01b03169063da1059439060240160c060405180830381865afa158015610826573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084a9190612078565b50939695505050505050565b61086033826112eb565b61087c5760405162461bcd60e51b8152600401610628906120e7565b61075d8383836113e1565b600061089283610c1a565b82106108f45760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610628565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61075d83838360405180602001604052806000815250610e9f565b600061094360085490565b82106109a65760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610628565b600882815481106109b9576109b9612138565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b03168061051b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610628565b600b5460405163da10594360e01b81526001600160801b03831660048201526000916001600160a01b03169063da1059439060240160c060405180830381865afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab89190612078565b509695505050505050565b6000610acd611588565b6000610ad860085490565b610ae3906001612164565b905061051b83826115f5565b600b5460405163da10594360e01b815260048101839052600091829182916001600160a01b03169063da1059439060240160c060405180830381865afa158015610b3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b619190612078565b5094509450505050806001600160801b03166080836001600160801b0316901b610b8b9190612164565b949350505050565b600b5460405163da10594360e01b81526004810183905260009182916001600160a01b039091169063da1059439060240160c060405180830381865afa158015610be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c059190612078565b50506001600160801b03169695505050505050565b60006001600160a01b038216610c855760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610628565b506001600160a01b031660009081526003602052604090205490565b600a546001600160a01b03163314610ccb5760405162461bcd60e51b81526004016106289061217c565b610cd56000611743565b565b600a546001600160a01b03163314610d015760405162461bcd60e51b81526004016106289061217c565b6001600160a01b038116610d745760405162461bcd60e51b815260206004820152603460248201527f426f6e644e46543a205f636869636b656e426f6e644d616e6167657241646472604482015273657373206d757374206265206e6f6e2d7a65726f60601b6064820152608401610628565b600b546001600160a01b031615610de55760405162461bcd60e51b815260206004820152602f60248201527f426f6e644e46543a2073657441646472657373657328292063616e206f6e6c7960448201526e2062652063616c6c6564206f6e636560881b6064820152608401610628565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600180546105309061203e565b610e21338383611795565b5050565b600b5460405163da10594360e01b8152600481018390526000916001600160a01b03169063da1059439060240160c060405180830381865afa158015610e6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e939190612078565b50919695505050505050565b610ea933836112eb565b610ec55760405162461bcd60e51b8152600401610628906120e7565b610ed184848484611863565b50505050565b6000818152600260205260409020546060906001600160a01b0316610f4f5760405162461bcd60e51b815260206004820152602860248201527f426f6e644e46543a2055524920717565727920666f72206e6f6e657869737465604482015267373a103a37b5b2b760c11b6064820152608401610628565b600c546001600160a01b0316610f74576040518060200160405280600081525061051b565b600c5460405163c87b56dd60e01b8152600481018490526001600160a01b039091169063c87b56dd90602401600060405180830381865afa158015610fbd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051b91908101906121b1565b600b5460405163da10594360e01b8152600481018390526000916001600160a01b03169063da1059439060240160c060405180830381865afa15801561102f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110539190612078565b50929695505050505050565b600b5460405163da10594360e01b8152600481018390526000916001600160a01b03169063da1059439060240160c060405180830381865afa1580156110a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cd9190612078565b979650505050505050565b600a546001600160a01b031633146111025760405162461bcd60e51b81526004016106289061217c565b600b546001600160a01b031661116f5760405162461bcd60e51b815260206004820152602c60248201527f426f6e644e46543a207365744164647265737365732829206d7573742062652060448201526b18d85b1b195908199a5c9cdd60a21b6064820152608401610628565b600c80546001600160a01b0319166001600160a01b038316179055611192610ca1565b50565b600a546001600160a01b031633146111bf5760405162461bcd60e51b81526004016106289061217c565b6001600160a01b0381166112245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610628565b61119281611743565b60006001600160e01b031982166380ac58cd60e01b148061125e57506001600160e01b03198216635b5e139f60e01b145b8061051b57506301ffc9a760e01b6001600160e01b031983161461051b565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112b2826109cb565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166113645760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610628565b600061136f836109cb565b9050806001600160a01b0316846001600160a01b031614806113b657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b8b5750836001600160a01b03166113cf846105b3565b6001600160a01b031614949350505050565b826001600160a01b03166113f4826109cb565b6001600160a01b0316146114585760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610628565b6001600160a01b0382166114ba5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610628565b6114c5838383611896565b6114d060008261127d565b6001600160a01b03831660009081526003602052604081208054600192906114f9908490612228565b90915550506001600160a01b0382166000908152600360205260408120805460019290611527908490612164565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b546001600160a01b03163314610cd55760405162461bcd60e51b815260206004820152602a60248201527f426f6e644e46543a2043616c6c6572206d75737420626520436869636b656e4260448201526937b73226b0b730b3b2b960b11b6064820152608401610628565b6001600160a01b03821661164b5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610628565b6000818152600260205260409020546001600160a01b0316156116b05760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610628565b6116bc60008383611896565b6001600160a01b03821660009081526003602052604081208054600192906116e5908490612164565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036117f65760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610628565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b61186e8484846113e1565b61187a848484846119df565b610ed15760405162461bcd60e51b81526004016106289061223f565b6001600160a01b038316156119d457600b5460405163da10594360e01b81526004810183905260009182916001600160a01b039091169063da1059439060240160c060405180830381865afa1580156118f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119179190612078565b95505050935050506001600381111561193257611932612291565b60ff168160ff16148061196e575061196a7f000000000000000000000000000000000000000000000000000000000000000083612164565b4210155b6119d15760405162461bcd60e51b815260206004820152602e60248201527f426f6e644e46543a2063616e6e6f74207472616e7366657220647572696e672060448201526d1b1bd8dadbdd5d081c195c9a5bd960921b6064820152608401610628565b50505b61075d838383611ae0565b60006001600160a01b0384163b15611ad557604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611a239033908990889088906004016122a7565b6020604051808303816000875af1925050508015611a5e575060408051601f3d908101601f19168201909252611a5b918101906122e4565b60015b611abb573d808015611a8c576040519150601f19603f3d011682016040523d82523d6000602084013e611a91565b606091505b508051600003611ab35760405162461bcd60e51b81526004016106289061223f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b8b565b506001949350505050565b6001600160a01b038316611b3b57611b3681600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611b5e565b816001600160a01b0316836001600160a01b031614611b5e57611b5e8382611b98565b6001600160a01b038216611b755761075d81611c35565b826001600160a01b0316826001600160a01b03161461075d5761075d8282611ce4565b60006001611ba584610c1a565b611baf9190612228565b600083815260076020526040902054909150808214611c02576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611c4790600190612228565b60008381526009602052604081205460088054939450909284908110611c6f57611c6f612138565b906000526020600020015490508060088381548110611c9057611c90612138565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611cc857611cc8612301565b6001900381819060005260206000200160009055905550505050565b6000611cef83610c1a565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b03198116811461119257600080fd5b600060208284031215611d5057600080fd5b8135611d5b81611d28565b9392505050565b60005b83811015611d7d578181015183820152602001611d65565b83811115610ed15750506000910152565b60008151808452611da6816020860160208601611d62565b601f01601f19169290920160200192915050565b602081526000611d5b6020830184611d8e565b600060208284031215611ddf57600080fd5b5035919050565b80356001600160a01b0381168114611dfd57600080fd5b919050565b60008060408385031215611e1557600080fd5b611e1e83611de6565b946020939093013593505050565b600080600060608486031215611e4157600080fd5b611e4a84611de6565b9250611e5860208501611de6565b9150604084013590509250925092565b6001600160801b038116811461119257600080fd5b600060208284031215611e8f57600080fd5b8135611d5b81611e68565b600060208284031215611eac57600080fd5b611d5b82611de6565b60008060408385031215611ec857600080fd5b611ed183611de6565b915060208301358015158114611ee657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f3057611f30611ef1565b604052919050565b600067ffffffffffffffff821115611f5257611f52611ef1565b50601f01601f191660200190565b60008060008060808587031215611f7657600080fd5b611f7f85611de6565b9350611f8d60208601611de6565b925060408501359150606085013567ffffffffffffffff811115611fb057600080fd5b8501601f81018713611fc157600080fd5b8035611fd4611fcf82611f38565b611f07565b818152886020838501011115611fe957600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b6000806040838503121561201e57600080fd5b61202783611de6565b915061203560208401611de6565b90509250929050565b600181811c9082168061205257607f821691505b60208210810361207257634e487b7160e01b600052602260045260246000fd5b50919050565b60008060008060008060c0878903121561209157600080fd5b86519550602087015194506040870151935060608701516120b181611e68565b60808801519093506120c281611e68565b60a088015190925060ff811681146120d957600080fd5b809150509295509295509295565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156121775761217761214e565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156121c357600080fd5b815167ffffffffffffffff8111156121da57600080fd5b8201601f810184136121eb57600080fd5b80516121f9611fcf82611f38565b81815285602083850101111561220e57600080fd5b61221f826020830160208601611d62565b95945050505050565b60008282101561223a5761223a61214e565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906122da90830184611d8e565b9695505050505050565b6000602082840312156122f657600080fd5b8151611d5b81611d28565b634e487b7160e01b600052603160045260246000fdfea264697066735822122044103ea1091d2ca6e6fe4ca1513806deac675a7b518c33ca3a71b86fa08dc52164736f6c634300080d0033\";\nconst isSuperArgs = (xs) => xs.length > 1;\nclass BondNFT__factory extends ethers_1.ContractFactory {\n    constructor(...args) {\n        if (isSuperArgs(args)) {\n            super(...args);\n        }\n        else {\n            super(_abi, _bytecode, args[0]);\n        }\n    }\n    deploy(name_, symbol_, _initialArtworkAddress, _transferLockoutPeriodSeconds, overrides) {\n        return super.deploy(name_, symbol_, _initialArtworkAddress, _transferLockoutPeriodSeconds, overrides || {});\n    }\n    getDeployTransaction(name_, symbol_, _initialArtworkAddress, _transferLockoutPeriodSeconds, overrides) {\n        return super.getDeployTransaction(name_, symbol_, _initialArtworkAddress, _transferLockoutPeriodSeconds, overrides || {});\n    }\n    attach(address) {\n        return super.attach(address);\n    }\n    connect(signer) {\n        return super.connect(signer);\n    }\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.BondNFT__factory = BondNFT__factory;\nBondNFT__factory.bytecode = _bytecode;\nBondNFT__factory.abi = _abi;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChickenBondManager__factory = void 0;\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"bondNFTAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"lusdTokenAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"curvePoolAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"curveBasePoolAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"bammSPVaultAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"yearnCurveVaultAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"yearnRegistryAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"yearnGovernanceAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"bLUSDTokenAddress\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"curveLiquidityGaugeAddress\",\n                        type: \"address\",\n                    },\n                ],\n                internalType: \"struct ChickenBondManager.ExternalAdresses\",\n                name: \"_externalContractAddresses\",\n                type: \"tuple\",\n            },\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"targetAverageAgeSeconds\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"initialAccrualParameter\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"minimumAccrualParameter\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"accrualAdjustmentRate\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"accrualAdjustmentPeriodSeconds\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"chickenInAMMFee\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"curveDepositDydxThreshold\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"curveWithdrawalDxdyThreshold\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"bootstrapPeriodChickenIn\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"bootstrapPeriodRedeem\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"bootstrapPeriodShift\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"shifterDelay\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"shifterWindow\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"minBLUSDSupply\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"minBondAmount\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"nftRandomnessDivisor\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"redemptionFeeBeta\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"redemptionFeeMinuteDecayFactor\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct ChickenBondManager.Params\",\n                name: \"_params\",\n                type: \"tuple\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"redeemer\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"bLusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"minLusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"lusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"yTokens\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"redemptionFee\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"BLUSDRedeemed\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_baseRedemptionRate\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"BaseRedemptionRateUpdated\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"bonder\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"bondId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"principalLusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"minLusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"withdrawnLusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint128\",\n                name: \"bondFinalHalfDna\",\n                type: \"uint128\",\n            },\n        ],\n        name: \"BondCancelled\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"bonder\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"bondId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"lusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"bLusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint128\",\n                name: \"bondFinalHalfDna\",\n                type: \"uint128\",\n            },\n        ],\n        name: \"BondClaimed\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"bonder\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"bondId\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint128\",\n                name: \"bondInitialHalfDna\",\n                type: \"uint128\",\n            },\n        ],\n        name: \"BondCreated\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"_lastRedemptionFeeOpTime\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"LastRedemptionTimeUpdated\",\n        type: \"event\",\n    },\n    {\n        inputs: [],\n        name: \"BETA\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"BOOTSTRAP_PERIOD_CHICKEN_IN\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"BOOTSTRAP_PERIOD_REDEEM\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"BOOTSTRAP_PERIOD_SHIFT\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"CHICKEN_IN_AMM_FEE\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"DECIMAL_PRECISION\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"INDEX_OF_LUSD_TOKEN_IN_CURVE_POOL\",\n        outputs: [\n            {\n                internalType: \"int128\",\n                name: \"\",\n                type: \"int128\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"MINUTE_DECAY_FACTOR\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"MIN_BLUSD_SUPPLY\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"MIN_BOND_AMOUNT\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"NFT_RANDOMNESS_DIVISOR\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"SECONDS_IN_ONE_MINUTE\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"SHIFTER_DELAY\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"SHIFTER_WINDOW\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_bammLUSDValue\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"_calcSystemBackingRatioFromBAMMValue\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"accrualAdjustmentMultiplier\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"accrualAdjustmentPeriodCount\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"accrualAdjustmentPeriodSeconds\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"accrualParameter\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"activateMigration\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"bLUSDToken\",\n        outputs: [\n            {\n                internalType: \"contract IBLUSDToken\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"bammSPVault\",\n        outputs: [\n            {\n                internalType: \"contract IBAMM\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"baseRedemptionRate\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"bondNFT\",\n        outputs: [\n            {\n                internalType: \"contract IBondNFT\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_bondID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"calcAccruedBLUSD\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_bondID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"calcBondBLUSDCap\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_fractionOfBLUSDToRedeem\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"calcRedemptionFeePercentage\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"calcSystemBackingRatio\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"calcTotalLUSDValue\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"calcTotalYearnCurveVaultShareValue\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"calcUpdatedAccrualParameter\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_bondID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"chickenIn\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_bondID\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_minLUSD\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"chickenOut\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"countChickenIn\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"countChickenOut\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_lusdAmount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"createBond\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"curveBasePool\",\n        outputs: [\n            {\n                internalType: \"contract ICurvePool\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"curveDepositLUSD3CRVExchangeRateThreshold\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"curveLiquidityGauge\",\n        outputs: [\n            {\n                internalType: \"contract ICurveLiquidityGaugeV5\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"curvePool\",\n        outputs: [\n            {\n                internalType: \"contract ICurvePool\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"curveWithdrawal3CRVLUSDExchangeRateThreshold\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"deploymentTimestamp\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"firstChickenInTime\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getAcquiredLUSDInCurve\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getAcquiredLUSDInSP\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getBAMMLUSDDebt\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_bondID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getBondData\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"lusdAmount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"startTime\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"endTime\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint128\",\n                name: \"initialHalfDna\",\n                type: \"uint128\",\n            },\n            {\n                internalType: \"uint128\",\n                name: \"finalHalfDna\",\n                type: \"uint128\",\n            },\n            {\n                internalType: \"uint8\",\n                name: \"status\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getLUSDInBAMMSPVault\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_bondID\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"getLUSDToAcquire\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getOpenBondCount\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"openBondCount\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getOwnedLUSDInCurve\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getOwnedLUSDInSP\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getPendingLUSD\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getPermanentLUSD\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalAcquiredLUSD\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTotalLUSDInCurve\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"getTreasury\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_pendingLUSD\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_totalAcquiredLUSD\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_permanentLUSD\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"lastRedemptionTime\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"lastShifterCountdownStartTime\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"lusdToken\",\n        outputs: [\n            {\n                internalType: \"contract ILUSDToken\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"migration\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"minimumAccrualParameter\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_bLUSDToRedeem\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_minLUSDFromBAMMSPVault\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"redeem\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_lusdAmount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"sendFeeShare\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_maxLUSDToShift\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"shiftLUSDFromCurveToSP\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_maxLUSDToShift\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"shiftLUSDFromSPToCurve\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"startShifterCountdown\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"targetAverageAgeSeconds\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalWeightedStartTimes\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"yTokensHeldByCBM\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"yearnCurveVault\",\n        outputs: [\n            {\n                internalType: \"contract IYearnVault\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"yearnGovernanceAddress\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"yearnRegistry\",\n        outputs: [\n            {\n                internalType: \"contract IYearnRegistry\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n];\nconst _bytecode = \"0x6104006040523480156200001257600080fd5b50604051620052fb380380620052fb83398101604081905262000035916200069f565b81516001600160a01b039081166080908152602080850151831660c090815261010080870151851660a0908152604080890151871660e090815260608a0151881690935294880151861661012052870151851661014052908601518416610160528501519092166101a052426103605282516103805290820151600d558101516103a08190526200011e5760405162461bcd60e51b815260206004820152602960248201527f43424d3a204d696e206163637275616c20706172616d657465722063616e6e6f60448201526874206265207a65726f60b81b606482015260840160405180910390fd5b60608101516200013790670de0b6b3a7640000620007bf565b6103c05260808101516103e0526101208201516001600160a01b039081166101805260a08201516101c05260e0516040805163ddca3f4360e01b81529051600093929092169163ddca3f43916004808201926020929091908290030181865afa158015620001a9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001cf9190620007d9565b90506402540be400620001e38282620007bf565b8360c00151620001f49190620007f3565b62000200919062000815565b610320526402540be400620002168282620007bf565b8360e00151620002279190620007f3565b62000233919062000815565b610340526101008201516101e09081526101208084015161020090815261014085015161022090815261016086015161024052610180860151610260526101a0860151610280526101c08601516102a052928501516102c0528401516102e052908301516103005260c051905160405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620002f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000317919062000838565b5060c05160e05160405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200036f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000395919062000838565b5060e0516101405160405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620003ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000414919062000838565b5060c0516101805160405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200046d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000493919062000838565b506101605160e051604051630e177dc760e41b81526001600160a01b03918216600482015291169063e177dc70906024016020604051808303816000875af1158015620004e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200050a919062000863565b6001600160a01b0316610140516001600160a01b03161462000530576200053062000881565b50505062000897565b60405161024081016001600160401b03811182821017156200056b57634e487b7160e01b600052604160045260246000fd5b60405290565b60405161014081016001600160401b03811182821017156200056b57634e487b7160e01b600052604160045260246000fd5b80516001600160a01b0381168114620005bb57600080fd5b919050565b60006102408284031215620005d457600080fd5b620005de62000539565b825181526020808401519082015260408084015190820152606080840151908201526080808401519082015260a0808401519082015260c0808401519082015260e08084015190820152610100808401519082015261012080840151908201526101408084015190820152610160808401519082015261018080840151908201526101a080840151908201526101c080840151908201526101e080840151908201526102008084015190820152610220928301519281019290925250919050565b600080828403610380811215620006b557600080fd5b61014080821215620006c657600080fd5b620006d062000571565b9150620006dd85620005a3565b8252620006ed60208601620005a3565b60208301526200070060408601620005a3565b60408301526200071360608601620005a3565b60608301526200072660808601620005a3565b60808301526200073960a08601620005a3565b60a08301526200074c60c08601620005a3565b60c08301526200075f60e08601620005a3565b60e083015261010062000774818701620005a3565b9083015261012062000788868201620005a3565b81840152508193506200079e86828701620005c0565b925050509250929050565b634e487b7160e01b600052601160045260246000fd5b600082821015620007d457620007d4620007a9565b500390565b600060208284031215620007ec57600080fd5b5051919050565b6000816000190483118215151615620008105762000810620007a9565b500290565b6000826200083357634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156200084b57600080fd5b815180151581146200085c57600080fd5b9392505050565b6000602082840312156200087657600080fd5b6200085c82620005a3565b634e487b7160e01b600052600160045260246000fd5b60805160a05160c05160e05161010051610120516101405161016051610180516101a0516101c0516101e05161020051610220516102405161026051610280516102a0516102c0516102e05161030051610320516103405161036051610380516103a0516103c0516103e05161473862000bc36000396000818161043d01528181612ece0152612fd7015260008181610b120152613042015260008181610a0701528181612f2e015261307d0152600081816105210152612fa60152600081816109b201528181612ef201528181612f8201526137bf0152600081816109350152818161245b01526128320152600081816108d4015281816119330152611be0015260008181610a490152610b8d0152600081816104770152610be001526000818161070701526134c4015260008181610853015261362a0152600081816106b90152613db20152600081816107b8015281816121370152613976015260008181610789015281816121580152613941015260008181610589015261379b0152600081816106e00152611cc901526000818161066a01526133d40152600081816105fa0152613384015260008181610752015281816122b001526140d501526000818161049e01526143e40152600061098b015260008181610a790152818161209e01528181613b6a01528181613bf601528181613c8e0152818161404a015261421c01526000818161055101528181611088015281816116e201528181612d0e015281816132b50152818161354f0152818161371b0152613f740152600081816108a5015281816118a201526123ca0152600081816104fa0152818161163401528181611a0c01528181611aad01528181611b470152818161252c015281816125e90152818161271301528181613ad2015261418601526000818161096401528181611524015281816122e5015281816126810152818161279901528181614328015281816143b201526144580152600081816105cb01528181610ec00152818161114901528181611d9d01528181611fba01528181612b0e0152818161385c0152613d2d01526000818161090e0152818161137001528181611774015261314001526147386000f3fe608060405234801561001057600080fd5b50600436106104335760003560e01c80637cbc237311610236578063b83f91a21161013b578063cc0c986e116100c3578063e9dc9e6d11610087578063e9dc9e6d14610afc578063edb134f314610b04578063f1b0cff514610b0d578063f3c4023d14610b34578063f58369b914610b3c57600080fd5b8063cc0c986e14610a6b578063cfc31f6f14610a74578063d2e892dd14610a9b578063da10594314610aa4578063e324634914610af357600080fd5b8063c3c297451161010a578063c3c29745146109ef578063c484cc5f14610a02578063c6c50ce814610a29578063c6d2d26114610a31578063c7b5548114610a4457600080fd5b8063b83f91a21461095f578063bb87031714610986578063bfc12c05146109ad578063c0639bbd146109d457600080fd5b8063a21ec280116101be578063acf955c71161018d578063acf955c7146108cf578063aefcc4fd146108f6578063b0f3af4714610909578063b23ad3ee14610930578063b7a65dce1461095757600080fd5b8063a21ec28014610884578063a79e568314610897578063a891c684146108a0578063ac8af3a9146108c757600080fd5b806390d532901161020557806390d532901461083557806391dc186f1461083e5780639c283187146108465780639fbc4a5f1461084e578063a20baee61461087557600080fd5b80637cbc2373146107f557806384c2dea51461081d5780638ac6e2f4146108255780638caffae11461082d57600080fd5b80634237e1911161033c5780636350e4b2116102c457806367e48a7e1161029357806367e48a7e14610784578063695e89da146107ab5780636b4fbbed146107b35780636bdac50b146107da5780637b3c7df6146107e257600080fd5b80636350e4b21461073a578063638121141461074d578063653a81981461077457806366462ab11461077c57600080fd5b80635041382b1161030b5780635041382b146106b457806351a643ae146106db578063570dd5241461070257806359372e2e1461072957806361ec893d1461073257600080fd5b80634237e191146106525780634903970a146106655780634b10543b1461068c5780634bb41097146106a157600080fd5b806335f1d0e0116103bf5780633792dcb91161038e5780633792dcb9146105c657806339f01388146105ed5780633a517326146105f55780633b19e84a1461061c5780633cbe79261461063f57600080fd5b806335f1d0e01461057c578063361628831461058457806336e2819e146105ab57806337303e58146105be57600080fd5b8063218751b211610406578063218751b2146104f5578063233b0ee71461051c57806327fafcd31461054357806333624a861461054c57806335567cda1461057357600080fd5b80630277407314610438578063071a7541146104725780630f34d74d146104995780631705a3bd146104d8575b600080fd5b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610469565b6009546104e59060ff1681565b6040519015158152602001610469565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f600a5481565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b61045f60035481565b61045f610b45565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f6105b93660046144e3565b610b79565b61045f610c2d565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b60015461045f565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b610624610c51565b60408051938452602084019290925290820152606001610469565b61045f61064d3660046144e3565b610c6b565b61045f6106603660046144e3565b610d32565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61069f61069a3660046144e3565b610deb565b005b61045f6106af3660046144e3565b611231565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f60055481565b61045f603c81565b61045f6107483660046144e3565b611333565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b61045f6115f8565b61045f61161b565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f6116dd565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f61176a565b61069f6107f03660046144e3565b61180d565b6108086108033660046144fc565b611cb2565b60408051928352602083019190915201610469565b61045f612091565b61069f612135565b60005461045f565b61045f60045481565b61045f612201565b60025461045f565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f670de0b6b3a764000081565b61069f6108923660046144e3565b61222b565b61045f60075481565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b61045f61235f565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61069f6109043660046144e3565b612383565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f6128fb565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b6109dc600081565b604051600f9190910b8152602001610469565b61069f6109fd3660046144fc565b61291f565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f612af1565b61045f610a3f3660046144e3565b612b09565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f600d5481565b6104c07f000000000000000000000000000000000000000000000000000000000000000081565b61045f600c5481565b610ab7610ab23660046144e3565b612be4565b604080519687526020870195909552938501929092526001600160801b03908116606085015216608083015260ff1660a082015260c001610469565b61045f60065481565b61069f612cc7565b61045f600b5481565b61045f7f000000000000000000000000000000000000000000000000000000000000000081565b61045f612ced565b61045f600e5481565b600080610b50612d09565b9050600080610b5e83612d9e565b505050915091508082610b719190614534565b935050505090565b600080610b84612e18565b90506000610bb27f000000000000000000000000000000000000000000000000000000000000000083612e2a565b90506000670de0b6b3a764000082600754610bcd919061454c565b610bd79190614581565b90506000610c057f000000000000000000000000000000000000000000000000000000000000000087614581565b610c0f9083614534565b9050610c2381670de0b6b3a7640000612eb1565b9695505050505050565b600080610c38612d09565b90506000610c4582612d9e565b50909695505050505050565b600080549080610c5f610b45565b91506001549050909192565b6000818152600860209081526040808320815160c081018352815481526001820154938101939093526002810154918301919091526003808201546001600160801b038082166060860152600160801b90910416608084015260048201548493929160a084019160ff1690811115610ce557610ce5614595565b6003811115610cf657610cf6614595565b8152505090506000610d0c600d54600e54612ec9565b509050610d2a8260200151610d2484600001516130ad565b836130b9565b949350505050565b600080610d3d612ced565b6000848152600860209081526040808320815160c081018352815481526001820154938101939093526002810154918301919091526003808201546001600160801b038082166060860152600160801b909104166080840152600482015494955092939192909160a084019160ff90911690811115610dbe57610dbe614595565b6003811115610dcf57610dcf614595565b815250509050610d2a610de582600001516130ad565b8361310b565b6000818152600860209081526040808320815160c081018352815481526001820154938101939093526002810154918301919091526003808201546001600160801b038082166060860152600160801b909104166080840152600482015460a084019160ff90911690811115610e6357610e63614595565b6003811115610e7457610e74614595565b9052509050610e828261312a565b610e8f8160a00151613213565b6000610e99613274565b9050600080610ea66132ae565b91509150600080610eba866000015161335c565b915091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4091906145ab565b158015610f50575060095460ff16155b15610f6757610f64866020015185856133cd565b92505b6000610f78876020015183886130b9565b90506000610f8586612b09565b9050600081610f9c84670de0b6b3a764000061454c565b610fa69190614581565b90506000610fb38b6134bc565b60008c8152600860205260408120600481018054600360ff1990911681179091554260028301550180546001600160801b03848116600160801b029116179055600a805492935060019290919061100b908490614534565b909155505089516000805481906110239084906145c4565b909155505060208a01518a51611039919061454c565b6005600082825461104a91906145c4565b909155506000905061105c85876145c4565b60095490915060ff1661108657806001600082825461107b9190614534565b9091555061112d9050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bfca6c116040518163ffffffff1660e01b8152600401606060405180830381865afa1580156110e4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110891906145db565b50985060009050611119828a612eb1565b9050801561112b5761112b813361352a565b505b6040516340c10f1960e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340c10f1990604401600060405180830381600087803b15801561119557600080fd5b505af11580156111a9573d6000803e3d6000fd5b505060095460ff161591505080156111c15750868810155b156111cf576111cf876135c5565b8a51604080518e8152602081019290925281018490526001600160801b038316606082015233907fc8989440e3da81e6e601adec28852cf06df192e7fa6f4474e31bfae2625299bc9060800160405180910390a2505050505050505050505050565b6000818152600860209081526040808320815160c081018352815481526001820154938101939093526002810154918301919091526003808201546001600160801b038082166060860152600160801b90910416608084015260048201548493929160a084019160ff16908111156112ab576112ab614595565b60038111156112bc576112bc614595565b905250905060018160a0015160038111156112d9576112d9614595565b146112e75750600092915050565b60006113066112f983600001516130ad565b611301612ced565b61310b565b90506000611318600d54600e54612ec9565b50905061132a836020015183836130b9565b95945050505050565b600061133e826135d8565b61134782613628565b61134f6136a4565b611357613274565b506040516335313c2160e11b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636a627842906024016020604051808303816000875af11580156113c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e591906145ab565b905061141d6040805160c08101825260008082526020820181905291810182905260608101829052608081018290529060a082015290565b83815242602082015261142f826134bc565b6001600160801b03166060820152600160a08201819052506000828152600860209081526040918290208351815590830151600180830191909155918301516002820155606083015160808401516001600160801b03908116600160801b0291161760038083019190915560a084015160048301805486959293919260ff199091169184908111156114c3576114c3614595565b0217905550905050836000808282546114dc9190614534565b909155506114ec9050428561454c565b600560008282546114fd9190614534565b90915550506040516323b872dd60e01b8152336004820152306024820152604481018590527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015611575573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115999190614609565b506115a384613705565b60608181015160408051858152602081018890526001600160801b03909216828201525133927f8907ba9f374f1519d92b556f63f8b1632b605bc212c7acb09cc2e19ccf0cb942928290030190a25092915050565b600080611603612d09565b9050600061161082612d9e565b509695505050505050565b600080611626612091565b9050600081156116d75760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015611690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b491906145ab565b9050670de0b6b3a76400006116c9828561454c565b6116d39190614581565b9150505b92915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bfca6c116040518163ffffffff1660e01b8152600401606060405180830381865afa15801561173e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061176291906145db565b509392505050565b6000600b54600a547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117f491906145ab565b6117fe91906145c4565b61180891906145c4565b905090565b611815613799565b61181d6136a4565b611825613858565b61182d61393d565b6000806118386132ae565b91509150600080548361184b91906145c4565b9050600061185761161b565b905061186281613a14565b600061186e8684612eb1565b905061187a8185612eb1565b9050611893818360015461188e91906145c4565b612eb1565b905061189e816135d8565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061192291906145ab565b9050600061192f82613a9a565b90507f000000000000000000000000000000000000000000000000000000000000000081116119ea5760405162461bcd60e51b815260206004820152605660248201527f43424d3a204c5553443a334352562065786368616e67652072617465206d757360448201527f74206265206f76657220746865206465706f736974207468726573686f6c64206064820152751899599bdc994814d40b4f90dd5c9d99481cda1a599d60521b608482015260a4015b60405180910390fd5b6119f4833061352a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611a5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7f91906145ab565b6040805180820182528681526000602082018190529151630b4c7e4d60e01b81529293506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001692630b4c7e4d92611ae1929160040161462b565b6020604051808303816000875af1158015611b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b2491906145ab565b506040516370a0823160e01b815230600482015260009082906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611b8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb291906145ab565b611bbc91906145c4565b9050611bc781613b52565b6000611bd285613a9a565b90508381108015611c0357507f00000000000000000000000000000000000000000000000000000000000000008110155b611ca55760405162461bcd60e51b815260206004820152606160248201527f43424d3a2053502d3e4375727665207368696674206d7573742064656372656160448201527f7365204c5553443a334352562065786368616e6765207261746520746f20612060648201527f76616c75652061626f766520746865206465706f736974207468726573686f6c6084820152601960fa1b60a482015260c4016119e1565b5050505050505050505050565b600080611cbe846135d8565b611cc784613d21565b7f0000000000000000000000000000000000000000000000000000000000000000600454611cf59190614534565b421015611d825760405162461bcd60e51b815260206004820152604f60248201527f43424d3a20526564656d7074696f6e206166746572206669727374206368696360448201527f6b656e20696e206d757374207761697420756e74696c20626f6f74737472617060648201526e103832b934b7b21034b99037bb32b960891b608482015260a4016119e1565b600080600080611d90613e31565b94509450509350935060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611df9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1d91906145ab565b611e2f8a670de0b6b3a764000061454c565b611e399190614581565b60095490915060009060ff16611e5757611e5282613e60565b611e5a565b60005b905060008080670de0b6b3a7640000611e73868b61454c565b611e7d9190614581565b90506000670de0b6b3a7640000611e9486826145c4565b611e9e908461454c565b611ea89190614581565b9050611eb481836145c4565b611ebe9085614534565b9350611eca818e613f01565b92508215611edc57611edc833361352a565b50600090508615611f77576000670de0b6b3a7640000611efc878b61454c565b611f069190614581565b90506000670de0b6b3a7640000611f1d87826145c4565b611f27908461454c565b611f319190614581565b9050611f3d81836145c4565b611f479086614534565b94508881600354611f58919061454c565b611f629190614581565b92508215611f7457611f743384614024565b50505b611f818387614534565b600155611f96611f918284614534565b6135d8565b604051632770a7eb60e21b8152336004820152602481018e90526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690639dc29fac90604401600060405180830381600087803b158015611ffe57600080fd5b505af1158015612012573d6000803e3d6000fd5b50505050336001600160a01b03167fc0ac8b09f0bc9dd02f48d9145336ab9df1dc378b6115bc78e0f6c3d72bc37b178e8e858588604051612075959493929190948552602085019390935260408401919091526060830152608082015260a00190565b60405180910390a29099509750505050505050505b9250929050565b6000670de0b6b3a76400007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166399530b066040518163ffffffff1660e01b8152600401602060405180830381865afa1580156120fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061211e91906145ab565b60035461212b919061454c565b6118089190614581565b7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000600c546121849190614534565b61218e9190614534565b4210156121fb5760405162461bcd60e51b815260206004820152603560248201527f43424d3a2050726576696f75732073686966742064656c617920616e642077696044820152741b991bddc81b5d5cdd081a185d99481c185cdcd959605a1b60648201526084016119e1565b42600c55565b60008061220c61161b565b90506000612218612d09565b90506122248282614534565b9250505090565b6122336140ca565b60095460ff16156122995760405162461bcd60e51b815260206004820152602a60248201527f43424d3a205265636569766520666565207368617265206f6e6c7920696e206e6044820152696f726d616c206d6f646560b01b60648201526084016119e1565b6040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152306024830152604482018390527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd906064016020604051808303816000875af115801561232e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123529190614609565b5061235c81613705565b50565b60008061236a612d09565b9050600061237782612d9e565b50929695505050505050565b61238b613799565b6123936136a4565b61239b613858565b6123a361393d565b60006123ad61161b565b905060006123bb8383612eb1565b90506123c6816135d8565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015612426573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061244a91906145ab565b905060006124578261414e565b90507f000000000000000000000000000000000000000000000000000000000000000081116125145760405162461bcd60e51b815260206004820152605a60248201527f43424d3a20334352563a4c5553442065786368616e67652072617465206d757360448201527f742062652061626f766520746865207769746864726177616c2074687265736860648201527f6f6c64206265666f72652043757276652d3e5350207368696674000000000000608482015260a4016119e1565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561257b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259f91906145ab565b9050600085856003546125b2919061454c565b6125bc9190614581565b90506125c781614206565b6040516370a0823160e01b815230600482015260009083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015612630573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061265491906145ab565b61265e91906145c4565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156126c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ec91906145ab565b604051630d2680e960e11b81526004810184905260006024820181905260448201529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631a4d01d290606401600060405180830381600087803b15801561275f57600080fd5b505af1158015612773573d6000803e3d6000fd5b50506040516370a0823160e01b8152306004820152600092508391506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa1580156127e0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061280491906145ab565b61280e91906145c4565b905061281981613705565b60006128248861414e565b9050868110801561285557507f00000000000000000000000000000000000000000000000000000000000000008110155b611ca55760405162461bcd60e51b8152602060048201526064602482018190527f43424d3a2043757276652d3e5350207368696674206d75737420696e6372656160448301527f736520334352563a4c5553442065786368616e6765207261746520746f206120908201527f76616c75652061626f766520746865207769746864726177616c2074687265736084820152631a1bdb1960e21b60a482015260c4016119e1565b600080612906612d09565b9050600061291382612d9e565b50919695505050505050565b6000828152600860209081526040808320815160c081018352815481526001820154938101939093526002810154918301919091526003808201546001600160801b038082166060860152600160801b909104166080840152600482015460a084019160ff9091169081111561299757612997614595565b60038111156129a8576129a8614595565b90525090506129b68361312a565b6129c38160a00151613213565b6129cb613274565b5060006129d7846134bc565b6000858152600860205260408120600481018054600260ff199091168117909155429082015560030180546001600160801b03848116600160801b029116179055600b8054929350600192909190612a30908490614534565b90915550508151600080548190612a489084906145c4565b909155505060208201518251612a5e919061454c565b60056000828254612a6f91906145c4565b90915550508151600090612a839085613f01565b9050612a8f813361352a565b82516040805187815260208101929092528101859052606081018290526001600160801b038316608082015233907f86b11f882f57fc8653f2e7a14a2443859bde5a53b72a722783300cb203e90a349060a00160405180910390a25050505050565b600080612b02600d54600e54612ec9565b5092915050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8e91906145ab565b9050600080612b9c85612d9e565b5050509150915082600003612bbd5750670de0b6b3a7640000949350505050565b82612bc88284614534565b612bda90670de0b6b3a764000061454c565b61132a9190614581565b6000818152600860209081526040808320815160c081018352815481526001820154938101939093526002810154918301919091526003808201546001600160801b038082166060860152600160801b90910416608084015260048201548493849384938493849384939092909160a084019160ff90911690811115612c6c57612c6c614595565b6003811115612c7d57612c7d614595565b815250509050806000015181602001518260400151836060015184608001518560a001516003811115612cb257612cb2614595565b949d939c50919a509850965090945092505050565b612ccf6140ca565b612cd76136a4565b6009805460ff1916600190811790915560009055565b600080612cf8612d09565b9050612d0381612b09565b91505090565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bfca6c116040518163ffffffff1660e01b8152600401606060405180830381865afa158015612d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d8e91906145db565b50915050612d03600254826142a4565b6000806000806000805486612db391906145c4565b9250612dbd61161b565b60015490925090506000612dd18385614534565b905081811115612e0e576000612de783836145c4565b905081612df4868361454c565b612dfe9190614581565b9650612e0a87826145c4565b9550505b5091939590929450565b6000603c6006544261212b91906145c4565b6000631f540500821115612e4057631f54050091505b81600003612e575750670de0b6b3a76400006116d7565b670de0b6b3a764000083835b6001811115612ea757612e77600282614663565b15612e8957612e8682846142b4565b92505b612e9382836142b4565b9150612ea0600282614581565b9050612e63565b610c2382846142b4565b6000818310612ec05781612ec2565b825b9392505050565b6000807f0000000000000000000000000000000000000000000000000000000000000000612f177f0000000000000000000000000000000000000000000000000000000000000000426145c4565b612f219190614581565b905082811480612f5057507f000000000000000000000000000000000000000000000000000000000000000084145b80612f5b5750600054155b15612f685783915061208a565b60008054600554612f799190614581565b90506000612ffb7f0000000000000000000000000000000000000000000000000000000000000000612fcb7f000000000000000000000000000000000000000000000000000000000000000085614534565b612fd591906145c4565b7f00000000000000000000000000000000000000000000000000000000000000006142de565b90508083101561300f57859350505061208a565b6000613025866130206001856145c4565b6142a4565b61302f90856145c4565b90506130a1670de0b6b3a76400006130677f000000000000000000000000000000000000000000000000000000000000000084612e2a565b613071908a61454c565b61307b9190614581565b7f00000000000000000000000000000000000000000000000000000000000000006142a4565b94505050509250929050565b600080610d2a8361335c565b6000836000036130cb57506000612ec2565b60006130d785426145c4565b6130e990670de0b6b3a764000061454c565b905060006130f78483614534565b613101838761454c565b610c239190614581565b60008161312084670de0b6b3a764000061454c565b612ec29190614581565b6040516331a9108f60e11b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa15801561318f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131b39190614677565b6001600160a01b0316336001600160a01b03161461235c5760405162461bcd60e51b815260206004820152601d60248201527f43424d3a2043616c6c6572206d757374206f776e2074686520626f6e6400000060448201526064016119e1565b600181600381111561322757613227614595565b1461235c5760405162461bcd60e51b815260206004820152601860248201527f43424d3a20426f6e64206d75737420626520616374697665000000000000000060448201526064016119e1565b600d54600e5460009190828061328a8484612ec9565b9150915082811461176257600e81905581841461176257600d829055509392505050565b60008060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bfca6c116040518163ffffffff1660e01b8152600401606060405180830381865afa158015613311573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061333591906145db565b5060025490925090508082111561335457506002819055928392509050565b939092509050565b600954600090819060ff161561337457506000929050565b6000670de0b6b3a76400006133a97f00000000000000000000000000000000000000000000000000000000000000008661454c565b6133b39190614581565b905060006133c182866145c4565b91959194509092505050565b60006133f97f000000000000000000000000000000000000000000000000000000000000000085614534565b42101561346e5760405162461bcd60e51b815260206004820152603e60248201527f43424d3a20466972737420636869636b656e20696e206d75737420776169742060448201527f756e74696c20626f6f74737472617020706572696f64206973206f766572000060648201526084016119e1565b42600455600061347d84612d9e565b505050509050808310156134a35760405162461bcd60e51b81526004016119e1906146a0565b80156134b2576134b2816135c5565b61132a81846145c4565b6000608082427f00000000000000000000000000000000000000000000000000000000000000006001546134f09190614581565b604080516020810194909452830191909152606082015260800160408051601f198184030181529190528051602090910120901c92915050565b604051627b8a6760e11b8152600481018390526001600160a01b0382811660248301527f0000000000000000000000000000000000000000000000000000000000000000169062f714ce90604401600060405180830381600087803b15801561359257600080fd5b505af11580156135a6573d6000803e3d6000fd5b5050505081600260008282546135bc91906145c4565b90915550505050565b6135cf813061352a565b61235c81614310565b6000811161235c5760405162461bcd60e51b815260206004820152601760248201527f43424d3a20416d6f756e74206d757374206265203e203000000000000000000060448201526064016119e1565b7f000000000000000000000000000000000000000000000000000000000000000081101561235c5760405162461bcd60e51b8152602060048201526024808201527f43424d3a20426f6e64206d696e696d756d20616d6f756e74206e6f742072656160448201526318da195960e21b60648201526084016119e1565b60095460ff16156137035760405162461bcd60e51b8152602060048201526024808201527f43424d3a204d6967726174696f6e206d757374206265206e6f742062652061636044820152637469766560e01b60648201526084016119e1565b565b60405163b6b55f2560e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b6b55f2590602401600060405180830381600087803b15801561376757600080fd5b505af115801561377b573d6000803e3d6000fd5b5050505080600260008282546137919190614534565b909155505050565b7f00000000000000000000000000000000000000000000000000000000000000006137e47f0000000000000000000000000000000000000000000000000000000000000000426145c4565b10156137035760405162461bcd60e51b815260206004820152603c60248201527f43424d3a2053686966746572206f6e6c792063616c6c61626c6520616674657260448201527f20736869667420626f6f74737472617020706572696f6420656e64730000000060648201526084016119e1565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156138b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138dc91906145ab565b116137035760405162461bcd60e51b815260206004820152602b60248201527f43424d3a20624c55534420537570706c79206d757374206265203e203020757060448201526a6f6e207368696674696e6760a81b60648201526084016119e1565b60007f0000000000000000000000000000000000000000000000000000000000000000600c5461396d9190614534565b9050600061399b7f000000000000000000000000000000000000000000000000000000000000000083614534565b90508142101580156139ac57508042105b613a105760405162461bcd60e51b815260206004820152602f60248201527f43424d3a205368696674206f6e6c7920706f737369626c6520696e736964652060448201526e7368696674696e672077696e646f7760881b60648201526084016119e1565b5050565b80600154101561235c5760405162461bcd60e51b8152602060048201526044602482018190527f43424d3a2054686520616d6f756e7420696e2043757276652063616e6e6f7420908201527f62652067726561746572207468616e20746865205065726d616e656e7420627560648201526318dad95d60e21b608482015260a4016119e1565b604051635e0d443f60e01b815260006004820181905260016024830152670de0b6b3a764000060448301529081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635e0d443f90606401602060405180830381865afa158015613b19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b3d91906145ab565b9050670de0b6b3a7640000613120848361454c565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015613bb9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bdd91906145ab565b60405163b6b55f2560e01b8152600481018490529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063b6b55f25906024016020604051808303816000875af1158015613c47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c6b91906145ab565b506040516370a0823160e01b815230600482015260009082906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015613cd5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613cf991906145ab565b613d0391906145c4565b90508060036000828254613d179190614534565b9091555050505050565b60095460ff1661235c577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613d89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613dad91906145ab565b613dd77f000000000000000000000000000000000000000000000000000000000000000083614534565b111561235c5760405162461bcd60e51b815260206004820152602360248201527f43424d3a2043616e6e6f742072656465656d2062656c6f77206d696e20737570604482015262706c7960e81b60648201526084016119e1565b600080600080600080613e426132ae565b509050613e4e81612d9e565b95509550955095509550509091929394565b600080613e6c83610b79565b60078190556040518181529091507fe31dea26c34fb8440bf2eec033dfd26bd39e88e026348d996e275a396417109b9060200160405180910390a1600060065442613eb791906145c4565b9050603c8110612b02574260068190556040519081527fbab964312bdd13595266f3e549bca3102965a6d718c6c1f8cd7eaac076b9c6c29060200160405180910390a15092915050565b600081831015613f705760405162461bcd60e51b815260206004820152603460248201527f43424d3a204d696e2076616c75652063616e6e6f742062652067726561746572604482015273081d1a185b881b9bdb5a5b985b08185b5bdd5b9d60621b60648201526084016119e1565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bfca6c116040518163ffffffff1660e01b8152600401606060405180830381865afa158015613fd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ff491906145db565b50915050828110156140185760405162461bcd60e51b81526004016119e1906146a0565b600061132a8583612eb1565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015614093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906140b79190614609565b5080600360008282546135bc91906145c4565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146137035760405162461bcd60e51b815260206004820152602360248201527f43424d3a204f6e6c7920596561726e20476f7665726e616e63652063616e2063604482015262185b1b60ea1b60648201526084016119e1565b604051635e0d443f60e01b815260016004820152600060248201819052670de0b6b3a764000060448301529081906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635e0d443f90606401602060405180830381865afa1580156141cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906141f191906145ab565b90508261312082670de0b6b3a764000061454c565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d906024016020604051808303816000875af115801561426d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061429191906145ab565b50806003600082825461379191906145c4565b600081831015612ec05781612ec2565b6000670de0b6b3a76400006142ca600282614581565b6142d4848661454c565b6131209190614534565b60006142ea8284614663565b156142f65760016142f9565b60005b60ff166143068385614581565b612ec29190614534565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015614377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061439b91906145ab565b6040516393f7aa6760e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018590529192507f0000000000000000000000000000000000000000000000000000000000000000909116906393f7aa6790604401600060405180830381600087803b15801561442a57600080fd5b505af115801561443e573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528492507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031691506370a0823190602401602060405180830381865afa1580156144a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906144cc91906145ab565b6144d690836145c4565b14613a1057613a106146ec565b6000602082840312156144f557600080fd5b5035919050565b6000806040838503121561450f57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082198211156145475761454761451e565b500190565b60008160001904831182151516156145665761456661451e565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826145905761459061456b565b500490565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156145bd57600080fd5b5051919050565b6000828210156145d6576145d661451e565b500390565b6000806000606084860312156145f057600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121561461b57600080fd5b81518015158114612ec257600080fd5b60608101818460005b6002811015614653578151835260209283019290910190600101614634565b5050508260408301529392505050565b6000826146725761467261456b565b500690565b60006020828403121561468957600080fd5b81516001600160a01b0381168114612ec257600080fd5b6020808252602c908201527f43424d3a204e6f7420656e6f756768204c55534420617661696c61626c65206960408201526b1b88108b941c9bdd1bd8dbdb60a21b606082015260800190565b634e487b7160e01b600052600160045260246000fdfea26469706673582212208bc60955107297aac680b70d0cbf4ff1ac7fe67122786e835b038e811b17021664736f6c634300080d0033\";\nconst isSuperArgs = (xs) => xs.length > 1;\nclass ChickenBondManager__factory extends ethers_1.ContractFactory {\n    constructor(...args) {\n        if (isSuperArgs(args)) {\n            super(...args);\n        }\n        else {\n            super(_abi, _bytecode, args[0]);\n        }\n    }\n    deploy(_externalContractAddresses, _params, overrides) {\n        return super.deploy(_externalContractAddresses, _params, overrides || {});\n    }\n    getDeployTransaction(_externalContractAddresses, _params, overrides) {\n        return super.getDeployTransaction(_externalContractAddresses, _params, overrides || {});\n    }\n    attach(address) {\n        return super.attach(address);\n    }\n    connect(signer) {\n        return super.connect(signer);\n    }\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.ChickenBondManager__factory = ChickenBondManager__factory;\nChickenBondManager__factory.bytecode = _bytecode;\nChickenBondManager__factory.abi = _abi;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC20Faucet__factory = void 0;\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"_name\",\n                type: \"string\",\n            },\n            {\n                internalType: \"string\",\n                name: \"_symbol\",\n                type: \"string\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_tapAmount\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_tapPeriod\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Approval\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\",\n            },\n        ],\n        name: \"OwnershipTransferred\",\n        type: \"event\",\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"value\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"Transfer\",\n        type: \"event\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n        ],\n        name: \"allowance\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"approve\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\",\n            },\n        ],\n        name: \"balanceOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"decimals\",\n        outputs: [\n            {\n                internalType: \"uint8\",\n                name: \"\",\n                type: \"uint8\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"subtractedValue\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"decreaseAllowance\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"spender\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"addedValue\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"increaseAllowance\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        name: \"lastTapped\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"mint\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"renounceOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"symbol\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"tap\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"tapAmount\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"tapPeriod\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [],\n        name: \"totalSupply\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"view\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transfer\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\",\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amount\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"transferFrom\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\",\n            },\n        ],\n        name: \"transferOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\nconst _bytecode = \"\";\nconst isSuperArgs = (xs) => xs.length > 1;\nclass ERC20Faucet__factory extends ethers_1.ContractFactory {\n    constructor(...args) {\n        if (isSuperArgs(args)) {\n            super(...args);\n        }\n        else {\n            super(_abi, _bytecode, args[0]);\n        }\n    }\n    deploy(_name, _symbol, _tapAmount, _tapPeriod, overrides) {\n        return super.deploy(_name, _symbol, _tapAmount, _tapPeriod, overrides || {});\n    }\n    getDeployTransaction(_name, _symbol, _tapAmount, _tapPeriod, overrides) {\n        return super.getDeployTransaction(_name, _symbol, _tapAmount, _tapPeriod, overrides || {});\n    }\n    attach(address) {\n        return super.attach(address);\n    }\n    connect(signer) {\n        return super.connect(signer);\n    }\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.ERC20Faucet__factory = ERC20Faucet__factory;\nERC20Faucet__factory.bytecode = _bytecode;\nERC20Faucet__factory.abi = _abi;\n","\"use strict\";\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurveCryptoSwap2ETH__factory = void 0;\nconst ethers_1 = require(\"ethers\");\nconst _abi = [\n    {\n        name: \"TokenExchange\",\n        inputs: [\n            {\n                name: \"buyer\",\n                type: \"address\",\n                indexed: true,\n            },\n            {\n                name: \"sold_id\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"tokens_sold\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"bought_id\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"tokens_bought\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"AddLiquidity\",\n        inputs: [\n            {\n                name: \"provider\",\n                type: \"address\",\n                indexed: true,\n            },\n            {\n                name: \"token_amounts\",\n                type: \"uint256[2]\",\n                indexed: false,\n            },\n            {\n                name: \"fee\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"token_supply\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"RemoveLiquidity\",\n        inputs: [\n            {\n                name: \"provider\",\n                type: \"address\",\n                indexed: true,\n            },\n            {\n                name: \"token_amounts\",\n                type: \"uint256[2]\",\n                indexed: false,\n            },\n            {\n                name: \"token_supply\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"RemoveLiquidityOne\",\n        inputs: [\n            {\n                name: \"provider\",\n                type: \"address\",\n                indexed: true,\n            },\n            {\n                name: \"token_amount\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"coin_index\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"coin_amount\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"CommitNewAdmin\",\n        inputs: [\n            {\n                name: \"deadline\",\n                type: \"uint256\",\n                indexed: true,\n            },\n            {\n                name: \"admin\",\n                type: \"address\",\n                indexed: true,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"NewAdmin\",\n        inputs: [\n            {\n                name: \"admin\",\n                type: \"address\",\n                indexed: true,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"CommitNewParameters\",\n        inputs: [\n            {\n                name: \"deadline\",\n                type: \"uint256\",\n                indexed: true,\n            },\n            {\n                name: \"admin_fee\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"mid_fee\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"out_fee\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"fee_gamma\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"allowed_extra_profit\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"adjustment_step\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"ma_half_time\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"NewParameters\",\n        inputs: [\n            {\n                name: \"admin_fee\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"mid_fee\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"out_fee\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"fee_gamma\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"allowed_extra_profit\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"adjustment_step\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"ma_half_time\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"RampAgamma\",\n        inputs: [\n            {\n                name: \"initial_A\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"future_A\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"initial_gamma\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"future_gamma\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"initial_time\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"future_time\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"StopRampA\",\n        inputs: [\n            {\n                name: \"current_A\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"current_gamma\",\n                type: \"uint256\",\n                indexed: false,\n            },\n            {\n                name: \"time\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        name: \"ClaimAdminFee\",\n        inputs: [\n            {\n                name: \"admin\",\n                type: \"address\",\n                indexed: true,\n            },\n            {\n                name: \"tokens\",\n                type: \"uint256\",\n                indexed: false,\n            },\n        ],\n        anonymous: false,\n        type: \"event\",\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"constructor\",\n        inputs: [\n            {\n                name: \"owner\",\n                type: \"address\",\n            },\n            {\n                name: \"admin_fee_receiver\",\n                type: \"address\",\n            },\n            {\n                name: \"A\",\n                type: \"uint256\",\n            },\n            {\n                name: \"gamma\",\n                type: \"uint256\",\n            },\n            {\n                name: \"mid_fee\",\n                type: \"uint256\",\n            },\n            {\n                name: \"out_fee\",\n                type: \"uint256\",\n            },\n            {\n                name: \"allowed_extra_profit\",\n                type: \"uint256\",\n            },\n            {\n                name: \"fee_gamma\",\n                type: \"uint256\",\n            },\n            {\n                name: \"adjustment_step\",\n                type: \"uint256\",\n            },\n            {\n                name: \"admin_fee\",\n                type: \"uint256\",\n            },\n            {\n                name: \"ma_half_time\",\n                type: \"uint256\",\n            },\n            {\n                name: \"initial_price\",\n                type: \"uint256\",\n            },\n            {\n                name: \"_token\",\n                type: \"address\",\n            },\n            {\n                name: \"_coins\",\n                type: \"address[2]\",\n            },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"fallback\",\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"token\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"coins\",\n        inputs: [\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"A\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"gamma\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"fee\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"get_virtual_price\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"price_oracle\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"exchange\",\n        inputs: [\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"j\",\n                type: \"uint256\",\n            },\n            {\n                name: \"dx\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_dy\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"exchange\",\n        inputs: [\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"j\",\n                type: \"uint256\",\n            },\n            {\n                name: \"dx\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_dy\",\n                type: \"uint256\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"exchange\",\n        inputs: [\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"j\",\n                type: \"uint256\",\n            },\n            {\n                name: \"dx\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_dy\",\n                type: \"uint256\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n            {\n                name: \"receiver\",\n                type: \"address\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"exchange_underlying\",\n        inputs: [\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"j\",\n                type: \"uint256\",\n            },\n            {\n                name: \"dx\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_dy\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"exchange_underlying\",\n        inputs: [\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"j\",\n                type: \"uint256\",\n            },\n            {\n                name: \"dx\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_dy\",\n                type: \"uint256\",\n            },\n            {\n                name: \"receiver\",\n                type: \"address\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"exchange_extended\",\n        inputs: [\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"j\",\n                type: \"uint256\",\n            },\n            {\n                name: \"dx\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_dy\",\n                type: \"uint256\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n            {\n                name: \"sender\",\n                type: \"address\",\n            },\n            {\n                name: \"receiver\",\n                type: \"address\",\n            },\n            {\n                name: \"cb\",\n                type: \"bytes\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"get_dy\",\n        inputs: [\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"j\",\n                type: \"uint256\",\n            },\n            {\n                name: \"dx\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"add_liquidity\",\n        inputs: [\n            {\n                name: \"amounts\",\n                type: \"uint256[2]\",\n            },\n            {\n                name: \"min_mint_amount\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"add_liquidity\",\n        inputs: [\n            {\n                name: \"amounts\",\n                type: \"uint256[2]\",\n            },\n            {\n                name: \"min_mint_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"payable\",\n        type: \"function\",\n        name: \"add_liquidity\",\n        inputs: [\n            {\n                name: \"amounts\",\n                type: \"uint256[2]\",\n            },\n            {\n                name: \"min_mint_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n            {\n                name: \"receiver\",\n                type: \"address\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"remove_liquidity\",\n        inputs: [\n            {\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_amounts\",\n                type: \"uint256[2]\",\n            },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"remove_liquidity\",\n        inputs: [\n            {\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_amounts\",\n                type: \"uint256[2]\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"remove_liquidity\",\n        inputs: [\n            {\n                name: \"_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_amounts\",\n                type: \"uint256[2]\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n            {\n                name: \"receiver\",\n                type: \"address\",\n            },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"calc_token_amount\",\n        inputs: [\n            {\n                name: \"amounts\",\n                type: \"uint256[2]\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"calc_withdraw_one_coin\",\n        inputs: [\n            {\n                name: \"token_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"remove_liquidity_one_coin\",\n        inputs: [\n            {\n                name: \"token_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_amount\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"remove_liquidity_one_coin\",\n        inputs: [\n            {\n                name: \"token_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"remove_liquidity_one_coin\",\n        inputs: [\n            {\n                name: \"token_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"i\",\n                type: \"uint256\",\n            },\n            {\n                name: \"min_amount\",\n                type: \"uint256\",\n            },\n            {\n                name: \"use_eth\",\n                type: \"bool\",\n            },\n            {\n                name: \"receiver\",\n                type: \"address\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"claim_admin_fees\",\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"ramp_A_gamma\",\n        inputs: [\n            {\n                name: \"future_A\",\n                type: \"uint256\",\n            },\n            {\n                name: \"future_gamma\",\n                type: \"uint256\",\n            },\n            {\n                name: \"future_time\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"stop_ramp_A_gamma\",\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"commit_new_parameters\",\n        inputs: [\n            {\n                name: \"_new_mid_fee\",\n                type: \"uint256\",\n            },\n            {\n                name: \"_new_out_fee\",\n                type: \"uint256\",\n            },\n            {\n                name: \"_new_admin_fee\",\n                type: \"uint256\",\n            },\n            {\n                name: \"_new_fee_gamma\",\n                type: \"uint256\",\n            },\n            {\n                name: \"_new_allowed_extra_profit\",\n                type: \"uint256\",\n            },\n            {\n                name: \"_new_adjustment_step\",\n                type: \"uint256\",\n            },\n            {\n                name: \"_new_ma_half_time\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"apply_new_parameters\",\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"revert_new_parameters\",\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"commit_transfer_ownership\",\n        inputs: [\n            {\n                name: \"_owner\",\n                type: \"address\",\n            },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"apply_transfer_ownership\",\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"revert_transfer_ownership\",\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"kill_me\",\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"unkill_me\",\n        inputs: [],\n        outputs: [],\n    },\n    {\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n        name: \"set_admin_fee_receiver\",\n        inputs: [\n            {\n                name: \"_admin_fee_receiver\",\n                type: \"address\",\n            },\n        ],\n        outputs: [],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"lp_price\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"price_scale\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"last_prices\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"last_prices_timestamp\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"initial_A_gamma\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_A_gamma\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"initial_A_gamma_time\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_A_gamma_time\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"allowed_extra_profit\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_allowed_extra_profit\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"fee_gamma\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_fee_gamma\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"adjustment_step\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_adjustment_step\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"ma_half_time\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_ma_half_time\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"mid_fee\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"out_fee\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"admin_fee\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_mid_fee\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_out_fee\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_admin_fee\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"balances\",\n        inputs: [\n            {\n                name: \"arg0\",\n                type: \"uint256\",\n            },\n        ],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"D\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"owner\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"future_owner\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"xcp_profit\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"xcp_profit_a\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"virtual_price\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"is_killed\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"bool\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"kill_deadline\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"transfer_ownership_deadline\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"admin_actions_deadline\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"uint256\",\n            },\n        ],\n    },\n    {\n        stateMutability: \"view\",\n        type: \"function\",\n        name: \"admin_fee_receiver\",\n        inputs: [],\n        outputs: [\n            {\n                name: \"\",\n                type: \"address\",\n            },\n        ],\n    },\n];\nclass CurveCryptoSwap2ETH__factory {\n    static createInterface() {\n        return new ethers_1.utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new ethers_1.Contract(address, _abi, signerOrProvider);\n    }\n}\nexports.CurveCryptoSwap2ETH__factory = CurveCryptoSwap2ETH__factory;\nCurveCryptoSwap2ETH__factory.abi = _abi;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurveCryptoSwap2ETH__factory = exports.factories = void 0;\nexports.factories = __importStar(require(\"./factories\"));\nvar CurveCryptoSwap2ETH__factory_1 = require(\"./factories/CurveCryptoSwap2ETH__factory\");\nObject.defineProperty(exports, \"CurveCryptoSwap2ETH__factory\", { enumerable: true, get: function () { return CurveCryptoSwap2ETH__factory_1.CurveCryptoSwap2ETH__factory; } });\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BatchedWebSocketAugmentedWeb3Provider = exports.Batched = exports.isBatchedProvider = void 0;\r\nconst address_1 = require(\"@ethersproject/address\");\r\nconst contracts_1 = require(\"@ethersproject/contracts\");\r\nconst properties_1 = require(\"@ethersproject/properties\");\r\nconst WebSocketAugmentedProvider_1 = require(\"./WebSocketAugmentedProvider\");\r\nconst multicallAddress = {\r\n    1: \"0xeefBa1e63905eF1D7ACbA5a8513c70307C1cE441\",\r\n    3: \"0x53C43764255c17BD724F74c4eF150724AC50a3ed\",\r\n    4: \"0x42Ad527de7d4e9d9d011aC45B31D8551f8Fe9821\",\r\n    5: \"0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e\",\r\n    42: \"0x2cc8688C5f75E365aaEEb4ea8D6a480405A48D2A\"\r\n};\r\nconst hasMulticall = (chainId) => chainId in multicallAddress;\r\nconst multicallAbi = [\r\n    {\r\n        type: \"function\",\r\n        name: \"aggregate\",\r\n        stateMutability: \"nonpayable\",\r\n        constant: false,\r\n        payable: false,\r\n        inputs: [\r\n            {\r\n                components: [\r\n                    {\r\n                        name: \"target\",\r\n                        type: \"address\"\r\n                    },\r\n                    {\r\n                        name: \"callData\",\r\n                        type: \"bytes\"\r\n                    }\r\n                ],\r\n                name: \"calls\",\r\n                type: \"tuple[]\"\r\n            }\r\n        ],\r\n        outputs: [\r\n            {\r\n                name: \"blockNumber\",\r\n                type: \"uint256\"\r\n            },\r\n            {\r\n                name: \"returnData\",\r\n                type: \"bytes[]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: \"function\",\r\n        name: \"getEthBalance\",\r\n        stateMutability: \"view\",\r\n        constant: true,\r\n        payable: false,\r\n        inputs: [\r\n            {\r\n                name: \"addr\",\r\n                type: \"address\"\r\n            }\r\n        ],\r\n        outputs: [\r\n            {\r\n                name: \"balance\",\r\n                type: \"uint256\"\r\n            }\r\n        ]\r\n    }\r\n];\r\nconst emptyBatch = () => ({ calls: [], callbacks: [] });\r\n// TODO\r\n//\r\n// Technically, requests that have a `from` address shouldn't be batched, because `msg.sender` will\r\n// be replaced with the Multicall contract's address when the batched calls are being executed.\r\n//\r\n// Currently, `@liquity/lib-ethers` makes many of its read calls through Signers, which populates\r\n// `from`. Instead these calls should be made through a Provider, and `from` should be omitted\r\n// (since none of the read calls in Liquity care about `msg.sender`).\r\n//\r\n// Then we'll be able to properly exclude calls that have `from` addresses from batching.\r\nconst batchableCall = (request) => request.gasLimit === undefined && request.gasPrice === undefined && request.value === undefined;\r\nconst batchedCall = (request, multicallAddress) => request.to === multicallAddress &&\r\n    typeof request.data === \"string\" &&\r\n    request.data.startsWith(\"0x252dba42\"); // signature of `aggregate((address,bytes)[])`\r\nconst batchedProviders = [];\r\nconst isBatchedProvider = (provider) => batchedProviders.some(batchedProvider => provider instanceof batchedProvider);\r\nexports.isBatchedProvider = isBatchedProvider;\r\nconst Batched = (Base) => {\r\n    const batchedProvider = class extends Base {\r\n        constructor() {\r\n            super(...arguments);\r\n            this.batchingDelayMs = 10;\r\n            this._chainId = 0;\r\n            this._batched = emptyBatch();\r\n            this._numberOfBatchedCalls = 0;\r\n            this._numberOfActualCalls = 0;\r\n        }\r\n        get chainId() {\r\n            return this._chainId;\r\n        }\r\n        set chainId(chainId) {\r\n            if (this._multicall) {\r\n                throw new Error(\"can only set chainId once\");\r\n            }\r\n            if (hasMulticall(chainId)) {\r\n                this._multicall = new contracts_1.Contract(multicallAddress[chainId], multicallAbi, this);\r\n            }\r\n            this._chainId = chainId;\r\n        }\r\n        async _dispatchCalls() {\r\n            const { calls, callbacks, blockTag } = this._batched;\r\n            this._batched = emptyBatch();\r\n            try {\r\n                const results = calls.length > 1\r\n                    ? await this._multicall.callStatic.aggregate(calls, { blockTag }).then(x => x.returnData)\r\n                    : [await super.call({ to: calls[0].target, data: calls[0].callData }, blockTag)];\r\n                callbacks.forEach(([resolve], i) => resolve(results[i]));\r\n            }\r\n            catch (error) {\r\n                callbacks.forEach(([, reject]) => reject(error));\r\n            }\r\n        }\r\n        _enqueueCall(call) {\r\n            if (this._timeoutId !== undefined) {\r\n                clearTimeout(this._timeoutId);\r\n            }\r\n            this._batched.calls.push(call);\r\n            this._timeoutId = setTimeout(() => this._dispatchCalls(), this.batchingDelayMs);\r\n            return new Promise((resolve, reject) => this._batched.callbacks.push([resolve, reject]));\r\n        }\r\n        _alreadyBatchedCallsConflictWith(blockTag) {\r\n            var _a;\r\n            return (this._batched.calls.length !== 0 &&\r\n                (blockTag !== null && blockTag !== void 0 ? blockTag : \"latest\") !== ((_a = this._batched.blockTag) !== null && _a !== void 0 ? _a : \"latest\"));\r\n        }\r\n        async call(request, blockTag) {\r\n            if (!this._multicall) {\r\n                return super.call(request, blockTag);\r\n            }\r\n            else {\r\n                const now = new Date().getTime();\r\n                if (this._timeOfLastRatioCheck === undefined) {\r\n                    this._timeOfLastRatioCheck = now;\r\n                }\r\n                else {\r\n                    const timeSinceLastRatioCheck = now - this._timeOfLastRatioCheck;\r\n                    if (timeSinceLastRatioCheck >= 10000 && this._numberOfActualCalls) {\r\n                        // console.log(\r\n                        //   `Call batching ratio: ${\r\n                        //     Math.round((10 * this._numberOfBatchedCalls) / this._numberOfActualCalls) / 10\r\n                        //   }X`\r\n                        // );\r\n                        this._numberOfBatchedCalls = 0;\r\n                        this._numberOfActualCalls = 0;\r\n                        this._timeOfLastRatioCheck = now;\r\n                    }\r\n                }\r\n            }\r\n            const [resolvedRequest, resolvedBlockTag] = await Promise.all([\r\n                properties_1.resolveProperties(request),\r\n                blockTag\r\n            ]);\r\n            if (batchedCall(resolvedRequest, this._multicall.address) ||\r\n                !batchableCall(resolvedRequest) ||\r\n                this._alreadyBatchedCallsConflictWith(resolvedBlockTag)) {\r\n                this._numberOfActualCalls++;\r\n                return super.call(resolvedRequest, resolvedBlockTag);\r\n            }\r\n            else {\r\n                this._numberOfBatchedCalls++;\r\n                if (this._batched.calls.length === 0) {\r\n                    this._batched.blockTag = resolvedBlockTag;\r\n                }\r\n                return this._enqueueCall({ target: resolvedRequest.to, callData: resolvedRequest.data });\r\n            }\r\n        }\r\n        async getBalance(addressOrName, blockTag) {\r\n            const [resolvedAddressOrName, resolvedBlockTag] = await Promise.all([addressOrName, blockTag]);\r\n            if (!address_1.isAddress(resolvedAddressOrName) || !this._multicall) {\r\n                return super.getBalance(resolvedAddressOrName, blockTag);\r\n            }\r\n            const [balance] = await this._multicall.functions.getEthBalance(resolvedAddressOrName, {\r\n                blockTag: resolvedBlockTag\r\n            });\r\n            return balance;\r\n        }\r\n    };\r\n    batchedProviders.push(batchedProvider);\r\n    return batchedProvider;\r\n};\r\nexports.Batched = Batched;\r\nexports.BatchedWebSocketAugmentedWeb3Provider = exports.Batched(WebSocketAugmentedProvider_1.WebSocketAugmentedWeb3Provider);\r\n//# sourceMappingURL=BatchedProvider.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TroveWithPendingRedistribution = exports.UserTrove = exports._emptyTrove = exports.Trove = exports._normalizeTroveAdjustment = exports._normalizeTroveCreation = void 0;\r\nconst assert_1 = __importDefault(require(\"assert\"));\r\nconst Decimal_1 = require(\"./Decimal\");\r\nconst constants_1 = require(\"./constants\");\r\nconst invalidTroveCreation = (invalidTrove, error) => ({\r\n    type: \"invalidCreation\",\r\n    invalidTrove,\r\n    error\r\n});\r\nconst troveCreation = (params) => ({\r\n    type: \"creation\",\r\n    params\r\n});\r\nconst troveClosure = (params) => ({\r\n    type: \"closure\",\r\n    params\r\n});\r\nconst troveAdjustment = (params, setToZero) => ({\r\n    type: \"adjustment\",\r\n    params,\r\n    setToZero\r\n});\r\nconst valueIsDefined = (entry) => entry[1] !== undefined;\r\nconst allowedTroveCreationKeys = [\r\n    \"depositCollateral\",\r\n    \"borrowLUSD\"\r\n];\r\nfunction checkAllowedTroveCreationKeys(entries) {\r\n    const badKeys = entries\r\n        .filter(([k]) => !allowedTroveCreationKeys.includes(k))\r\n        .map(([k]) => `'${k}'`);\r\n    if (badKeys.length > 0) {\r\n        throw new Error(`TroveCreationParams: property ${badKeys.join(\", \")} not allowed`);\r\n    }\r\n}\r\nconst troveCreationParamsFromEntries = (entries) => {\r\n    const params = Object.fromEntries(entries);\r\n    const missingKeys = allowedTroveCreationKeys.filter(k => !(k in params)).map(k => `'${k}'`);\r\n    if (missingKeys.length > 0) {\r\n        throw new Error(`TroveCreationParams: property ${missingKeys.join(\", \")} missing`);\r\n    }\r\n    return params;\r\n};\r\nconst decimalize = ([k, v]) => [k, Decimal_1.Decimal.from(v)];\r\nconst nonZero = ([, v]) => !v.isZero;\r\n/** @internal */\r\nconst _normalizeTroveCreation = (params) => {\r\n    const definedEntries = Object.entries(params).filter(valueIsDefined);\r\n    checkAllowedTroveCreationKeys(definedEntries);\r\n    const nonZeroEntries = definedEntries.map(decimalize);\r\n    return troveCreationParamsFromEntries(nonZeroEntries);\r\n};\r\nexports._normalizeTroveCreation = _normalizeTroveCreation;\r\nconst allowedTroveAdjustmentKeys = [\r\n    \"depositCollateral\",\r\n    \"withdrawCollateral\",\r\n    \"borrowLUSD\",\r\n    \"repayLUSD\"\r\n];\r\nfunction checkAllowedTroveAdjustmentKeys(entries) {\r\n    const badKeys = entries\r\n        .filter(([k]) => !allowedTroveAdjustmentKeys.includes(k))\r\n        .map(([k]) => `'${k}'`);\r\n    if (badKeys.length > 0) {\r\n        throw new Error(`TroveAdjustmentParams: property ${badKeys.join(\", \")} not allowed`);\r\n    }\r\n}\r\nconst collateralChangeFrom = ({ depositCollateral, withdrawCollateral }) => {\r\n    if (depositCollateral !== undefined && withdrawCollateral !== undefined) {\r\n        throw new Error(\"TroveAdjustmentParams: 'depositCollateral' and 'withdrawCollateral' \" +\r\n            \"can't be present at the same time\");\r\n    }\r\n    if (depositCollateral !== undefined) {\r\n        return { depositCollateral };\r\n    }\r\n    if (withdrawCollateral !== undefined) {\r\n        return { withdrawCollateral };\r\n    }\r\n};\r\nconst debtChangeFrom = ({ borrowLUSD, repayLUSD }) => {\r\n    if (borrowLUSD !== undefined && repayLUSD !== undefined) {\r\n        throw new Error(\"TroveAdjustmentParams: 'borrowLUSD' and 'repayLUSD' can't be present at the same time\");\r\n    }\r\n    if (borrowLUSD !== undefined) {\r\n        return { borrowLUSD };\r\n    }\r\n    if (repayLUSD !== undefined) {\r\n        return { repayLUSD };\r\n    }\r\n};\r\nconst troveAdjustmentParamsFromEntries = (entries) => {\r\n    const params = Object.fromEntries(entries);\r\n    const collateralChange = collateralChangeFrom(params);\r\n    const debtChange = debtChangeFrom(params);\r\n    if (collateralChange !== undefined && debtChange !== undefined) {\r\n        return { ...collateralChange, ...debtChange };\r\n    }\r\n    if (collateralChange !== undefined) {\r\n        return collateralChange;\r\n    }\r\n    if (debtChange !== undefined) {\r\n        return debtChange;\r\n    }\r\n    throw new Error(\"TroveAdjustmentParams: must include at least one non-zero parameter\");\r\n};\r\n/** @internal */\r\nconst _normalizeTroveAdjustment = (params) => {\r\n    const definedEntries = Object.entries(params).filter(valueIsDefined);\r\n    checkAllowedTroveAdjustmentKeys(definedEntries);\r\n    const nonZeroEntries = definedEntries.map(decimalize).filter(nonZero);\r\n    return troveAdjustmentParamsFromEntries(nonZeroEntries);\r\n};\r\nexports._normalizeTroveAdjustment = _normalizeTroveAdjustment;\r\nconst applyFee = (borrowingRate, debtIncrease) => debtIncrease.mul(Decimal_1.Decimal.ONE.add(borrowingRate));\r\nconst unapplyFee = (borrowingRate, debtIncrease) => debtIncrease._divCeil(Decimal_1.Decimal.ONE.add(borrowingRate));\r\nconst NOMINAL_COLLATERAL_RATIO_PRECISION = Decimal_1.Decimal.from(100);\r\n/**\r\n * A combination of collateral and debt.\r\n *\r\n * @public\r\n */\r\nclass Trove {\r\n    /** @internal */\r\n    constructor(collateral = Decimal_1.Decimal.ZERO, debt = Decimal_1.Decimal.ZERO) {\r\n        this.collateral = collateral;\r\n        this.debt = debt;\r\n    }\r\n    get isEmpty() {\r\n        return this.collateral.isZero && this.debt.isZero;\r\n    }\r\n    /**\r\n     * Amount of LUSD that must be repaid to close this Trove.\r\n     *\r\n     * @remarks\r\n     * This doesn't include the liquidation reserve, which is refunded in case of normal closure.\r\n     */\r\n    get netDebt() {\r\n        if (this.debt.lt(constants_1.LUSD_LIQUIDATION_RESERVE)) {\r\n            throw new Error(`netDebt should not be used when debt < ${constants_1.LUSD_LIQUIDATION_RESERVE}`);\r\n        }\r\n        return this.debt.sub(constants_1.LUSD_LIQUIDATION_RESERVE);\r\n    }\r\n    /** @internal */\r\n    get _nominalCollateralRatio() {\r\n        return this.collateral.mulDiv(NOMINAL_COLLATERAL_RATIO_PRECISION, this.debt);\r\n    }\r\n    /** Calculate the Trove's collateralization ratio at a given price. */\r\n    collateralRatio(price) {\r\n        return this.collateral.mulDiv(price, this.debt);\r\n    }\r\n    /**\r\n     * Whether the Trove is undercollateralized at a given price.\r\n     *\r\n     * @returns\r\n     * `true` if the Trove's collateralization ratio is less than the\r\n     * {@link MINIMUM_COLLATERAL_RATIO}.\r\n     */\r\n    collateralRatioIsBelowMinimum(price) {\r\n        return this.collateralRatio(price).lt(constants_1.MINIMUM_COLLATERAL_RATIO);\r\n    }\r\n    /**\r\n     * Whether the collateralization ratio is less than the {@link CRITICAL_COLLATERAL_RATIO} at a\r\n     * given price.\r\n     *\r\n     * @example\r\n     * Can be used to check whether the Liquity protocol is in recovery mode by using it on the return\r\n     * value of {@link ReadableLiquity.getTotal | getTotal()}. For example:\r\n     *\r\n     * ```typescript\r\n     * const total = await liquity.getTotal();\r\n     * const price = await liquity.getPrice();\r\n     *\r\n     * if (total.collateralRatioIsBelowCritical(price)) {\r\n     *   // Recovery mode is active\r\n     * }\r\n     * ```\r\n     */\r\n    collateralRatioIsBelowCritical(price) {\r\n        return this.collateralRatio(price).lt(constants_1.CRITICAL_COLLATERAL_RATIO);\r\n    }\r\n    /** Whether the Trove is sufficiently collateralized to be opened during recovery mode. */\r\n    isOpenableInRecoveryMode(price) {\r\n        return this.collateralRatio(price).gte(constants_1.CRITICAL_COLLATERAL_RATIO);\r\n    }\r\n    /** @internal */\r\n    toString() {\r\n        return `{ collateral: ${this.collateral}, debt: ${this.debt} }`;\r\n    }\r\n    equals(that) {\r\n        return this.collateral.eq(that.collateral) && this.debt.eq(that.debt);\r\n    }\r\n    add(that) {\r\n        return new Trove(this.collateral.add(that.collateral), this.debt.add(that.debt));\r\n    }\r\n    addCollateral(collateral) {\r\n        return new Trove(this.collateral.add(collateral), this.debt);\r\n    }\r\n    addDebt(debt) {\r\n        return new Trove(this.collateral, this.debt.add(debt));\r\n    }\r\n    subtract(that) {\r\n        const { collateral, debt } = that;\r\n        return new Trove(this.collateral.gt(collateral) ? this.collateral.sub(collateral) : Decimal_1.Decimal.ZERO, this.debt.gt(debt) ? this.debt.sub(debt) : Decimal_1.Decimal.ZERO);\r\n    }\r\n    subtractCollateral(collateral) {\r\n        return new Trove(this.collateral.gt(collateral) ? this.collateral.sub(collateral) : Decimal_1.Decimal.ZERO, this.debt);\r\n    }\r\n    subtractDebt(debt) {\r\n        return new Trove(this.collateral, this.debt.gt(debt) ? this.debt.sub(debt) : Decimal_1.Decimal.ZERO);\r\n    }\r\n    multiply(multiplier) {\r\n        return new Trove(this.collateral.mul(multiplier), this.debt.mul(multiplier));\r\n    }\r\n    setCollateral(collateral) {\r\n        return new Trove(Decimal_1.Decimal.from(collateral), this.debt);\r\n    }\r\n    setDebt(debt) {\r\n        return new Trove(this.collateral, Decimal_1.Decimal.from(debt));\r\n    }\r\n    _debtChange({ debt }, borrowingRate) {\r\n        return debt.gt(this.debt)\r\n            ? { borrowLUSD: unapplyFee(borrowingRate, debt.sub(this.debt)) }\r\n            : { repayLUSD: this.debt.sub(debt) };\r\n    }\r\n    _collateralChange({ collateral }) {\r\n        return collateral.gt(this.collateral)\r\n            ? { depositCollateral: collateral.sub(this.collateral) }\r\n            : { withdrawCollateral: this.collateral.sub(collateral) };\r\n    }\r\n    /**\r\n     * Calculate the difference between this Trove and another.\r\n     *\r\n     * @param that - The other Trove.\r\n     * @param borrowingRate - Borrowing rate to use when calculating a borrowed amount.\r\n     *\r\n     * @returns\r\n     * An object representing the change, or `undefined` if the Troves are equal.\r\n     */\r\n    whatChanged(that, borrowingRate = constants_1.MINIMUM_BORROWING_RATE) {\r\n        var _a;\r\n        if (this.collateral.eq(that.collateral) && this.debt.eq(that.debt)) {\r\n            return undefined;\r\n        }\r\n        if (this.isEmpty) {\r\n            if (that.debt.lt(constants_1.LUSD_LIQUIDATION_RESERVE)) {\r\n                return invalidTroveCreation(that, \"missingLiquidationReserve\");\r\n            }\r\n            return troveCreation({\r\n                depositCollateral: that.collateral,\r\n                borrowLUSD: unapplyFee(borrowingRate, that.netDebt)\r\n            });\r\n        }\r\n        if (that.isEmpty) {\r\n            return troveClosure(this.netDebt.nonZero\r\n                ? { withdrawCollateral: this.collateral, repayLUSD: this.netDebt }\r\n                : { withdrawCollateral: this.collateral });\r\n        }\r\n        return this.collateral.eq(that.collateral)\r\n            ? troveAdjustment(this._debtChange(that, borrowingRate), that.debt.zero && \"debt\")\r\n            : this.debt.eq(that.debt)\r\n                ? troveAdjustment(this._collateralChange(that), that.collateral.zero && \"collateral\")\r\n                : troveAdjustment({\r\n                    ...this._debtChange(that, borrowingRate),\r\n                    ...this._collateralChange(that)\r\n                }, (_a = (that.debt.zero && \"debt\")) !== null && _a !== void 0 ? _a : (that.collateral.zero && \"collateral\"));\r\n    }\r\n    /**\r\n     * Make a new Trove by applying a {@link TroveChange} to this Trove.\r\n     *\r\n     * @param change - The change to apply.\r\n     * @param borrowingRate - Borrowing rate to use when adding a borrowed amount to the Trove's debt.\r\n     */\r\n    apply(change, borrowingRate = constants_1.MINIMUM_BORROWING_RATE) {\r\n        if (!change) {\r\n            return this;\r\n        }\r\n        switch (change.type) {\r\n            case \"invalidCreation\":\r\n                if (!this.isEmpty) {\r\n                    throw new Error(\"Can't create onto existing Trove\");\r\n                }\r\n                return change.invalidTrove;\r\n            case \"creation\": {\r\n                if (!this.isEmpty) {\r\n                    throw new Error(\"Can't create onto existing Trove\");\r\n                }\r\n                const { depositCollateral, borrowLUSD } = change.params;\r\n                return new Trove(depositCollateral, constants_1.LUSD_LIQUIDATION_RESERVE.add(applyFee(borrowingRate, borrowLUSD)));\r\n            }\r\n            case \"closure\":\r\n                if (this.isEmpty) {\r\n                    throw new Error(\"Can't close empty Trove\");\r\n                }\r\n                return exports._emptyTrove;\r\n            case \"adjustment\": {\r\n                const { setToZero, params: { depositCollateral, withdrawCollateral, borrowLUSD, repayLUSD } } = change;\r\n                const collateralDecrease = withdrawCollateral !== null && withdrawCollateral !== void 0 ? withdrawCollateral : Decimal_1.Decimal.ZERO;\r\n                const collateralIncrease = depositCollateral !== null && depositCollateral !== void 0 ? depositCollateral : Decimal_1.Decimal.ZERO;\r\n                const debtDecrease = repayLUSD !== null && repayLUSD !== void 0 ? repayLUSD : Decimal_1.Decimal.ZERO;\r\n                const debtIncrease = borrowLUSD ? applyFee(borrowingRate, borrowLUSD) : Decimal_1.Decimal.ZERO;\r\n                return setToZero === \"collateral\"\r\n                    ? this.setCollateral(Decimal_1.Decimal.ZERO).addDebt(debtIncrease).subtractDebt(debtDecrease)\r\n                    : setToZero === \"debt\"\r\n                        ? this.setDebt(Decimal_1.Decimal.ZERO)\r\n                            .addCollateral(collateralIncrease)\r\n                            .subtractCollateral(collateralDecrease)\r\n                        : this.add(new Trove(collateralIncrease, debtIncrease)).subtract(new Trove(collateralDecrease, debtDecrease));\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Calculate the result of an {@link TransactableLiquity.openTrove | openTrove()} transaction.\r\n     *\r\n     * @param params - Parameters of the transaction.\r\n     * @param borrowingRate - Borrowing rate to use when calculating the Trove's debt.\r\n     */\r\n    static create(params, borrowingRate) {\r\n        return exports._emptyTrove.apply(troveCreation(exports._normalizeTroveCreation(params)), borrowingRate);\r\n    }\r\n    /**\r\n     * Calculate the parameters of an {@link TransactableLiquity.openTrove | openTrove()} transaction\r\n     * that will result in the given Trove.\r\n     *\r\n     * @param that - The Trove to recreate.\r\n     * @param borrowingRate - Current borrowing rate.\r\n     */\r\n    static recreate(that, borrowingRate) {\r\n        const change = exports._emptyTrove.whatChanged(that, borrowingRate);\r\n        assert_1.default((change === null || change === void 0 ? void 0 : change.type) === \"creation\");\r\n        return change.params;\r\n    }\r\n    /**\r\n     * Calculate the result of an {@link TransactableLiquity.adjustTrove | adjustTrove()} transaction\r\n     * on this Trove.\r\n     *\r\n     * @param params - Parameters of the transaction.\r\n     * @param borrowingRate - Borrowing rate to use when adding to the Trove's debt.\r\n     */\r\n    adjust(params, borrowingRate) {\r\n        return this.apply(troveAdjustment(exports._normalizeTroveAdjustment(params)), borrowingRate);\r\n    }\r\n    /**\r\n     * Calculate the parameters of an {@link TransactableLiquity.adjustTrove | adjustTrove()}\r\n     * transaction that will change this Trove into the given Trove.\r\n     *\r\n     * @param that - The desired result of the transaction.\r\n     * @param borrowingRate - Current borrowing rate.\r\n     */\r\n    adjustTo(that, borrowingRate) {\r\n        const change = this.whatChanged(that, borrowingRate);\r\n        assert_1.default((change === null || change === void 0 ? void 0 : change.type) === \"adjustment\");\r\n        return change.params;\r\n    }\r\n}\r\nexports.Trove = Trove;\r\n/** @internal */\r\nexports._emptyTrove = new Trove();\r\n/**\r\n * A Trove that is associated with a single owner.\r\n *\r\n * @remarks\r\n * The SDK uses the base {@link Trove} class as a generic container of collateral and debt, for\r\n * example to represent the {@link ReadableLiquity.getTotal | total collateral and debt} locked up\r\n * in the protocol.\r\n *\r\n * The `UserTrove` class extends `Trove` with extra information that's only available for Troves\r\n * that are associated with a single owner (such as the owner's address, or the Trove's status).\r\n *\r\n * @public\r\n */\r\nclass UserTrove extends Trove {\r\n    /** @internal */\r\n    constructor(ownerAddress, status, collateral, debt) {\r\n        super(collateral, debt);\r\n        this.ownerAddress = ownerAddress;\r\n        this.status = status;\r\n    }\r\n    equals(that) {\r\n        return (super.equals(that) && this.ownerAddress === that.ownerAddress && this.status === that.status);\r\n    }\r\n    /** @internal */\r\n    toString() {\r\n        return (`{ ownerAddress: \"${this.ownerAddress}\"` +\r\n            `, collateral: ${this.collateral}` +\r\n            `, debt: ${this.debt}` +\r\n            `, status: \"${this.status}\" }`);\r\n    }\r\n}\r\nexports.UserTrove = UserTrove;\r\n/**\r\n * A Trove in its state after the last direct modification.\r\n *\r\n * @remarks\r\n * The Trove may have received collateral and debt shares from liquidations since then.\r\n * Use {@link TroveWithPendingRedistribution.applyRedistribution | applyRedistribution()} to\r\n * calculate the Trove's most up-to-date state.\r\n *\r\n * @public\r\n */\r\nclass TroveWithPendingRedistribution extends UserTrove {\r\n    /** @internal */\r\n    constructor(ownerAddress, status, collateral, debt, stake = Decimal_1.Decimal.ZERO, snapshotOfTotalRedistributed = exports._emptyTrove) {\r\n        super(ownerAddress, status, collateral, debt);\r\n        this.stake = stake;\r\n        this.snapshotOfTotalRedistributed = snapshotOfTotalRedistributed;\r\n    }\r\n    applyRedistribution(totalRedistributed) {\r\n        const afterRedistribution = this.add(totalRedistributed.subtract(this.snapshotOfTotalRedistributed).multiply(this.stake));\r\n        return new UserTrove(this.ownerAddress, this.status, afterRedistribution.collateral, afterRedistribution.debt);\r\n    }\r\n    equals(that) {\r\n        return (super.equals(that) &&\r\n            this.stake.eq(that.stake) &&\r\n            this.snapshotOfTotalRedistributed.equals(that.snapshotOfTotalRedistributed));\r\n    }\r\n}\r\nexports.TroveWithPendingRedistribution = TroveWithPendingRedistribution;\r\n//# sourceMappingURL=Trove.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.StabilityDeposit = void 0;\r\nconst Decimal_1 = require(\"./Decimal\");\r\n/**\r\n * A Stability Deposit and its accrued gains.\r\n *\r\n * @public\r\n */\r\nclass StabilityDeposit {\r\n    /** @internal */\r\n    constructor(initialLUSD, currentLUSD, collateralGain, lqtyReward, frontendTag) {\r\n        this.initialLUSD = initialLUSD;\r\n        this.currentLUSD = currentLUSD;\r\n        this.collateralGain = collateralGain;\r\n        this.lqtyReward = lqtyReward;\r\n        this.frontendTag = frontendTag;\r\n        if (this.currentLUSD.gt(this.initialLUSD)) {\r\n            throw new Error(\"currentLUSD can't be greater than initialLUSD\");\r\n        }\r\n    }\r\n    get isEmpty() {\r\n        return (this.initialLUSD.isZero &&\r\n            this.currentLUSD.isZero &&\r\n            this.collateralGain.isZero &&\r\n            this.lqtyReward.isZero);\r\n    }\r\n    /** @internal */\r\n    toString() {\r\n        return (`{ initialLUSD: ${this.initialLUSD}` +\r\n            `, currentLUSD: ${this.currentLUSD}` +\r\n            `, collateralGain: ${this.collateralGain}` +\r\n            `, lqtyReward: ${this.lqtyReward}` +\r\n            `, frontendTag: \"${this.frontendTag}\" }`);\r\n    }\r\n    /**\r\n     * Compare to another instance of `StabilityDeposit`.\r\n     */\r\n    equals(that) {\r\n        return (this.initialLUSD.eq(that.initialLUSD) &&\r\n            this.currentLUSD.eq(that.currentLUSD) &&\r\n            this.collateralGain.eq(that.collateralGain) &&\r\n            this.lqtyReward.eq(that.lqtyReward) &&\r\n            this.frontendTag === that.frontendTag);\r\n    }\r\n    /**\r\n     * Calculate the difference between the `currentLUSD` in this Stability Deposit and `thatLUSD`.\r\n     *\r\n     * @returns An object representing the change, or `undefined` if the deposited amounts are equal.\r\n     */\r\n    whatChanged(thatLUSD) {\r\n        thatLUSD = Decimal_1.Decimal.from(thatLUSD);\r\n        if (thatLUSD.lt(this.currentLUSD)) {\r\n            return { withdrawLUSD: this.currentLUSD.sub(thatLUSD), withdrawAllLUSD: thatLUSD.isZero };\r\n        }\r\n        if (thatLUSD.gt(this.currentLUSD)) {\r\n            return { depositLUSD: thatLUSD.sub(this.currentLUSD) };\r\n        }\r\n    }\r\n    /**\r\n     * Apply a {@link StabilityDepositChange} to this Stability Deposit.\r\n     *\r\n     * @returns The new deposited LUSD amount.\r\n     */\r\n    apply(change) {\r\n        if (!change) {\r\n            return this.currentLUSD;\r\n        }\r\n        if (change.withdrawLUSD !== undefined) {\r\n            return change.withdrawAllLUSD || this.currentLUSD.lte(change.withdrawLUSD)\r\n                ? Decimal_1.Decimal.ZERO\r\n                : this.currentLUSD.sub(change.withdrawLUSD);\r\n        }\r\n        else {\r\n            return this.currentLUSD.add(change.depositLUSD);\r\n        }\r\n    }\r\n}\r\nexports.StabilityDeposit = StabilityDeposit;\r\n//# sourceMappingURL=StabilityDeposit.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LQTYStake = void 0;\r\nconst Decimal_1 = require(\"./Decimal\");\r\n/**\r\n * Represents a user's LQTY stake and accrued gains.\r\n *\r\n * @remarks\r\n * Returned by the {@link ReadableLiquity.getLQTYStake | getLQTYStake()} function.\r\n\r\n * @public\r\n */\r\nclass LQTYStake {\r\n    /** @internal */\r\n    constructor(stakedLQTY = Decimal_1.Decimal.ZERO, collateralGain = Decimal_1.Decimal.ZERO, lusdGain = Decimal_1.Decimal.ZERO) {\r\n        this.stakedLQTY = stakedLQTY;\r\n        this.collateralGain = collateralGain;\r\n        this.lusdGain = lusdGain;\r\n    }\r\n    get isEmpty() {\r\n        return this.stakedLQTY.isZero && this.collateralGain.isZero && this.lusdGain.isZero;\r\n    }\r\n    /** @internal */\r\n    toString() {\r\n        return (`{ stakedLQTY: ${this.stakedLQTY}` +\r\n            `, collateralGain: ${this.collateralGain}` +\r\n            `, lusdGain: ${this.lusdGain} }`);\r\n    }\r\n    /**\r\n     * Compare to another instance of `LQTYStake`.\r\n     */\r\n    equals(that) {\r\n        return (this.stakedLQTY.eq(that.stakedLQTY) &&\r\n            this.collateralGain.eq(that.collateralGain) &&\r\n            this.lusdGain.eq(that.lusdGain));\r\n    }\r\n    /**\r\n     * Calculate the difference between this `LQTYStake` and `thatStakedLQTY`.\r\n     *\r\n     * @returns An object representing the change, or `undefined` if the staked amounts are equal.\r\n     */\r\n    whatChanged(thatStakedLQTY) {\r\n        thatStakedLQTY = Decimal_1.Decimal.from(thatStakedLQTY);\r\n        if (thatStakedLQTY.lt(this.stakedLQTY)) {\r\n            return {\r\n                unstakeLQTY: this.stakedLQTY.sub(thatStakedLQTY),\r\n                unstakeAllLQTY: thatStakedLQTY.isZero\r\n            };\r\n        }\r\n        if (thatStakedLQTY.gt(this.stakedLQTY)) {\r\n            return { stakeLQTY: thatStakedLQTY.sub(this.stakedLQTY) };\r\n        }\r\n    }\r\n    /**\r\n     * Apply a {@link LQTYStakeChange} to this `LQTYStake`.\r\n     *\r\n     * @returns The new staked LQTY amount.\r\n     */\r\n    apply(change) {\r\n        if (!change) {\r\n            return this.stakedLQTY;\r\n        }\r\n        if (change.unstakeLQTY !== undefined) {\r\n            return change.unstakeAllLQTY || this.stakedLQTY.lte(change.unstakeLQTY)\r\n                ? Decimal_1.Decimal.ZERO\r\n                : this.stakedLQTY.sub(change.unstakeLQTY);\r\n        }\r\n        else {\r\n            return this.stakedLQTY.add(change.stakeLQTY);\r\n        }\r\n    }\r\n}\r\nexports.LQTYStake = LQTYStake;\r\n//# sourceMappingURL=LQTYStake.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Fees = void 0;\r\nconst assert_1 = __importDefault(require(\"assert\"));\r\nconst Decimal_1 = require(\"./Decimal\");\r\nconst constants_1 = require(\"./constants\");\r\n/**\r\n * Calculator for fees.\r\n *\r\n * @remarks\r\n * Returned by the {@link ReadableLiquity.getFees | getFees()} function.\r\n *\r\n * @public\r\n */\r\nclass Fees {\r\n    /** @internal */\r\n    constructor(baseRateWithoutDecay, minuteDecayFactor, beta, lastFeeOperation, timeOfLatestBlock, recoveryMode) {\r\n        this._baseRateWithoutDecay = Decimal_1.Decimal.from(baseRateWithoutDecay);\r\n        this._minuteDecayFactor = Decimal_1.Decimal.from(minuteDecayFactor);\r\n        this._beta = Decimal_1.Decimal.from(beta);\r\n        this._lastFeeOperation = lastFeeOperation;\r\n        this._timeOfLatestBlock = timeOfLatestBlock;\r\n        this._recoveryMode = recoveryMode;\r\n        assert_1.default(this._minuteDecayFactor.lt(1));\r\n    }\r\n    /** @internal */\r\n    _setRecoveryMode(recoveryMode) {\r\n        return new Fees(this._baseRateWithoutDecay, this._minuteDecayFactor, this._beta, this._lastFeeOperation, this._timeOfLatestBlock, recoveryMode);\r\n    }\r\n    /**\r\n     * Compare to another instance of `Fees`.\r\n     */\r\n    equals(that) {\r\n        return (this._baseRateWithoutDecay.eq(that._baseRateWithoutDecay) &&\r\n            this._minuteDecayFactor.eq(that._minuteDecayFactor) &&\r\n            this._beta.eq(that._beta) &&\r\n            this._lastFeeOperation.getTime() === that._lastFeeOperation.getTime() &&\r\n            this._timeOfLatestBlock.getTime() === that._timeOfLatestBlock.getTime() &&\r\n            this._recoveryMode === that._recoveryMode);\r\n    }\r\n    /** @internal */\r\n    toString() {\r\n        return (`{ baseRateWithoutDecay: ${this._baseRateWithoutDecay}` +\r\n            `, lastFeeOperation: \"${this._lastFeeOperation.toLocaleString()}\"` +\r\n            `, recoveryMode: ${this._recoveryMode} } `);\r\n    }\r\n    /** @internal */\r\n    baseRate(when = this._timeOfLatestBlock) {\r\n        const millisecondsSinceLastFeeOperation = Math.max(when.getTime() - this._lastFeeOperation.getTime(), 0 // Clamp negative elapsed time to 0, in case the client's time is in the past.\r\n        // We will calculate slightly higher than actual fees, which is fine.\r\n        );\r\n        const minutesSinceLastFeeOperation = Math.floor(millisecondsSinceLastFeeOperation / 60000);\r\n        return this._minuteDecayFactor.pow(minutesSinceLastFeeOperation).mul(this._baseRateWithoutDecay);\r\n    }\r\n    /**\r\n     * Calculate the current borrowing rate.\r\n     *\r\n     * @param when - Optional timestamp that can be used to calculate what the borrowing rate would\r\n     *               decay to at a point of time in the future.\r\n     *\r\n     * @remarks\r\n     * By default, the fee is calculated at the time of the latest block. This can be overridden using\r\n     * the `when` parameter.\r\n     *\r\n     * To calculate the borrowing fee in LUSD, multiply the borrowed LUSD amount by the borrowing rate.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const fees = await liquity.getFees();\r\n     *\r\n     * const borrowedLUSDAmount = 100;\r\n     * const borrowingRate = fees.borrowingRate();\r\n     * const borrowingFeeLUSD = borrowingRate.mul(borrowedLUSDAmount);\r\n     * ```\r\n     */\r\n    borrowingRate(when) {\r\n        return this._recoveryMode\r\n            ? Decimal_1.Decimal.ZERO\r\n            : Decimal_1.Decimal.min(constants_1.MINIMUM_BORROWING_RATE.add(this.baseRate(when)), constants_1.MAXIMUM_BORROWING_RATE);\r\n    }\r\n    /**\r\n     * Calculate the current redemption rate.\r\n     *\r\n     * @param redeemedFractionOfSupply - The amount of LUSD being redeemed divided by the total supply.\r\n     * @param when - Optional timestamp that can be used to calculate what the redemption rate would\r\n     *               decay to at a point of time in the future.\r\n     *\r\n     * @remarks\r\n     * By default, the fee is calculated at the time of the latest block. This can be overridden using\r\n     * the `when` parameter.\r\n  \r\n     * Unlike the borrowing rate, the redemption rate depends on the amount being redeemed. To be more\r\n     * precise, it depends on the fraction of the redeemed amount compared to the total LUSD supply,\r\n     * which must be passed as a parameter.\r\n     *\r\n     * To calculate the redemption fee in LUSD, multiply the redeemed LUSD amount with the redemption\r\n     * rate.\r\n     *\r\n     * @example\r\n     * ```typescript\r\n     * const fees = await liquity.getFees();\r\n     * const total = await liquity.getTotal();\r\n     *\r\n     * const redeemedLUSDAmount = Decimal.from(100);\r\n     * const redeemedFractionOfSupply = redeemedLUSDAmount.div(total.debt);\r\n     * const redemptionRate = fees.redemptionRate(redeemedFractionOfSupply);\r\n     * const redemptionFeeLUSD = redemptionRate.mul(redeemedLUSDAmount);\r\n     * ```\r\n     */\r\n    redemptionRate(redeemedFractionOfSupply = Decimal_1.Decimal.ZERO, when) {\r\n        redeemedFractionOfSupply = Decimal_1.Decimal.from(redeemedFractionOfSupply);\r\n        let baseRate = this.baseRate(when);\r\n        if (redeemedFractionOfSupply.nonZero) {\r\n            baseRate = redeemedFractionOfSupply.div(this._beta).add(baseRate);\r\n        }\r\n        return Decimal_1.Decimal.min(constants_1.MINIMUM_REDEMPTION_RATE.add(baseRate), Decimal_1.Decimal.ONE);\r\n    }\r\n}\r\nexports.Fees = Fees;\r\n//# sourceMappingURL=Fees.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TransactionFailedError = void 0;\r\n/**\r\n * Thrown by {@link TransactableLiquity} functions in case of transaction failure.\r\n *\r\n * @public\r\n */\r\nclass TransactionFailedError extends Error {\r\n    /** @internal */\r\n    constructor(name, message, failedReceipt) {\r\n        super(message);\r\n        this.name = name;\r\n        this.failedReceipt = failedReceipt;\r\n    }\r\n}\r\nexports.TransactionFailedError = TransactionFailedError;\r\n//# sourceMappingURL=TransactableLiquity.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports._successfulReceipt = exports._failedReceipt = exports._pendingReceipt = void 0;\r\n/** @internal */\r\nexports._pendingReceipt = { status: \"pending\" };\r\n/** @internal */\r\nconst _failedReceipt = (rawReceipt) => ({\r\n    status: \"failed\",\r\n    rawReceipt\r\n});\r\nexports._failedReceipt = _failedReceipt;\r\n/** @internal */\r\nconst _successfulReceipt = (rawReceipt, details, toString) => ({\r\n    status: \"succeeded\",\r\n    rawReceipt,\r\n    details,\r\n    ...(toString ? { toString } : {})\r\n});\r\nexports._successfulReceipt = _successfulReceipt;\r\n//# sourceMappingURL=SendableLiquity.js.map","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LiquityStore = void 0;\r\nconst assert_1 = __importDefault(require(\"assert\"));\r\nconst strictEquals = (a, b) => a === b;\r\nconst eq = (a, b) => a.eq(b);\r\nconst equals = (a, b) => a.equals(b);\r\nconst frontendStatusEquals = (a, b) => a.status === \"unregistered\"\r\n    ? b.status === \"unregistered\"\r\n    : b.status === \"registered\" && a.kickbackRate.eq(b.kickbackRate);\r\nconst showFrontendStatus = (x) => x.status === \"unregistered\"\r\n    ? '{ status: \"unregistered\" }'\r\n    : `{ status: \"registered\", kickbackRate: ${x.kickbackRate} }`;\r\nconst wrap = (f) => (...args) => f(...args);\r\nconst difference = (a, b) => Object.fromEntries(Object.entries(a).filter(([key, value]) => value !== b[key]));\r\n/**\r\n * Abstract base class of Liquity data store implementations.\r\n *\r\n * @remarks\r\n * The type parameter `T` may be used to type extra state added to {@link LiquityStoreState} by the\r\n * subclass.\r\n *\r\n * Implemented by {@link @liquity/lib-ethers#BlockPolledLiquityStore}.\r\n *\r\n * @public\r\n */\r\nclass LiquityStore {\r\n    constructor() {\r\n        /** Turn console logging on/off. */\r\n        this.logging = false;\r\n        /** @internal */\r\n        this._loaded = false;\r\n        this._listeners = new Set();\r\n    }\r\n    /**\r\n     * The current store state.\r\n     *\r\n     * @remarks\r\n     * Should not be accessed before the store is loaded. Assign a function to\r\n     * {@link LiquityStore.onLoaded | onLoaded} to get a callback when this happens.\r\n     *\r\n     * See {@link LiquityStoreState} for the list of properties returned.\r\n     */\r\n    get state() {\r\n        return Object.assign({}, this._baseState, this._derivedState, this._extraState);\r\n    }\r\n    /**\r\n     * Start monitoring the blockchain for Liquity state changes.\r\n     *\r\n     * @remarks\r\n     * The {@link LiquityStore.onLoaded | onLoaded} callback will be called after the state is fetched\r\n     * for the first time.\r\n     *\r\n     * Use the {@link LiquityStore.subscribe | subscribe()} function to register listeners.\r\n     *\r\n     * @returns Function to stop the monitoring.\r\n     */\r\n    start() {\r\n        const doStop = this._doStart();\r\n        return () => {\r\n            doStop();\r\n            this._cancelUpdateIfScheduled();\r\n        };\r\n    }\r\n    _cancelUpdateIfScheduled() {\r\n        if (this._updateTimeoutId !== undefined) {\r\n            clearTimeout(this._updateTimeoutId);\r\n        }\r\n    }\r\n    _scheduleUpdate() {\r\n        this._cancelUpdateIfScheduled();\r\n        this._updateTimeoutId = setTimeout(() => {\r\n            this._updateTimeoutId = undefined;\r\n            this._update();\r\n        }, 30000);\r\n    }\r\n    _logUpdate(name, next, show) {\r\n        if (this.logging) {\r\n            console.log(`${name} updated to ${show ? show(next) : next}`);\r\n        }\r\n        return next;\r\n    }\r\n    _updateIfChanged(equals, name, prev, next, show) {\r\n        return next !== undefined && !equals(prev, next) ? this._logUpdate(name, next, show) : prev;\r\n    }\r\n    _silentlyUpdateIfChanged(equals, prev, next) {\r\n        return next !== undefined && !equals(prev, next) ? next : prev;\r\n    }\r\n    _updateFees(name, prev, next) {\r\n        if (next && !next.equals(prev)) {\r\n            // Filter out fee update spam that happens on every new block by only logging when string\r\n            // representation changes.\r\n            if (`${next}` !== `${prev}`) {\r\n                this._logUpdate(name, next);\r\n            }\r\n            return next;\r\n        }\r\n        else {\r\n            return prev;\r\n        }\r\n    }\r\n    _reduce(baseState, baseStateUpdate) {\r\n        return {\r\n            frontend: this._updateIfChanged(frontendStatusEquals, \"frontend\", baseState.frontend, baseStateUpdate.frontend, showFrontendStatus),\r\n            ownFrontend: this._updateIfChanged(frontendStatusEquals, \"ownFrontend\", baseState.ownFrontend, baseStateUpdate.ownFrontend, showFrontendStatus),\r\n            numberOfTroves: this._updateIfChanged(strictEquals, \"numberOfTroves\", baseState.numberOfTroves, baseStateUpdate.numberOfTroves),\r\n            accountBalance: this._updateIfChanged(eq, \"accountBalance\", baseState.accountBalance, baseStateUpdate.accountBalance),\r\n            lusdBalance: this._updateIfChanged(eq, \"lusdBalance\", baseState.lusdBalance, baseStateUpdate.lusdBalance),\r\n            lqtyBalance: this._updateIfChanged(eq, \"lqtyBalance\", baseState.lqtyBalance, baseStateUpdate.lqtyBalance),\r\n            uniTokenBalance: this._updateIfChanged(eq, \"uniTokenBalance\", baseState.uniTokenBalance, baseStateUpdate.uniTokenBalance),\r\n            uniTokenAllowance: this._updateIfChanged(eq, \"uniTokenAllowance\", baseState.uniTokenAllowance, baseStateUpdate.uniTokenAllowance),\r\n            remainingLiquidityMiningLQTYReward: this._silentlyUpdateIfChanged(eq, baseState.remainingLiquidityMiningLQTYReward, baseStateUpdate.remainingLiquidityMiningLQTYReward),\r\n            liquidityMiningStake: this._updateIfChanged(eq, \"liquidityMiningStake\", baseState.liquidityMiningStake, baseStateUpdate.liquidityMiningStake),\r\n            totalStakedUniTokens: this._updateIfChanged(eq, \"totalStakedUniTokens\", baseState.totalStakedUniTokens, baseStateUpdate.totalStakedUniTokens),\r\n            liquidityMiningLQTYReward: this._silentlyUpdateIfChanged(eq, baseState.liquidityMiningLQTYReward, baseStateUpdate.liquidityMiningLQTYReward),\r\n            collateralSurplusBalance: this._updateIfChanged(eq, \"collateralSurplusBalance\", baseState.collateralSurplusBalance, baseStateUpdate.collateralSurplusBalance),\r\n            price: this._updateIfChanged(eq, \"price\", baseState.price, baseStateUpdate.price),\r\n            lusdInStabilityPool: this._updateIfChanged(eq, \"lusdInStabilityPool\", baseState.lusdInStabilityPool, baseStateUpdate.lusdInStabilityPool),\r\n            total: this._updateIfChanged(equals, \"total\", baseState.total, baseStateUpdate.total),\r\n            totalRedistributed: this._updateIfChanged(equals, \"totalRedistributed\", baseState.totalRedistributed, baseStateUpdate.totalRedistributed),\r\n            troveBeforeRedistribution: this._updateIfChanged(equals, \"troveBeforeRedistribution\", baseState.troveBeforeRedistribution, baseStateUpdate.troveBeforeRedistribution),\r\n            stabilityDeposit: this._updateIfChanged(equals, \"stabilityDeposit\", baseState.stabilityDeposit, baseStateUpdate.stabilityDeposit),\r\n            remainingStabilityPoolLQTYReward: this._silentlyUpdateIfChanged(eq, baseState.remainingStabilityPoolLQTYReward, baseStateUpdate.remainingStabilityPoolLQTYReward),\r\n            _feesInNormalMode: this._silentlyUpdateIfChanged(equals, baseState._feesInNormalMode, baseStateUpdate._feesInNormalMode),\r\n            lqtyStake: this._updateIfChanged(equals, \"lqtyStake\", baseState.lqtyStake, baseStateUpdate.lqtyStake),\r\n            totalStakedLQTY: this._updateIfChanged(eq, \"totalStakedLQTY\", baseState.totalStakedLQTY, baseStateUpdate.totalStakedLQTY),\r\n            _riskiestTroveBeforeRedistribution: this._silentlyUpdateIfChanged(equals, baseState._riskiestTroveBeforeRedistribution, baseStateUpdate._riskiestTroveBeforeRedistribution)\r\n        };\r\n    }\r\n    _derive({ troveBeforeRedistribution, totalRedistributed, _feesInNormalMode, total, price, _riskiestTroveBeforeRedistribution }) {\r\n        const fees = _feesInNormalMode._setRecoveryMode(total.collateralRatioIsBelowCritical(price));\r\n        return {\r\n            trove: troveBeforeRedistribution.applyRedistribution(totalRedistributed),\r\n            fees,\r\n            borrowingRate: fees.borrowingRate(),\r\n            redemptionRate: fees.redemptionRate(),\r\n            haveUndercollateralizedTroves: _riskiestTroveBeforeRedistribution\r\n                .applyRedistribution(totalRedistributed)\r\n                .collateralRatioIsBelowMinimum(price)\r\n        };\r\n    }\r\n    _reduceDerived(derivedState, derivedStateUpdate) {\r\n        return {\r\n            fees: this._updateFees(\"fees\", derivedState.fees, derivedStateUpdate.fees),\r\n            trove: this._updateIfChanged(equals, \"trove\", derivedState.trove, derivedStateUpdate.trove),\r\n            borrowingRate: this._silentlyUpdateIfChanged(eq, derivedState.borrowingRate, derivedStateUpdate.borrowingRate),\r\n            redemptionRate: this._silentlyUpdateIfChanged(eq, derivedState.redemptionRate, derivedStateUpdate.redemptionRate),\r\n            haveUndercollateralizedTroves: this._updateIfChanged(strictEquals, \"haveUndercollateralizedTroves\", derivedState.haveUndercollateralizedTroves, derivedStateUpdate.haveUndercollateralizedTroves)\r\n        };\r\n    }\r\n    _notify(params) {\r\n        // Iterate on a copy of `_listeners`, to avoid notifying any new listeners subscribed by\r\n        // existing listeners, as that could result in infinite loops.\r\n        //\r\n        // Before calling a listener from our copy of `_listeners`, check if it has been removed from\r\n        // the original set. This way we avoid calling listeners that have already been unsubscribed\r\n        // by an earlier listener callback.\r\n        [...this._listeners].forEach(listener => {\r\n            if (this._listeners.has(listener)) {\r\n                listener(params);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Register a state change listener.\r\n     *\r\n     * @param listener - Function that will be called whenever state changes.\r\n     * @returns Function to unregister this listener.\r\n     */\r\n    subscribe(listener) {\r\n        const uniqueListener = wrap(listener);\r\n        this._listeners.add(uniqueListener);\r\n        return () => {\r\n            this._listeners.delete(uniqueListener);\r\n        };\r\n    }\r\n    /** @internal */\r\n    _load(baseState, extraState) {\r\n        assert_1.default(!this._loaded);\r\n        this._baseState = baseState;\r\n        this._derivedState = this._derive(baseState);\r\n        this._extraState = extraState;\r\n        this._loaded = true;\r\n        this._scheduleUpdate();\r\n        if (this.onLoaded) {\r\n            this.onLoaded();\r\n        }\r\n    }\r\n    /** @internal */\r\n    _update(baseStateUpdate, extraStateUpdate) {\r\n        assert_1.default(this._baseState && this._derivedState);\r\n        const oldState = this.state;\r\n        if (baseStateUpdate) {\r\n            this._baseState = this._reduce(this._baseState, baseStateUpdate);\r\n        }\r\n        // Always running this lets us derive state based on passage of time, like baseRate decay\r\n        this._derivedState = this._reduceDerived(this._derivedState, this._derive(this._baseState));\r\n        if (extraStateUpdate) {\r\n            assert_1.default(this._extraState);\r\n            this._extraState = this._reduceExtra(this._extraState, extraStateUpdate);\r\n        }\r\n        this._scheduleUpdate();\r\n        this._notify({\r\n            newState: this.state,\r\n            oldState,\r\n            stateChange: difference(this.state, oldState)\r\n        });\r\n    }\r\n}\r\nexports.LiquityStore = LiquityStore;\r\n//# sourceMappingURL=LiquityStore.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports._CachedReadableLiquity = void 0;\r\n/** @internal */\r\nclass _CachedReadableLiquity {\r\n    constructor(readable, cache) {\r\n        this._readable = readable;\r\n        this._cache = cache;\r\n    }\r\n    async getTotalRedistributed(...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getTotalRedistributed(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getTotalRedistributed(...extraParams));\r\n    }\r\n    async getTroveBeforeRedistribution(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getTroveBeforeRedistribution(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getTroveBeforeRedistribution(address, ...extraParams));\r\n    }\r\n    async getTrove(address, ...extraParams) {\r\n        const [troveBeforeRedistribution, totalRedistributed] = await Promise.all([\r\n            this.getTroveBeforeRedistribution(address, ...extraParams),\r\n            this.getTotalRedistributed(...extraParams)\r\n        ]);\r\n        return troveBeforeRedistribution.applyRedistribution(totalRedistributed);\r\n    }\r\n    async getNumberOfTroves(...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getNumberOfTroves(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getNumberOfTroves(...extraParams));\r\n    }\r\n    async getPrice(...extraParams) {\r\n        var _a;\r\n        return (_a = this._cache.getPrice(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getPrice(...extraParams);\r\n    }\r\n    async getTotal(...extraParams) {\r\n        var _a;\r\n        return (_a = this._cache.getTotal(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getTotal(...extraParams);\r\n    }\r\n    async getStabilityDeposit(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getStabilityDeposit(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getStabilityDeposit(address, ...extraParams));\r\n    }\r\n    async getRemainingStabilityPoolLQTYReward(...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getRemainingStabilityPoolLQTYReward(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getRemainingStabilityPoolLQTYReward(...extraParams));\r\n    }\r\n    async getLUSDInStabilityPool(...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getLUSDInStabilityPool(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getLUSDInStabilityPool(...extraParams));\r\n    }\r\n    async getLUSDBalance(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getLUSDBalance(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getLUSDBalance(address, ...extraParams));\r\n    }\r\n    async getLQTYBalance(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getLQTYBalance(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getLQTYBalance(address, ...extraParams));\r\n    }\r\n    async getUniTokenBalance(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getUniTokenBalance(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getUniTokenBalance(address, ...extraParams));\r\n    }\r\n    async getUniTokenAllowance(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getUniTokenAllowance(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getUniTokenAllowance(address, ...extraParams));\r\n    }\r\n    async getRemainingLiquidityMiningLQTYReward(...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getRemainingLiquidityMiningLQTYReward(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getRemainingLiquidityMiningLQTYReward(...extraParams));\r\n    }\r\n    async getLiquidityMiningStake(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getLiquidityMiningStake(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getLiquidityMiningStake(address, ...extraParams));\r\n    }\r\n    async getTotalStakedUniTokens(...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getTotalStakedUniTokens(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getTotalStakedUniTokens(...extraParams));\r\n    }\r\n    async getLiquidityMiningLQTYReward(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getLiquidityMiningLQTYReward(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getLiquidityMiningLQTYReward(address, ...extraParams));\r\n    }\r\n    async getCollateralSurplusBalance(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getCollateralSurplusBalance(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getCollateralSurplusBalance(address, ...extraParams));\r\n    }\r\n    async getTroves(params, ...extraParams) {\r\n        var _a;\r\n        const { beforeRedistribution, ...restOfParams } = params;\r\n        const [totalRedistributed, troves] = await Promise.all([\r\n            beforeRedistribution ? undefined : this.getTotalRedistributed(...extraParams),\r\n            (_a = this._cache.getTroves({ beforeRedistribution: true, ...restOfParams }, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getTroves({ beforeRedistribution: true, ...restOfParams }, ...extraParams)\r\n        ]);\r\n        if (totalRedistributed) {\r\n            return troves.map(trove => trove.applyRedistribution(totalRedistributed));\r\n        }\r\n        else {\r\n            return troves;\r\n        }\r\n    }\r\n    async getFees(...extraParams) {\r\n        var _a;\r\n        return (_a = this._cache.getFees(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getFees(...extraParams);\r\n    }\r\n    async getLQTYStake(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getLQTYStake(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getLQTYStake(address, ...extraParams));\r\n    }\r\n    async getTotalStakedLQTY(...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getTotalStakedLQTY(...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getTotalStakedLQTY(...extraParams));\r\n    }\r\n    async getFrontendStatus(address, ...extraParams) {\r\n        var _a;\r\n        return ((_a = this._cache.getFrontendStatus(address, ...extraParams)) !== null && _a !== void 0 ? _a : this._readable.getFrontendStatus(address, ...extraParams));\r\n    }\r\n}\r\nexports._CachedReadableLiquity = _CachedReadableLiquity;\r\n//# sourceMappingURL=_CachedReadableLiquity.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports._connectToMulticall = void 0;\r\nconst contracts_1 = require(\"@ethersproject/contracts\");\r\nconst multicallAbi = [\r\n    {\r\n        constant: true,\r\n        inputs: [],\r\n        name: \"getCurrentBlockTimestamp\",\r\n        outputs: [\r\n            {\r\n                name: \"timestamp\",\r\n                type: \"uint256\"\r\n            }\r\n        ],\r\n        payable: false,\r\n        stateMutability: \"view\",\r\n        type: \"function\"\r\n    }\r\n];\r\nconst multicallAddress = {\r\n    1: \"0xeefba1e63905ef1d7acba5a8513c70307c1ce441\",\r\n    3: \"0x53c43764255c17bd724f74c4ef150724ac50a3ed\",\r\n    4: \"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821\",\r\n    5: \"0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e\",\r\n    42: \"0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a\"\r\n};\r\nconst hasMulticall = (chainId) => chainId in multicallAddress;\r\nconst _connectToMulticall = (signerOrProvider, chainId) => hasMulticall(chainId)\r\n    ? new contracts_1.Contract(multicallAddress[chainId], multicallAbi, signerOrProvider)\r\n    : undefined;\r\nexports._connectToMulticall = _connectToMulticall;\r\n//# sourceMappingURL=_Multicall.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ObservableEthersLiquity = void 0;\r\nconst EthersLiquityConnection_1 = require(\"./EthersLiquityConnection\");\r\nconst debouncingDelayMs = 50;\r\nconst debounce = (listener) => {\r\n    let timeoutId = undefined;\r\n    let latestBlock = 0;\r\n    return (...args) => {\r\n        const event = args[args.length - 1];\r\n        if (event.blockNumber !== undefined && event.blockNumber > latestBlock) {\r\n            latestBlock = event.blockNumber;\r\n        }\r\n        if (timeoutId !== undefined) {\r\n            clearTimeout(timeoutId);\r\n        }\r\n        timeoutId = setTimeout(() => {\r\n            listener(latestBlock);\r\n            timeoutId = undefined;\r\n        }, debouncingDelayMs);\r\n    };\r\n};\r\n/** @alpha */\r\nclass ObservableEthersLiquity {\r\n    constructor(readable) {\r\n        this._readable = readable;\r\n    }\r\n    watchTotalRedistributed(onTotalRedistributedChanged) {\r\n        const { activePool, defaultPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const etherSent = activePool.filters.EtherSent();\r\n        const redistributionListener = debounce((blockTag) => {\r\n            this._readable.getTotalRedistributed({ blockTag }).then(onTotalRedistributedChanged);\r\n        });\r\n        const etherSentListener = (toAddress, _amount, event) => {\r\n            if (toAddress === defaultPool.address) {\r\n                redistributionListener(event);\r\n            }\r\n        };\r\n        activePool.on(etherSent, etherSentListener);\r\n        return () => {\r\n            activePool.removeListener(etherSent, etherSentListener);\r\n        };\r\n    }\r\n    watchTroveWithoutRewards(onTroveChanged, address) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this._readable.connection));\r\n        const { troveManager, borrowerOperations } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const troveUpdatedByTroveManager = troveManager.filters.TroveUpdated(address);\r\n        const troveUpdatedByBorrowerOperations = borrowerOperations.filters.TroveUpdated(address);\r\n        const troveListener = debounce((blockTag) => {\r\n            this._readable.getTroveBeforeRedistribution(address, { blockTag }).then(onTroveChanged);\r\n        });\r\n        troveManager.on(troveUpdatedByTroveManager, troveListener);\r\n        borrowerOperations.on(troveUpdatedByBorrowerOperations, troveListener);\r\n        return () => {\r\n            troveManager.removeListener(troveUpdatedByTroveManager, troveListener);\r\n            borrowerOperations.removeListener(troveUpdatedByBorrowerOperations, troveListener);\r\n        };\r\n    }\r\n    watchNumberOfTroves(onNumberOfTrovesChanged) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const { TroveUpdated } = troveManager.filters;\r\n        const troveUpdated = TroveUpdated();\r\n        const troveUpdatedListener = debounce((blockTag) => {\r\n            this._readable.getNumberOfTroves({ blockTag }).then(onNumberOfTrovesChanged);\r\n        });\r\n        troveManager.on(troveUpdated, troveUpdatedListener);\r\n        return () => {\r\n            troveManager.removeListener(troveUpdated, troveUpdatedListener);\r\n        };\r\n    }\r\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n    watchPrice(onPriceChanged) {\r\n        // TODO revisit\r\n        // We no longer have our own PriceUpdated events. If we want to implement this in an event-based\r\n        // manner, we'll need to listen to aggregator events directly. Or we could do polling.\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    watchTotal(onTotalChanged) {\r\n        const { troveManager } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const { TroveUpdated } = troveManager.filters;\r\n        const troveUpdated = TroveUpdated();\r\n        const totalListener = debounce((blockTag) => {\r\n            this._readable.getTotal({ blockTag }).then(onTotalChanged);\r\n        });\r\n        troveManager.on(troveUpdated, totalListener);\r\n        return () => {\r\n            troveManager.removeListener(troveUpdated, totalListener);\r\n        };\r\n    }\r\n    watchStabilityDeposit(onStabilityDepositChanged, address) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this._readable.connection));\r\n        const { activePool, stabilityPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const { UserDepositChanged } = stabilityPool.filters;\r\n        const { EtherSent } = activePool.filters;\r\n        const userDepositChanged = UserDepositChanged(address);\r\n        const etherSent = EtherSent();\r\n        const depositListener = debounce((blockTag) => {\r\n            this._readable.getStabilityDeposit(address, { blockTag }).then(onStabilityDepositChanged);\r\n        });\r\n        const etherSentListener = (toAddress, _amount, event) => {\r\n            if (toAddress === stabilityPool.address) {\r\n                // Liquidation while Stability Pool has some deposits\r\n                // There may be new gains\r\n                depositListener(event);\r\n            }\r\n        };\r\n        stabilityPool.on(userDepositChanged, depositListener);\r\n        activePool.on(etherSent, etherSentListener);\r\n        return () => {\r\n            stabilityPool.removeListener(userDepositChanged, depositListener);\r\n            activePool.removeListener(etherSent, etherSentListener);\r\n        };\r\n    }\r\n    watchLUSDInStabilityPool(onLUSDInStabilityPoolChanged) {\r\n        const { lusdToken, stabilityPool } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const { Transfer } = lusdToken.filters;\r\n        const transferLUSDFromStabilityPool = Transfer(stabilityPool.address);\r\n        const transferLUSDToStabilityPool = Transfer(null, stabilityPool.address);\r\n        const stabilityPoolLUSDFilters = [transferLUSDFromStabilityPool, transferLUSDToStabilityPool];\r\n        const stabilityPoolLUSDListener = debounce((blockTag) => {\r\n            this._readable.getLUSDInStabilityPool({ blockTag }).then(onLUSDInStabilityPoolChanged);\r\n        });\r\n        stabilityPoolLUSDFilters.forEach(filter => lusdToken.on(filter, stabilityPoolLUSDListener));\r\n        return () => stabilityPoolLUSDFilters.forEach(filter => lusdToken.removeListener(filter, stabilityPoolLUSDListener));\r\n    }\r\n    watchLUSDBalance(onLUSDBalanceChanged, address) {\r\n        address !== null && address !== void 0 ? address : (address = EthersLiquityConnection_1._requireAddress(this._readable.connection));\r\n        const { lusdToken } = EthersLiquityConnection_1._getContracts(this._readable.connection);\r\n        const { Transfer } = lusdToken.filters;\r\n        const transferLUSDFromUser = Transfer(address);\r\n        const transferLUSDToUser = Transfer(null, address);\r\n        const lusdTransferFilters = [transferLUSDFromUser, transferLUSDToUser];\r\n        const lusdTransferListener = debounce((blockTag) => {\r\n            this._readable.getLUSDBalance(address, { blockTag }).then(onLUSDBalanceChanged);\r\n        });\r\n        lusdTransferFilters.forEach(filter => lusdToken.on(filter, lusdTransferListener));\r\n        return () => lusdTransferFilters.forEach(filter => lusdToken.removeListener(filter, lusdTransferListener));\r\n    }\r\n}\r\nexports.ObservableEthersLiquity = ObservableEthersLiquity;\r\n//# sourceMappingURL=ObservableEthersLiquity.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.logsToString = void 0;\r\nconst bignumber_1 = require(\"@ethersproject/bignumber\");\r\nconst constants_1 = require(\"@ethersproject/constants\");\r\nconst lib_base_1 = require(\"@liquity/lib-base\");\r\nconst interfaceLookupFrom = (contractLookup) => {\r\n    return Object.fromEntries(Object.entries(contractLookup).map(([, contract]) => [contract.address, contract.interface]));\r\n};\r\nconst nameLookupFrom = (contractLookup) => {\r\n    return Object.fromEntries(Object.entries(contractLookup).map(([name, contract]) => [contract.address, name]));\r\n};\r\nconst tryToParseLog = (log, interfaceLookup) => {\r\n    const { address } = log;\r\n    if (address in interfaceLookup) {\r\n        try {\r\n            return { address, logDescription: interfaceLookup[address].parseLog(log) };\r\n        }\r\n        catch (err) {\r\n            console.warn(\"Failed to parse log:\");\r\n            console.warn(log);\r\n            console.warn(\"Caught:\");\r\n            console.warn(err);\r\n        }\r\n    }\r\n};\r\nconst parseLogs = (logs, interfaceLookup) => {\r\n    const parsedLogs = [];\r\n    const unparsedLogs = [];\r\n    logs.forEach(log => {\r\n        const parsedLog = tryToParseLog(log, interfaceLookup);\r\n        if (parsedLog) {\r\n            parsedLogs.push(parsedLog);\r\n        }\r\n        else {\r\n            unparsedLogs.push(log);\r\n        }\r\n    });\r\n    return [parsedLogs, unparsedLogs];\r\n};\r\nconst VERY_BIG = bignumber_1.BigNumber.from(10).pow(9);\r\nconst prettify = (arg, nameLookup) => {\r\n    if (bignumber_1.BigNumber.isBigNumber(arg)) {\r\n        if (arg.gte(VERY_BIG)) {\r\n            return `${lib_base_1.Decimal.fromBigNumberString(arg.toHexString())}e18`;\r\n        }\r\n        else {\r\n            return arg.toString();\r\n        }\r\n    }\r\n    else if (typeof arg === \"string\") {\r\n        return arg === constants_1.AddressZero\r\n            ? \"address(0)\"\r\n            : nameLookup && arg in nameLookup\r\n                ? nameLookup[arg]\r\n                : arg;\r\n    }\r\n    else {\r\n        return String(arg);\r\n    }\r\n};\r\nconst logDescriptionToString = (logDescription, nameLookup) => {\r\n    const prettyEntries = Object.entries(logDescription.args)\r\n        .filter(([key]) => !key.match(/^[0-9]/))\r\n        .map(([key, value]) => `${key}: ${prettify(value, nameLookup)}`);\r\n    return `${logDescription.name}({ ${prettyEntries.join(\", \")} })`;\r\n};\r\nconst logsToString = (receipt, contracts) => {\r\n    const contractLookup = contracts;\r\n    const interfaceLookup = interfaceLookupFrom(contractLookup);\r\n    const contractNameLookup = nameLookupFrom(contractLookup);\r\n    const nameLookup = {\r\n        [receipt.from]: \"user\",\r\n        ...contractNameLookup\r\n    };\r\n    const [parsedLogs, unparsedLogs] = parseLogs(receipt.logs, interfaceLookup);\r\n    if (unparsedLogs.length > 0) {\r\n        console.warn(\"Warning: not all logs were parsed. Unparsed logs:\");\r\n        console.warn(unparsedLogs);\r\n    }\r\n    if (parsedLogs.length > 0) {\r\n        return (`Logs of tx ${receipt.transactionHash}:\\n` +\r\n            parsedLogs\r\n                .map(({ address, logDescription }) => `  ${contractNameLookup[address]}.${logDescriptionToString(logDescription, nameLookup)}`)\r\n                .join(\"\\n\"));\r\n    }\r\n    else {\r\n        return `No logs were parsed in tx ${receipt.transactionHash}`;\r\n    }\r\n};\r\nexports.logsToString = logsToString;\r\n//# sourceMappingURL=parseLogs.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.EthersLiquity = exports.EthersTransactionFailedError = void 0;\r\nconst lib_base_1 = require(\"@liquity/lib-base\");\r\nconst EthersLiquityConnection_1 = require(\"./EthersLiquityConnection\");\r\nconst PopulatableEthersLiquity_1 = require(\"./PopulatableEthersLiquity\");\r\nconst ReadableEthersLiquity_1 = require(\"./ReadableEthersLiquity\");\r\nconst SendableEthersLiquity_1 = require(\"./SendableEthersLiquity\");\r\n/**\r\n * Thrown by {@link EthersLiquity} in case of transaction failure.\r\n *\r\n * @public\r\n */\r\nclass EthersTransactionFailedError extends lib_base_1.TransactionFailedError {\r\n    constructor(message, failedReceipt) {\r\n        super(\"EthersTransactionFailedError\", message, failedReceipt);\r\n    }\r\n}\r\nexports.EthersTransactionFailedError = EthersTransactionFailedError;\r\nconst waitForSuccess = async (tx) => {\r\n    const receipt = await tx.waitForReceipt();\r\n    if (receipt.status !== \"succeeded\") {\r\n        throw new EthersTransactionFailedError(\"Transaction failed\", receipt);\r\n    }\r\n    return receipt.details;\r\n};\r\n/**\r\n * Convenience class that combines multiple interfaces of the library in one object.\r\n *\r\n * @public\r\n */\r\nclass EthersLiquity {\r\n    /** @internal */\r\n    constructor(readable) {\r\n        this._readable = readable;\r\n        this.connection = readable.connection;\r\n        this.populate = new PopulatableEthersLiquity_1.PopulatableEthersLiquity(readable);\r\n        this.send = new SendableEthersLiquity_1.SendableEthersLiquity(this.populate);\r\n    }\r\n    /** @internal */\r\n    static _from(connection) {\r\n        if (EthersLiquityConnection_1._usingStore(connection)) {\r\n            return new _EthersLiquityWithStore(ReadableEthersLiquity_1.ReadableEthersLiquity._from(connection));\r\n        }\r\n        else {\r\n            return new EthersLiquity(ReadableEthersLiquity_1.ReadableEthersLiquity._from(connection));\r\n        }\r\n    }\r\n    static async connect(signerOrProvider, optionalParams) {\r\n        return EthersLiquity._from(await EthersLiquityConnection_1._connect(signerOrProvider, optionalParams));\r\n    }\r\n    hasStore() {\r\n        return false;\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalRedistributed} */\r\n    getTotalRedistributed(overrides) {\r\n        return this._readable.getTotalRedistributed(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTroveBeforeRedistribution} */\r\n    getTroveBeforeRedistribution(address, overrides) {\r\n        return this._readable.getTroveBeforeRedistribution(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTrove} */\r\n    getTrove(address, overrides) {\r\n        return this._readable.getTrove(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getNumberOfTroves} */\r\n    getNumberOfTroves(overrides) {\r\n        return this._readable.getNumberOfTroves(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getPrice} */\r\n    getPrice(overrides) {\r\n        return this._readable.getPrice(overrides);\r\n    }\r\n    /** @internal */\r\n    _getActivePool(overrides) {\r\n        return this._readable._getActivePool(overrides);\r\n    }\r\n    /** @internal */\r\n    _getDefaultPool(overrides) {\r\n        return this._readable._getDefaultPool(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotal} */\r\n    getTotal(overrides) {\r\n        return this._readable.getTotal(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getStabilityDeposit} */\r\n    getStabilityDeposit(address, overrides) {\r\n        return this._readable.getStabilityDeposit(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getRemainingStabilityPoolLQTYReward} */\r\n    getRemainingStabilityPoolLQTYReward(overrides) {\r\n        return this._readable.getRemainingStabilityPoolLQTYReward(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDInStabilityPool} */\r\n    getLUSDInStabilityPool(overrides) {\r\n        return this._readable.getLUSDInStabilityPool(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDBalance} */\r\n    getLUSDBalance(address, overrides) {\r\n        return this._readable.getLUSDBalance(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYBalance} */\r\n    getLQTYBalance(address, overrides) {\r\n        return this._readable.getLQTYBalance(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getUniTokenBalance} */\r\n    getUniTokenBalance(address, overrides) {\r\n        return this._readable.getUniTokenBalance(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getUniTokenAllowance} */\r\n    getUniTokenAllowance(address, overrides) {\r\n        return this._readable.getUniTokenAllowance(address, overrides);\r\n    }\r\n    /** @internal */\r\n    _getRemainingLiquidityMiningLQTYRewardCalculator(overrides) {\r\n        return this._readable._getRemainingLiquidityMiningLQTYRewardCalculator(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getRemainingLiquidityMiningLQTYReward} */\r\n    getRemainingLiquidityMiningLQTYReward(overrides) {\r\n        return this._readable.getRemainingLiquidityMiningLQTYReward(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLiquidityMiningStake} */\r\n    getLiquidityMiningStake(address, overrides) {\r\n        return this._readable.getLiquidityMiningStake(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedUniTokens} */\r\n    getTotalStakedUniTokens(overrides) {\r\n        return this._readable.getTotalStakedUniTokens(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLiquidityMiningLQTYReward} */\r\n    getLiquidityMiningLQTYReward(address, overrides) {\r\n        return this._readable.getLiquidityMiningLQTYReward(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getCollateralSurplusBalance} */\r\n    getCollateralSurplusBalance(address, overrides) {\r\n        return this._readable.getCollateralSurplusBalance(address, overrides);\r\n    }\r\n    getTroves(params, overrides) {\r\n        return this._readable.getTroves(params, overrides);\r\n    }\r\n    /** @internal */\r\n    _getBlockTimestamp(blockTag) {\r\n        return this._readable._getBlockTimestamp(blockTag);\r\n    }\r\n    /** @internal */\r\n    _getFeesFactory(overrides) {\r\n        return this._readable._getFeesFactory(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getFees} */\r\n    getFees(overrides) {\r\n        return this._readable.getFees(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYStake} */\r\n    getLQTYStake(address, overrides) {\r\n        return this._readable.getLQTYStake(address, overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedLQTY} */\r\n    getTotalStakedLQTY(overrides) {\r\n        return this._readable.getTotalStakedLQTY(overrides);\r\n    }\r\n    /** {@inheritDoc @liquity/lib-base#ReadableLiquity.getFrontendStatus} */\r\n    getFrontendStatus(address, overrides) {\r\n        return this._readable.getFrontendStatus(address, overrides);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.openTrove}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    openTrove(params, maxBorrowingRateOrOptionalParams, overrides) {\r\n        return this.send\r\n            .openTrove(params, maxBorrowingRateOrOptionalParams, overrides)\r\n            .then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.closeTrove}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    closeTrove(overrides) {\r\n        return this.send.closeTrove(overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.adjustTrove}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    adjustTrove(params, maxBorrowingRateOrOptionalParams, overrides) {\r\n        return this.send\r\n            .adjustTrove(params, maxBorrowingRateOrOptionalParams, overrides)\r\n            .then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.depositCollateral}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    depositCollateral(amount, overrides) {\r\n        return this.send.depositCollateral(amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawCollateral}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    withdrawCollateral(amount, overrides) {\r\n        return this.send.withdrawCollateral(amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.borrowLUSD}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    borrowLUSD(amount, maxBorrowingRate, overrides) {\r\n        return this.send.borrowLUSD(amount, maxBorrowingRate, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.repayLUSD}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    repayLUSD(amount, overrides) {\r\n        return this.send.repayLUSD(amount, overrides).then(waitForSuccess);\r\n    }\r\n    /** @internal */\r\n    setPrice(price, overrides) {\r\n        return this.send.setPrice(price, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.liquidate}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    liquidate(address, overrides) {\r\n        return this.send.liquidate(address, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.liquidateUpTo}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides) {\r\n        return this.send.liquidateUpTo(maximumNumberOfTrovesToLiquidate, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.depositLUSDInStabilityPool}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    depositLUSDInStabilityPool(amount, frontendTag, overrides) {\r\n        return this.send.depositLUSDInStabilityPool(amount, frontendTag, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawLUSDFromStabilityPool}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    withdrawLUSDFromStabilityPool(amount, overrides) {\r\n        return this.send.withdrawLUSDFromStabilityPool(amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawGainsFromStabilityPool}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    withdrawGainsFromStabilityPool(overrides) {\r\n        return this.send.withdrawGainsFromStabilityPool(overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.transferCollateralGainToTrove}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    transferCollateralGainToTrove(overrides) {\r\n        return this.send.transferCollateralGainToTrove(overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.sendLUSD}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    sendLUSD(toAddress, amount, overrides) {\r\n        return this.send.sendLUSD(toAddress, amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.sendLQTY}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    sendLQTY(toAddress, amount, overrides) {\r\n        return this.send.sendLQTY(toAddress, amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.redeemLUSD}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    redeemLUSD(amount, maxRedemptionRate, overrides) {\r\n        return this.send.redeemLUSD(amount, maxRedemptionRate, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.claimCollateralSurplus}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    claimCollateralSurplus(overrides) {\r\n        return this.send.claimCollateralSurplus(overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.stakeLQTY}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    stakeLQTY(amount, overrides) {\r\n        return this.send.stakeLQTY(amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.unstakeLQTY}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    unstakeLQTY(amount, overrides) {\r\n        return this.send.unstakeLQTY(amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawGainsFromStaking}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    withdrawGainsFromStaking(overrides) {\r\n        return this.send.withdrawGainsFromStaking(overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.registerFrontend}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    registerFrontend(kickbackRate, overrides) {\r\n        return this.send.registerFrontend(kickbackRate, overrides).then(waitForSuccess);\r\n    }\r\n    /** @internal */\r\n    _mintUniToken(amount, address, overrides) {\r\n        return this.send._mintUniToken(amount, address, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.approveUniTokens}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    approveUniTokens(allowance, overrides) {\r\n        return this.send.approveUniTokens(allowance, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.stakeUniTokens}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    stakeUniTokens(amount, overrides) {\r\n        return this.send.stakeUniTokens(amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.unstakeUniTokens}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    unstakeUniTokens(amount, overrides) {\r\n        return this.send.unstakeUniTokens(amount, overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawLQTYRewardFromLiquidityMining}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    withdrawLQTYRewardFromLiquidityMining(overrides) {\r\n        return this.send.withdrawLQTYRewardFromLiquidityMining(overrides).then(waitForSuccess);\r\n    }\r\n    /**\r\n     * {@inheritDoc @liquity/lib-base#TransactableLiquity.exitLiquidityMining}\r\n     *\r\n     * @throws\r\n     * Throws {@link EthersTransactionFailedError} in case of transaction failure.\r\n     * Throws {@link EthersTransactionCancelledError} if the transaction is cancelled or replaced.\r\n     */\r\n    exitLiquidityMining(overrides) {\r\n        return this.send.exitLiquidityMining(overrides).then(waitForSuccess);\r\n    }\r\n}\r\nexports.EthersLiquity = EthersLiquity;\r\nclass _EthersLiquityWithStore extends EthersLiquity {\r\n    constructor(readable) {\r\n        super(readable);\r\n        this.store = readable.store;\r\n    }\r\n    hasStore(store) {\r\n        return store === undefined || store === this.connection.useStore;\r\n    }\r\n}\r\n//# sourceMappingURL=EthersLiquity.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useLiquityReducer = void 0;\r\nconst react_1 = require(\"react\");\r\nconst equals_1 = require(\"../utils/equals\");\r\nconst useLiquityStore_1 = require(\"./useLiquityStore\");\r\nconst useLiquityReducer = (reduce, init) => {\r\n    const store = useLiquityStore_1.useLiquityStore();\r\n    const oldStore = react_1.useRef(store);\r\n    const state = react_1.useRef(init(store.state));\r\n    const [, rerender] = react_1.useReducer(() => ({}), {});\r\n    const dispatch = react_1.useCallback((action) => {\r\n        const newState = reduce(state.current, action);\r\n        if (!equals_1.equals(newState, state.current)) {\r\n            state.current = newState;\r\n            rerender();\r\n        }\r\n    }, [reduce]);\r\n    react_1.useEffect(() => store.subscribe(params => dispatch({ type: \"updateStore\", ...params })), [\r\n        store,\r\n        dispatch\r\n    ]);\r\n    if (oldStore.current !== store) {\r\n        state.current = init(store.state);\r\n        oldStore.current = store;\r\n    }\r\n    return [state.current, dispatch];\r\n};\r\nexports.useLiquityReducer = useLiquityReducer;\r\n//# sourceMappingURL=useLiquityReducer.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.useLiquitySelector = void 0;\r\nconst react_1 = require(\"react\");\r\nconst equals_1 = require(\"../utils/equals\");\r\nconst useLiquityStore_1 = require(\"./useLiquityStore\");\r\nconst useLiquitySelector = (select) => {\r\n    const store = useLiquityStore_1.useLiquityStore();\r\n    const [, rerender] = react_1.useReducer(() => ({}), {});\r\n    react_1.useEffect(() => store.subscribe(({ newState, oldState }) => {\r\n        if (!equals_1.equals(select(newState), select(oldState))) {\r\n            rerender();\r\n        }\r\n    }), [store, select]);\r\n    return select(store.state);\r\n};\r\nexports.useLiquitySelector = useLiquitySelector;\r\n//# sourceMappingURL=useLiquitySelector.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ERC20Faucet__factory = exports.ChickenBondManager__factory = exports.BondNFT__factory = exports.BLUSDToken__factory = void 0;\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nvar BLUSDToken__factory_1 = require(\"./BLUSDToken__factory\");\nObject.defineProperty(exports, \"BLUSDToken__factory\", { enumerable: true, get: function () { return BLUSDToken__factory_1.BLUSDToken__factory; } });\nvar BondNFT__factory_1 = require(\"./BondNFT__factory\");\nObject.defineProperty(exports, \"BondNFT__factory\", { enumerable: true, get: function () { return BondNFT__factory_1.BondNFT__factory; } });\nvar ChickenBondManager__factory_1 = require(\"./ChickenBondManager__factory\");\nObject.defineProperty(exports, \"ChickenBondManager__factory\", { enumerable: true, get: function () { return ChickenBondManager__factory_1.ChickenBondManager__factory; } });\nvar ERC20Faucet__factory_1 = require(\"./ERC20Faucet__factory\");\nObject.defineProperty(exports, \"ERC20Faucet__factory\", { enumerable: true, get: function () { return ERC20Faucet__factory_1.ERC20Faucet__factory; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LUSD_OVERRIDE_ADDRESS = exports.BLUSD_AMM_STAKING_ADDRESS = exports.BLUSD_AMM_ADDRESS = exports.BLUSD_TOKEN_ADDRESS = exports.CHICKEN_BOND_MANAGER_ADDRESS = exports.BOND_NFT_ADDRESS = void 0;\nvar addresses_json_1 = require(\"./addresses.json\");\nObject.defineProperty(exports, \"BOND_NFT_ADDRESS\", { enumerable: true, get: function () { return addresses_json_1.BOND_NFT_ADDRESS; } });\nObject.defineProperty(exports, \"CHICKEN_BOND_MANAGER_ADDRESS\", { enumerable: true, get: function () { return addresses_json_1.CHICKEN_BOND_MANAGER_ADDRESS; } });\nObject.defineProperty(exports, \"BLUSD_TOKEN_ADDRESS\", { enumerable: true, get: function () { return addresses_json_1.BLUSD_TOKEN_ADDRESS; } });\nObject.defineProperty(exports, \"BLUSD_AMM_ADDRESS\", { enumerable: true, get: function () { return addresses_json_1.BLUSD_AMM_ADDRESS; } });\nObject.defineProperty(exports, \"BLUSD_AMM_STAKING_ADDRESS\", { enumerable: true, get: function () { return addresses_json_1.BLUSD_AMM_STAKING_ADDRESS; } });\nObject.defineProperty(exports, \"LUSD_OVERRIDE_ADDRESS\", { enumerable: true, get: function () { return addresses_json_1.LUSD_OVERRIDE_ADDRESS; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CurveCryptoSwap2ETH__factory = void 0;\n/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nvar CurveCryptoSwap2ETH__factory_1 = require(\"./CurveCryptoSwap2ETH__factory\");\nObject.defineProperty(exports, \"CurveCryptoSwap2ETH__factory\", { enumerable: true, get: function () { return CurveCryptoSwap2ETH__factory_1.CurveCryptoSwap2ETH__factory; } });\n","import { AddressZero } from \"@ethersproject/constants\";\nimport { isAddress, getAddress } from \"@ethersproject/address\";\n\nexport type LiquityFrontendConfig = {\n  frontendTag: string;\n  infuraApiKey?: string;\n  testnetOnly?: boolean;\n};\n\nconst defaultConfig: LiquityFrontendConfig = {\n  frontendTag: AddressZero\n};\n\nfunction hasKey<K extends string>(o: object, k: K): o is Record<K, unknown> {\n  return k in o;\n}\n\nconst parseConfig = (json: unknown): LiquityFrontendConfig => {\n  const config = { ...defaultConfig };\n\n  if (typeof json === \"object\" && json !== null) {\n    if (hasKey(json, \"frontendTag\") && json.frontendTag !== \"\") {\n      const { frontendTag } = json;\n\n      if (typeof frontendTag === \"string\" && isAddress(frontendTag)) {\n        config.frontendTag = getAddress(frontendTag);\n      } else {\n        console.error(\"Malformed frontendTag:\");\n        console.log(frontendTag);\n      }\n    }\n\n    if (hasKey(json, \"infuraApiKey\") && json.infuraApiKey !== \"\") {\n      const { infuraApiKey } = json;\n\n      if (typeof infuraApiKey === \"string\") {\n        config.infuraApiKey = infuraApiKey;\n      } else {\n        console.error(\"Malformed infuraApiKey:\");\n        console.log(infuraApiKey);\n      }\n    }\n\n    if (hasKey(json, \"testnetOnly\")) {\n      const { testnetOnly } = json;\n\n      if (typeof testnetOnly === \"boolean\") {\n        config.testnetOnly = testnetOnly;\n      } else {\n        console.error(\"Malformed testnetOnly:\");\n        console.log(testnetOnly);\n      }\n    }\n  } else {\n    console.error(\"Malformed config:\");\n    console.log(json);\n  }\n\n  return config;\n};\n\nlet configPromise: Promise<LiquityFrontendConfig> | undefined = undefined;\n\nconst fetchConfig = async () => {\n  try {\n    const response = await fetch(\"config.json\");\n\n    if (!response.ok) {\n      throw new Error(`Failed to fetch config.json (status ${response.status})`);\n    }\n\n    return parseConfig(await response.json());\n  } catch (err) {\n    console.error(err);\n    return { ...defaultConfig };\n  }\n};\n\nexport const getConfig = (): Promise<LiquityFrontendConfig> => {\n  if (!configPromise) {\n    configPromise = fetchConfig();\n  }\n\n  return configPromise;\n};\n","import React, { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\n// import { Signer } from \"@ethersproject/abstract-signer\";\nimport { getNetwork } from \"@ethersproject/networks\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { isBatchedProvider, isWebSocketAugmentedProvider } from \"@liquity/providers\";\nimport {\n  BlockPolledLiquityStore,\n  EthersLiquity,\n  EthersLiquityWithStore,\n  _connectByChainId\n} from \"@liquity/lib-ethers\";\n\nimport { LiquityFrontendConfig, getConfig } from \"../config\";\n\ntype LiquityContextValue = {\n  config: LiquityFrontendConfig;\n  account: string;\n  provider: Provider;\n  liquity: EthersLiquityWithStore<BlockPolledLiquityStore>;\n};\n\nconst LiquityContext = createContext<LiquityContextValue | undefined>(undefined);\n\ntype LiquityProviderProps = {\n  loader?: React.ReactNode;\n  unsupportedNetworkFallback?: (chainId: number) => React.ReactNode;\n  unsupportedMainnetFallback?: React.ReactNode;\n};\n\nconst wsParams = (network: string, infuraApiKey: string): [string, string] => [\n  `wss://${network === \"homestead\" ? \"mainnet\" : network}.infura.io/ws/v3/${infuraApiKey}`,\n  network\n];\n\nconst webSocketSupportedNetworks = [\"homestead\", \"kovan\", \"rinkeby\", \"ropsten\", \"goerli\"];\n\nexport const LiquityProvider: React.FC<LiquityProviderProps> = ({\n  children,\n  loader,\n  unsupportedNetworkFallback,\n  unsupportedMainnetFallback\n}) => {\n  const { library: provider, account, chainId } = useWeb3React<Web3Provider>();\n  const [config, setConfig] = useState<LiquityFrontendConfig>();\n\n  const connection = useMemo(() => {\n    if (config && provider && account && chainId) {\n      try {\n        return _connectByChainId(provider, provider.getSigner(account), chainId, {\n          userAddress: account,\n          frontendTag: config.frontendTag,\n          useStore: \"blockPolled\"\n        });\n      } catch {}\n    }\n  }, [config, provider, account, chainId]);\n\n  useEffect(() => {\n    getConfig().then(setConfig);\n  }, []);\n\n  useEffect(() => {\n    if (config && connection) {\n      const { provider, chainId } = connection;\n\n      if (isBatchedProvider(provider) && provider.chainId !== chainId) {\n        provider.chainId = chainId;\n      }\n\n      if (isWebSocketAugmentedProvider(provider)) {\n        const network = getNetwork(chainId);\n\n        if (\n          network.name &&\n          webSocketSupportedNetworks.includes(network.name) &&\n          config.infuraApiKey\n        ) {\n          provider.openWebSocket(...wsParams(network.name, config.infuraApiKey));\n        } else if (connection._isDev) {\n          provider.openWebSocket(`ws://${window.location.hostname}:8546`, chainId);\n        }\n\n        return () => {\n          provider.closeWebSocket();\n        };\n      }\n    }\n  }, [config, connection]);\n\n  if (!config || !provider || !account || !chainId) {\n    return <>{loader}</>;\n  }\n\n  if (config.testnetOnly && chainId === 1) {\n    return <>{unsupportedMainnetFallback}</>;\n  }\n\n  if (!connection) {\n    return unsupportedNetworkFallback ? <>{unsupportedNetworkFallback(chainId)}</> : null;\n  }\n\n  const liquity = EthersLiquity._from(connection);\n  liquity.store.logging = true;\n\n  return (\n    <LiquityContext.Provider value={{ config, account, provider, liquity }}>\n      {children}\n    </LiquityContext.Provider>\n  );\n};\n\nexport const useLiquity = () => {\n  const liquityContext = useContext(LiquityContext);\n\n  if (!liquityContext) {\n    throw new Error(\"You must provide a LiquityContext via LiquityProvider\");\n  }\n\n  return liquityContext;\n};\n","import { InjectedConnector } from \"@web3-react/injected-connector\";\n\nexport const injectedConnector = new InjectedConnector({});\n","import React from \"react\";\nimport { library, IconName, IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faCircleNotch,\n  faCheckCircle,\n  faExclamationTriangle,\n  faInfoCircle,\n  faTimes,\n  faTrash,\n  faChartLine,\n  faRedo,\n  faHistory,\n  faChevronLeft,\n  faChevronRight,\n  faUserCircle,\n  faWallet,\n  faExternalLinkAlt,\n  faClipboardCheck,\n  faCog,\n  faCheck,\n  faPlug,\n  faExclamationCircle,\n  faAngleUp,\n  faAngleDoubleUp,\n  faAngleDown,\n  faAngleDoubleDown,\n  faPen,\n  faHandPaper,\n  faHeartbeat,\n  faBars,\n  faArrowDown\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faClipboard, faQuestionCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon, FontAwesomeIconProps } from \"@fortawesome/react-fontawesome\";\n\nlibrary.add(\n  faCircleNotch,\n  faCheck,\n  faCheckCircle,\n  faExclamationTriangle,\n  faInfoCircle,\n  faTimes,\n  faTrash,\n  faChartLine,\n  faRedo,\n  faHistory,\n  faChevronLeft,\n  faChevronRight,\n  faClipboard,\n  faClipboardCheck,\n  faUserCircle,\n  faWallet,\n  faExternalLinkAlt,\n  faCog,\n  faPlug,\n  faExclamationCircle,\n  faAngleUp,\n  faAngleDoubleUp,\n  faAngleDown,\n  faAngleDoubleDown,\n  faPen,\n  faHandPaper,\n  faHeartbeat,\n  faBars,\n  faQuestionCircle,\n  faArrowDown\n);\n\nconst getIcon = (name: IconName): IconProp => {\n  switch (name) {\n    case \"clipboard\":\n      return [\"far\", \"clipboard\"];\n    case \"question-circle\":\n      return [\"far\", \"question-circle\"];\n    default:\n      return name;\n  }\n};\n\nexport type IconProps = Pick<FontAwesomeIconProps, \"style\" | \"size\" | \"color\" | \"spin\"> & {\n  name: IconName;\n};\n\nexport const Icon: React.FC<IconProps> = ({ name, style, ...rest }) => (\n  <FontAwesomeIcon style={style} icon={getIcon(name)} {...rest} />\n);\n","import React from \"react\";\nimport { Heading, Flex, Card, Button, Box } from \"theme-ui\";\n\nimport { Icon } from \"./Icon\";\n\ntype DialogIntent = \"success\" | \"warning\" | \"danger\" | \"info\";\n\ntype DialogProps = {\n  intent?: DialogIntent;\n  title: string;\n  icon?: React.ReactNode;\n  cancelLabel?: string;\n  onCancel: () => void;\n};\n\nconst iconFromIntent = (intent: DialogIntent | undefined) => {\n  switch (intent) {\n    case \"success\":\n      return <Icon name=\"check-circle\" color=\"success\" aria-label=\"Success\" />;\n    case \"warning\":\n      return <Icon name=\"exclamation-triangle\" color=\"warning\" aria-label=\"Warning\" />;\n    case \"danger\":\n      return <Icon name=\"exclamation-triangle\" color=\"danger\" aria-label=\"Danger\" />;\n    case \"info\":\n      return <Icon name=\"info-circle\" color=\"info\" aria-label=\"Info\" />;\n  }\n  return null;\n};\n\nexport const Dialog: React.FC<DialogProps> = ({\n  intent,\n  title,\n  icon,\n  cancelLabel,\n  onCancel,\n  children\n}) => (\n  <Card sx={{ p: 0, borderRadius: \"4px\" }}>\n    {intent ? <Box sx={{ height: \"4px\", bg: intent, borderRadius: \"3px 3px 0 0\" }} /> : null}\n    <Flex\n      sx={{\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        borderBottom: 1,\n        borderColor: \"muted\",\n        p: [3, 4],\n        pb: 3\n      }}\n    >\n      {icon || iconFromIntent(intent)}\n      <Heading as=\"h1\" sx={{ textAlign: \"center\", fontSize: [2, 3], px: [3, 0] }}>\n        {title}\n      </Heading>\n      <Button variant=\"icon\" onClick={onCancel}>\n        <Icon name=\"times\" size=\"lg\" aria-label={cancelLabel || \"Cancel\"} />\n      </Button>\n    </Flex>\n    {children}\n  </Card>\n);\n","import React from \"react\";\nimport { Box, Button, Flex } from \"theme-ui\";\n\nimport { Dialog } from \"./Dialog\";\n\ntype RetryDialogProps = {\n  title: string;\n  cancelLabel?: string;\n  retryLabel?: string;\n  onCancel: () => void;\n  onRetry: () => void;\n};\n\nexport const RetryDialog: React.FC<RetryDialogProps> = ({\n  title,\n  cancelLabel,\n  onCancel,\n  retryLabel,\n  onRetry,\n  children\n}) => (\n  <Dialog intent=\"danger\" title={title} cancelLabel={cancelLabel} onCancel={onCancel}>\n    <Box sx={{ p: [3, 4] }}>{children}</Box>\n    <Flex\n      sx={{\n        p: [3, 4],\n        borderTop: 1,\n        borderColor: \"muted\",\n        justifyContent: \"flex-end\",\n        flexDirection: [\"column\", \"row\"],\n        alignItems: \"center\"\n      }}\n    >\n      <Button\n        variant=\"danger\"\n        sx={{\n          mr: [0, 3],\n          mb: [2, 0],\n          width: [\"100%\", \"auto\"]\n        }}\n        onClick={onCancel}\n      >\n        {cancelLabel || \"Cancel\"}\n      </Button>\n      <Button sx={{ width: [\"100%\", \"auto\"] }} onClick={onRetry}>\n        {retryLabel || \"Retry\"}\n      </Button>\n    </Flex>\n  </Dialog>\n);\n","import React from \"react\";\nimport { Box, Flex, Spinner } from \"theme-ui\";\n\nimport { Dialog } from \"./Dialog\";\n\ntype WaitingDialogProps = {\n  title: string;\n  icon?: React.ReactNode;\n  waitReason: React.ReactNode;\n  cancelLabel?: string;\n  onCancel: () => void;\n};\n\nexport const WaitingDialog: React.FC<WaitingDialogProps> = ({\n  title,\n  icon,\n  waitReason,\n  cancelLabel,\n  onCancel,\n  children\n}) => (\n  <Dialog title={title} icon={icon} cancelLabel={cancelLabel} onCancel={onCancel}>\n    {children}\n    <Box sx={{ px: [3, 4], pb: [3, 4] }}>\n      <Flex\n        sx={{\n          flexDirection: [\"column\", \"row\"],\n          bg: \"muted\",\n          p: [3, 4],\n          alignItems: [\"center\", \"auto\"]\n        }}\n      >\n        <Spinner size=\"3em\" sx={{ mr: [0, 3], mb: [2, 0] }} />\n        <Flex sx={{ flexDirection: \"column\", alignItems: [\"center\", \"flex-start\"] }}>\n          {waitReason}\n        </Flex>\n      </Flex>\n    </Box>\n  </Dialog>\n);\n","import React from \"react\";\nimport { Text, Box } from \"theme-ui\";\n\nimport { WaitingDialog } from \"./WaitingDialog\";\n\ntype ConnectionConfirmationDialogProps = {\n  title: string;\n  icon?: React.ReactNode;\n  onCancel: () => void;\n};\n\nexport const ConnectionConfirmationDialog: React.FC<ConnectionConfirmationDialogProps> = ({\n  title,\n  icon,\n  onCancel,\n  children\n}) => (\n  <WaitingDialog\n    title={title}\n    icon={icon}\n    waitReason={\n      <>\n        <Text sx={{ fontWeight: \"bold\" }}>Waiting for connection confirmation...</Text>\n        <Text>This won’t cost you any Ether</Text>\n      </>\n    }\n    cancelLabel=\"Cancel connection\"\n    onCancel={onCancel}\n  >\n    <Box sx={{ p: [3, 4] }}>{children}</Box>\n  </WaitingDialog>\n);\n","import React from \"react\";\n\nexport const MetaMaskIcon: React.FC = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>MetaMask extension icon</title>\n    <path\n      d=\"M8.49025 3.49976L1.49216 0.499756L0.492432 3.49976L2.49189 11.9998L21.4867 11.4998L23.4861 3.49976L21.9866 0.499756L15.4883 3.49976H8.49025Z\"\n      fill=\"#763D16\"\n    />\n    <path d=\"M6.99048 11.9998H17.9875V18.9998H6.99048V11.9998Z\" fill=\"#333333\" />\n    <rect x=\"7.99023\" y=\"16.9998\" width=\"5.99836\" height=\"3\" fill=\"#333333\" />\n    <path\n      d=\"M1.58124 10.6642C1.72755 10.8311 1.76935 11.0607 1.70665 11.2485L0.222731 15.8398C0.18093 15.9651 0.18093 16.0903 0.222731 16.1946L1.51854 20.6398C1.62304 20.9738 1.95745 21.1616 2.27095 21.0572L6.7227 19.8259C6.9108 19.7633 7.1198 19.8259 7.287 19.9511L8.06031 20.5772C8.08121 20.5981 8.08121 20.5981 8.10211 20.5981L10.0249 21.9338C10.1294 21.9964 10.2548 22.0381 10.3802 22.0381H13.5989C13.7243 22.0381 13.8497 21.9964 13.9542 21.9338L15.877 20.5981C15.8979 20.5981 15.8979 20.5772 15.9188 20.5772L16.6921 19.9511C16.8384 19.8259 17.0474 19.7842 17.2564 19.8259L21.7081 21.0572C22.0426 21.1407 22.377 20.9529 22.4606 20.6398L23.7564 16.1946C23.7982 16.0694 23.7982 15.9442 23.7564 15.8398L22.2725 11.2485C22.2098 11.0398 22.2516 10.8311 22.3979 10.6642L23.9863 3.54766C24.0072 3.44331 24.0072 3.33897 23.9654 3.23462L23.0249 0.417226C22.9204 0.0833133 22.5442 -0.0836433 22.2098 0.0415742L15.2709 2.6294C15.2082 2.65027 15.1246 2.67114 15.0619 2.67114H8.91722C8.83362 2.67114 8.77092 2.65027 8.70822 2.6294L1.76935 0.0415742C1.43494 -0.0836433 1.05874 0.0833133 0.954238 0.417226L0.0346286 3.23462C-0.00717182 3.3181 -0.00717182 3.44331 0.0137284 3.54766L1.58124 10.6642ZM13.996 14.2537L14.5185 13.1685C14.5812 13.0433 14.7484 12.9807 14.8738 13.0433L16.1278 13.6068C16.3577 13.7111 16.3368 14.0451 16.086 14.1285L14.3304 14.6503C14.1005 14.7129 13.8915 14.4833 13.996 14.2537ZM13.8915 6.71984C13.7661 6.61549 13.7661 6.40679 13.9124 6.32331L21.8126 0.918096C21.9381 0.834618 22.1262 0.876357 22.1889 1.04331L23.1712 3.73549C23.1921 3.77723 23.1921 3.81897 23.1712 3.88157L21.5618 10.0798C21.52 10.2051 21.3946 10.2677 21.2692 10.2259L16.922 9.05723C16.8802 9.05723 16.8593 9.03636 16.8384 9.01549L13.8915 6.71984ZM10.0667 19.5338L10.213 18.3233C10.213 18.2607 10.2548 18.1981 10.3175 18.1564L10.6101 17.9477C10.6519 17.9268 10.6937 17.9059 10.7355 17.9059H13.2018C13.2436 17.9059 13.3063 17.9268 13.3272 17.9477L13.6198 18.1564C13.6825 18.1981 13.7034 18.2607 13.7243 18.3233L13.8497 19.5338C13.8706 19.6798 13.7452 19.8051 13.6198 19.8051H10.2757C10.1712 19.8051 10.0667 19.6798 10.0667 19.5338ZM7.85131 13.6068L9.10532 13.0433C9.25162 12.9807 9.39792 13.0433 9.46062 13.1685L9.98313 14.2537C10.0876 14.4624 9.87863 14.692 9.64873 14.6294L7.87221 14.1077C7.64231 14.0451 7.62141 13.7111 7.85131 13.6068ZM0.807936 3.86071C0.787036 3.81897 0.807936 3.75636 0.807936 3.71462L1.79025 1.04331C1.85295 0.897226 2.04105 0.834618 2.16645 0.918096L10.0667 6.32331C10.213 6.42766 10.213 6.61549 10.0876 6.71984L7.1407 9.01549C7.1198 9.03636 7.078 9.05723 7.0571 9.05723L2.70986 10.2259C2.58445 10.2677 2.45905 10.2051 2.41725 10.0798L0.807936 3.86071Z\"\n      fill=\"#F36D34\"\n    />\n  </svg>\n);\n","import React from \"react\";\nimport { Container } from \"theme-ui\";\n\nexport const Modal: React.FC = ({ children }) => (\n  <Container variant=\"modalOverlay\">\n    <Container variant=\"modal\">{children}</Container>\n  </Container>\n);\n","import React, { useEffect, useReducer } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\nimport { Button, Text, Flex, Link, Box } from \"theme-ui\";\n\nimport { injectedConnector } from \"../connectors/injectedConnector\";\nimport { useAuthorizedConnection } from \"../hooks/useAuthorizedConnection\";\n\nimport { RetryDialog } from \"./RetryDialog\";\nimport { ConnectionConfirmationDialog } from \"./ConnectionConfirmationDialog\";\nimport { MetaMaskIcon } from \"./MetaMaskIcon\";\nimport { Icon } from \"./Icon\";\nimport { Modal } from \"./Modal\";\n\ninterface MaybeHasMetaMask {\n  ethereum?: {\n    isMetaMask?: boolean;\n  };\n}\n\ntype ConnectionState =\n  | { type: \"inactive\" }\n  | {\n      type: \"activating\" | \"active\" | \"rejectedByUser\" | \"alreadyPending\" | \"failed\";\n      connector: AbstractConnector;\n    };\n\ntype ConnectionAction =\n  | { type: \"startActivating\"; connector: AbstractConnector }\n  | { type: \"fail\"; error: Error }\n  | { type: \"finishActivating\" | \"retry\" | \"cancel\" | \"deactivate\" };\n\nconst connectionReducer: React.Reducer<ConnectionState, ConnectionAction> = (state, action) => {\n  switch (action.type) {\n    case \"startActivating\":\n      return {\n        type: \"activating\",\n        connector: action.connector\n      };\n    case \"finishActivating\":\n      return {\n        type: \"active\",\n        connector: state.type === \"inactive\" ? injectedConnector : state.connector\n      };\n    case \"fail\":\n      if (state.type !== \"inactive\") {\n        return {\n          type: action.error.message.match(/user rejected/i)\n            ? \"rejectedByUser\"\n            : action.error.message.match(/already pending/i)\n            ? \"alreadyPending\"\n            : \"failed\",\n          connector: state.connector\n        };\n      }\n      break;\n    case \"retry\":\n      if (state.type !== \"inactive\") {\n        return {\n          type: \"activating\",\n          connector: state.connector\n        };\n      }\n      break;\n    case \"cancel\":\n      return {\n        type: \"inactive\"\n      };\n    case \"deactivate\":\n      return {\n        type: \"inactive\"\n      };\n  }\n\n  console.warn(\"Ignoring connectionReducer action:\");\n  console.log(action);\n  console.log(\"  in state:\");\n  console.log(state);\n\n  return state;\n};\n\nconst detectMetaMask = () => (window as MaybeHasMetaMask).ethereum?.isMetaMask ?? false;\n\ntype WalletConnectorProps = {\n  loader?: React.ReactNode;\n};\n\nexport const WalletConnector: React.FC<WalletConnectorProps> = ({ children, loader }) => {\n  const { activate, deactivate, active, error } = useWeb3React<unknown>();\n  const triedAuthorizedConnection = useAuthorizedConnection();\n  const [connectionState, dispatch] = useReducer(connectionReducer, { type: \"inactive\" });\n  const isMetaMask = detectMetaMask();\n\n  useEffect(() => {\n    if (error) {\n      dispatch({ type: \"fail\", error });\n      deactivate();\n    }\n  }, [error, deactivate]);\n\n  useEffect(() => {\n    if (active) {\n      dispatch({ type: \"finishActivating\" });\n    } else {\n      dispatch({ type: \"deactivate\" });\n    }\n  }, [active]);\n\n  if (!triedAuthorizedConnection) {\n    return <>{loader}</>;\n  }\n\n  if (connectionState.type === \"active\") {\n    return <>{children}</>;\n  }\n\n  return (\n    <>\n      <Flex sx={{ height: \"100vh\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <Button\n          onClick={() => {\n            dispatch({ type: \"startActivating\", connector: injectedConnector });\n            activate(injectedConnector);\n          }}\n        >\n          {isMetaMask ? (\n            <>\n              <MetaMaskIcon />\n              <Box sx={{ ml: 2 }}>Connect to MetaMask</Box>\n            </>\n          ) : (\n            <>\n              <Icon name=\"plug\" size=\"lg\" />\n              <Box sx={{ ml: 2 }}>Connect wallet</Box>\n            </>\n          )}\n        </Button>\n      </Flex>\n\n      {connectionState.type === \"failed\" && (\n        <Modal>\n          <RetryDialog\n            title={isMetaMask ? \"Failed to connect to MetaMask\" : \"Failed to connect wallet\"}\n            onCancel={() => dispatch({ type: \"cancel\" })}\n            onRetry={() => {\n              dispatch({ type: \"retry\" });\n              activate(connectionState.connector);\n            }}\n          >\n            <Box sx={{ textAlign: \"center\" }}>\n              You might need to install MetaMask or use a different browser.\n            </Box>\n            <Link sx={{ lineHeight: 3 }} href=\"https://metamask.io/download.html\" target=\"_blank\">\n              Learn more <Icon size=\"xs\" name=\"external-link-alt\" />\n            </Link>\n          </RetryDialog>\n        </Modal>\n      )}\n\n      {connectionState.type === \"activating\" && (\n        <Modal>\n          <ConnectionConfirmationDialog\n            title={\n              isMetaMask ? \"Confirm connection in MetaMask\" : \"Confirm connection in your wallet\"\n            }\n            icon={isMetaMask ? <MetaMaskIcon /> : <Icon name=\"wallet\" size=\"lg\" />}\n            onCancel={() => dispatch({ type: \"cancel\" })}\n          >\n            <Text sx={{ textAlign: \"center\" }}>\n              Confirm the request that&apos;s just appeared.\n              {isMetaMask ? (\n                <> If you can&apos;t see a request, open your MetaMask extension via your browser.</>\n              ) : (\n                <> If you can&apos;t see a request, you might have to open your wallet.</>\n              )}\n            </Text>\n          </ConnectionConfirmationDialog>\n        </Modal>\n      )}\n\n      {connectionState.type === \"rejectedByUser\" && (\n        <Modal>\n          <RetryDialog\n            title=\"Cancel connection?\"\n            onCancel={() => dispatch({ type: \"cancel\" })}\n            onRetry={() => {\n              dispatch({ type: \"retry\" });\n              activate(connectionState.connector);\n            }}\n          >\n            <Text>To use Maddy Protocol, you need to connect your Ethereum account.</Text>\n          </RetryDialog>\n        </Modal>\n      )}\n\n      {connectionState.type === \"alreadyPending\" && (\n        <Modal>\n          <RetryDialog\n            title=\"Connection already requested\"\n            onCancel={() => dispatch({ type: \"cancel\" })}\n            onRetry={() => {\n              dispatch({ type: \"retry\" });\n              activate(connectionState.connector);\n            }}\n          >\n            <Text>Please check your wallet and accept the connection request before retrying.</Text>\n          </RetryDialog>\n        </Modal>\n      )}\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { injectedConnector } from \"../connectors/injectedConnector\";\n\n/**\n * React hook that tries to activate the InjectedConnector if the app's already authorized in the\n * browser's wallet (in the case of dApp-enabled browsers) or its wallet extension (e.g. MetaMask).\n *\n * Example: user has a browser with the MetaMask extension. MetaMask injects an Ethereum provider\n * into the window object. We check via InjectedConnector if our app is already authorized to use\n * the wallet through this provider, and in that case we try to activate the connector.\n *\n * @returns true when finished trying to activate the InjectedConnector, false otherwise\n */\n\nexport function useAuthorizedConnection(): boolean {\n  const { activate, active } = useWeb3React<unknown>();\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    const tryToActivateIfAuthorized = async () => {\n      try {\n        if (await injectedConnector.isAuthorized()) {\n          await activate(injectedConnector, undefined, true);\n        } else {\n          throw new Error(\"Unauthorized\");\n        }\n      } catch {\n        setTried(true);\n      }\n    };\n    tryToActivateIfAuthorized();\n  }, [activate]);\n\n  useEffect(() => {\n    if (active) {\n      setTried(true);\n    }\n  }, [active]);\n\n  return tried;\n}\n","import React, { useState, useRef } from \"react\";\nimport { VirtualElement } from \"@popperjs/core\";\nimport { usePopper } from \"react-popper\";\nimport { Card } from \"theme-ui\";\n\nexport type Hoverable = {\n  onMouseOver: () => void;\n  onMouseOut: () => void;\n  ref: (instance: Element | VirtualElement | null) => void;\n};\n\nexport type TooltipProps<C> = {\n  children: C;\n  message: string;\n  placement?: \"top\" | \"bottom\" | \"left\" | \"right\";\n};\n\nexport function Tooltip<C extends React.ReactElement<Hoverable>>({\n  children,\n  message,\n  placement = \"top\"\n}: TooltipProps<C>) {\n  const event = useRef<\"over\" | \"out\">();\n  const [show, setShow] = useState(false);\n  const [referenceElement, setReferenceElement] = useState<Element | VirtualElement | null>();\n  const [popperElement, setPopperElement] = useState<HTMLElement | null>();\n\n  const { styles, attributes } = usePopper(referenceElement, popperElement, { placement });\n\n  return (\n    <>\n      {React.cloneElement(React.Children.only<C>(children), {\n        // Use a debounced onMouseOver/onMouseOut instead of onMouseEnter/onMouseLeave to\n        // work around https://github.com/facebook/react/issues/10109\n\n        onMouseOver: () => {\n          event.current = \"over\";\n\n          if (!show) {\n            setShow(true);\n          }\n        },\n\n        onMouseOut: () => {\n          event.current = \"out\";\n\n          setTimeout(() => {\n            if (event.current === \"out\") {\n              setShow(false);\n            }\n          }, 0);\n        },\n\n        ref: setReferenceElement\n      })}\n\n      {show && (\n        <Card variant=\"tooltip\" ref={setPopperElement} style={styles.popper} {...attributes.popper}>\n          {message}\n        </Card>\n      )}\n    </>\n  );\n}\n","import { memo, useState, useEffect } from \"react\";\nimport { Flex, Box, Text, ThemeUIStyleObject } from \"theme-ui\";\nimport { CircularProgressbarWithChildren } from \"react-circular-progressbar\";\nimport { buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { Icon } from \"./Icon\";\nimport type { TransactionState } from \"./Transaction\";\n\nconst strokeWidth = 10;\n\nconst circularProgressbarStyle = {\n  strokeLinecap: \"butt\",\n  pathColor: \"white\",\n  trailColor: \"rgba(255, 255, 255, 0.33)\"\n};\n\nconst slowProgress = {\n  strokeWidth,\n  styles: buildStyles({\n    ...circularProgressbarStyle,\n    pathTransitionDuration: 30\n  })\n};\n\nconst fastProgress = {\n  strokeWidth,\n  styles: buildStyles({\n    ...circularProgressbarStyle,\n    pathTransitionDuration: 0.75\n  })\n};\n\nexport type TransactionStateType = TransactionState[\"type\"];\n\nconst Donut = memo(\n  CircularProgressbarWithChildren,\n  ({ value: prev }, { value: next }) => prev === next\n);\n\ntype TransactionProgressDonutProps = {\n  state: TransactionStateType;\n};\n\nconst TransactionProgressDonut: React.FC<TransactionProgressDonutProps> = ({ state }) => {\n  const [value, setValue] = useState(0);\n  const maxValue = 1;\n\n  useEffect(() => {\n    if (state === \"confirmed\") {\n      setTimeout(() => setValue(maxValue), 40);\n    } else {\n      setTimeout(() => setValue(maxValue * 0.67), 20);\n    }\n  }, [state]);\n\n  return state === \"confirmed\" ? (\n    <Donut {...{ value, maxValue, ...fastProgress }}>\n      <Icon name=\"check\" color=\"white\" size=\"lg\" />\n    </Donut>\n  ) : state === \"failed\" || state === \"cancelled\" ? (\n    <Donut value={0} {...{ maxValue, ...fastProgress }}>\n      <Icon name=\"times\" color=\"white\" size=\"lg\" />\n    </Donut>\n  ) : (\n    <Donut {...{ value, maxValue, ...slowProgress }}>\n      <Icon name=\"cog\" color=\"white\" size=\"lg\" spin />\n    </Donut>\n  );\n};\n\ntype TransactionStatusProps = {\n  state: TransactionStateType;\n  message?: string;\n  style?: ThemeUIStyleObject;\n};\n\nexport const TransactionStatus: React.FC<TransactionStatusProps> = ({ state, message, style }) => {\n  if (state === \"idle\" || state === \"waitingForApproval\") {\n    return null;\n  }\n\n  return (\n    <Flex\n      sx={{\n        alignItems: \"center\",\n        bg:\n          state === \"confirmed\"\n            ? \"success\"\n            : state === \"cancelled\"\n            ? \"warning\"\n            : state === \"failed\"\n            ? \"danger\"\n            : \"primary\",\n        p: 3,\n        pl: 4,\n        position: \"fixed\",\n        width: \"100vw\",\n        bottom: 0,\n        overflow: \"hidden\",\n        ...style\n      }}\n    >\n      <Box sx={{ mr: 3, width: \"40px\", height: \"40px\" }}>\n        <TransactionProgressDonut state={state} />\n      </Box>\n\n      <Text sx={{ fontSize: 3, color: \"white\" }}>\n        {state === \"waitingForConfirmation\"\n          ? \"Waiting for confirmation\"\n          : state === \"cancelled\"\n          ? \"Cancelled\"\n          : state === \"failed\"\n          ? message || \"Transaction failed. Please try again.\"\n          : \"Confirmed\"}\n      </Text>\n    </Flex>\n  );\n};\n","import React, { useState, useContext, useEffect, useCallback } from \"react\";\nimport { Provider, TransactionResponse, TransactionReceipt } from \"@ethersproject/abstract-provider\";\nimport { hexDataSlice, hexDataLength } from \"@ethersproject/bytes\";\nimport { defaultAbiCoder } from \"@ethersproject/abi\";\n\nimport \"react-circular-progressbar/dist/styles.css\";\n\nimport { EthersTransactionOverrides, EthersTransactionCancelledError } from \"@liquity/lib-ethers\";\nimport { SentLiquityTransaction, LiquityReceipt } from \"@liquity/lib-base\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Tooltip, TooltipProps, Hoverable } from \"./Tooltip\";\nimport { TransactionStatus } from \"./TransactionStatus\";\n\ntype TransactionIdle = {\n  type: \"idle\";\n};\n\ntype TransactionFailed = {\n  type: \"failed\";\n  id: string;\n  error: Error;\n};\n\ntype TransactionWaitingForApproval = {\n  type: \"waitingForApproval\";\n  id: string;\n};\n\ntype TransactionCancelled = {\n  type: \"cancelled\";\n  id: string;\n};\n\ntype TransactionWaitingForConfirmations = {\n  type: \"waitingForConfirmation\";\n  id: string;\n  tx: SentTransaction;\n};\n\ntype TransactionConfirmed = {\n  type: \"confirmed\";\n  id: string;\n};\n\ntype TransactionConfirmedOneShot = {\n  type: \"confirmedOneShot\";\n  id: string;\n};\n\nexport type TransactionState =\n  | TransactionIdle\n  | TransactionFailed\n  | TransactionWaitingForApproval\n  | TransactionCancelled\n  | TransactionWaitingForConfirmations\n  | TransactionConfirmed\n  | TransactionConfirmedOneShot;\n\nconst TransactionContext = React.createContext<\n  [TransactionState, (state: TransactionState) => void] | undefined\n>(undefined);\n\nexport const TransactionProvider: React.FC = ({ children }) => {\n  const transactionState = useState<TransactionState>({ type: \"idle\" });\n  return (\n    <TransactionContext.Provider value={transactionState}>{children}</TransactionContext.Provider>\n  );\n};\n\nconst useTransactionState = () => {\n  const transactionState = useContext(TransactionContext);\n\n  if (!transactionState) {\n    throw new Error(\"You must provide a TransactionContext via TransactionProvider\");\n  }\n\n  return transactionState;\n};\n\nexport const useMyTransactionState = (myId: string | RegExp): TransactionState => {\n  const [transactionState] = useTransactionState();\n\n  return transactionState.type !== \"idle\" &&\n    (typeof myId === \"string\" ? transactionState.id === myId : transactionState.id.match(myId))\n    ? transactionState\n    : { type: \"idle\" };\n};\n\nconst hasMessage = (error: unknown): error is { message: string } =>\n  typeof error === \"object\" &&\n  error !== null &&\n  \"message\" in error &&\n  typeof (error as { message: unknown }).message === \"string\";\n\ntype ButtonlikeProps = {\n  disabled?: boolean;\n  variant?: string;\n  onClick?: () => void;\n};\n\ntype SentTransaction = SentLiquityTransaction<\n  TransactionResponse,\n  LiquityReceipt<TransactionReceipt>\n>;\n\nexport type TransactionFunction = (\n  overrides?: EthersTransactionOverrides\n) => Promise<SentTransaction>;\n\ntype TransactionProps<C> = {\n  id: string;\n  tooltip?: string;\n  tooltipPlacement?: TooltipProps<C>[\"placement\"];\n  showFailure?: \"asTooltip\" | \"asChildText\";\n  requires?: readonly (readonly [boolean, string])[];\n  send: TransactionFunction;\n  children: C;\n};\n\nexport const useTransactionFunction = (\n  id: string,\n  send: TransactionFunction\n): [sendTransaction: () => Promise<void>, transactionState: TransactionState] => {\n  const [transactionState, setTransactionState] = useTransactionState();\n\n  const sendTransaction = useCallback(async () => {\n    setTransactionState({ type: \"waitingForApproval\", id });\n\n    try {\n      const tx = await send();\n\n      setTransactionState({\n        type: \"waitingForConfirmation\",\n        id,\n        tx\n      });\n    } catch (error) {\n      if (hasMessage(error) && error.message.includes(\"User denied transaction signature\")) {\n        setTransactionState({ type: \"cancelled\", id });\n      } else {\n        console.error(error);\n\n        setTransactionState({\n          type: \"failed\",\n          id,\n          error: new Error(\"Failed to send transaction (try again)\")\n        });\n      }\n    }\n  }, [send, id, setTransactionState]);\n\n  return [sendTransaction, transactionState];\n};\n\nexport function Transaction<C extends React.ReactElement<ButtonlikeProps & Hoverable>>({\n  id,\n  tooltip,\n  tooltipPlacement,\n  showFailure,\n  requires,\n  send,\n  children\n}: TransactionProps<C>) {\n  const [sendTransaction, transactionState] = useTransactionFunction(id, send);\n  const trigger = React.Children.only<C>(children);\n\n  const failureReasons = (requires || [])\n    .filter(([requirement]) => !requirement)\n    .map(([, reason]) => reason);\n\n  if (\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\"\n  ) {\n    failureReasons.push(\"You must wait for confirmation\");\n  }\n\n  showFailure =\n    failureReasons.length > 0 ? showFailure ?? (tooltip ? \"asTooltip\" : \"asChildText\") : undefined;\n\n  const clonedTrigger =\n    showFailure === \"asChildText\"\n      ? React.cloneElement(\n          trigger,\n          {\n            disabled: true,\n            variant: \"danger\"\n          },\n          failureReasons[0]\n        )\n      : showFailure === \"asTooltip\"\n      ? React.cloneElement(trigger, { disabled: true })\n      : React.cloneElement(trigger, { onClick: sendTransaction });\n\n  if (showFailure === \"asTooltip\") {\n    tooltip = failureReasons[0];\n  }\n\n  return tooltip ? (\n    <>\n      <Tooltip message={tooltip} placement={tooltipPlacement || \"right\"}>\n        {clonedTrigger}\n      </Tooltip>\n    </>\n  ) : (\n    clonedTrigger\n  );\n}\n\n// Doesn't work on Kovan:\n// https://github.com/MetaMask/metamask-extension/issues/5579\nconst tryToGetRevertReason = async (provider: Provider, tx: TransactionReceipt) => {\n  try {\n    const result = await provider.call(tx, tx.blockNumber);\n\n    if (hexDataLength(result) % 32 === 4 && hexDataSlice(result, 0, 4) === \"0x08c379a0\") {\n      return (defaultAbiCoder.decode([\"string\"], hexDataSlice(result, 4)) as [string])[0];\n    }\n  } catch {\n    return undefined;\n  }\n};\n\nexport const TransactionMonitor: React.FC = () => {\n  const { provider } = useLiquity();\n  const [transactionState, setTransactionState] = useTransactionState();\n\n  const id = transactionState.type !== \"idle\" ? transactionState.id : undefined;\n  const tx = transactionState.type === \"waitingForConfirmation\" ? transactionState.tx : undefined;\n\n  useEffect(() => {\n    if (id && tx) {\n      let cancelled = false;\n      let finished = false;\n\n      const txHash = tx.rawSentTransaction.hash;\n\n      const waitForConfirmation = async () => {\n        try {\n          const receipt = await tx.waitForReceipt();\n\n          if (cancelled) {\n            return;\n          }\n\n          const { confirmations } = receipt.rawReceipt;\n          const blockNumber = receipt.rawReceipt.blockNumber + confirmations - 1;\n          console.log(`Block #${blockNumber} ${confirmations}-confirms tx ${txHash}`);\n          console.log(`Finish monitoring tx ${txHash}`);\n          finished = true;\n\n          if (receipt.status === \"succeeded\") {\n            console.log(`${receipt}`);\n\n            setTransactionState({\n              type: \"confirmedOneShot\",\n              id\n            });\n          } else {\n            const reason = await tryToGetRevertReason(provider, receipt.rawReceipt);\n\n            if (cancelled) {\n              return;\n            }\n\n            console.error(`Tx ${txHash} failed`);\n            if (reason) {\n              console.error(`Revert reason: ${reason}`);\n            }\n\n            setTransactionState({\n              type: \"failed\",\n              id,\n              error: new Error(reason ? `Reverted: ${reason}` : \"Failed\")\n            });\n          }\n        } catch (rawError) {\n          if (cancelled) {\n            return;\n          }\n\n          finished = true;\n\n          if (rawError instanceof EthersTransactionCancelledError) {\n            console.log(`Cancelled tx ${txHash}`);\n            setTransactionState({ type: \"cancelled\", id });\n          } else {\n            console.error(`Failed to get receipt for tx ${txHash}`);\n            console.error(rawError);\n\n            setTransactionState({\n              type: \"failed\",\n              id,\n              error: new Error(\"Failed\")\n            });\n          }\n        }\n      };\n\n      console.log(`Start monitoring tx ${txHash}`);\n      waitForConfirmation();\n\n      return () => {\n        if (!finished) {\n          setTransactionState({ type: \"idle\" });\n          console.log(`Cancel monitoring tx ${txHash}`);\n          cancelled = true;\n        }\n      };\n    }\n  }, [provider, id, tx, setTransactionState]);\n\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\" && id) {\n      // hack: the txn confirmed state lasts 5 seconds which blocks other states, review with Dani\n      setTransactionState({ type: \"confirmed\", id });\n    } else if (\n      transactionState.type === \"confirmed\" ||\n      transactionState.type === \"failed\" ||\n      transactionState.type === \"cancelled\"\n    ) {\n      let cancelled = false;\n\n      setTimeout(() => {\n        if (!cancelled) {\n          setTransactionState({ type: \"idle\" });\n        }\n      }, 5000);\n\n      return () => {\n        cancelled = true;\n      };\n    }\n  }, [transactionState.type, setTransactionState, id]);\n\n  if (transactionState.type === \"idle\" || transactionState.type === \"waitingForApproval\") {\n    return null;\n  }\n\n  return (\n    <TransactionStatus\n      state={transactionState.type}\n      message={transactionState.type === \"failed\" ? transactionState.error.message : undefined}\n    />\n  );\n};\n","import { Decimal } from \"@liquity/lib-base\";\n\ntype Idle = \"IDLE\";\ntype Creating = \"CREATING\";\ntype Cancelling = \"CANCELLING\";\ntype Claiming = \"CLAIMING\";\ntype Swapping = \"SWAPPING\";\ntype AddingLiquidity = \"ADDING_LIQUIDITY\";\ntype ManagingLiquidity = \"MANAGING_LIQUIDITY\";\n\nexport type BondView =\n  | Idle\n  | Creating\n  | Cancelling\n  | Claiming\n  | Swapping\n  | AddingLiquidity\n  | ManagingLiquidity;\n\n/* UI events */\ntype CreateBondPressed = \"CREATE_BOND_PRESSED\";\ntype CancelPressed = \"ABORT_PRESSED\";\ntype BackPressed = \"BACK_PRESSED\";\ntype ApprovePressed = \"APPROVE_PRESSED\";\ntype ConfirmPressed = \"CONFIRM_PRESSED\";\ntype CancelBondPressed = \"CANCEL_BOND_PRESSED\";\ntype ClaimBondPressed = \"CLAIM_BOND_PRESSED\";\ntype SwapPressed = \"SWAP_PRESSED\";\ntype AddLiquidityPressed = \"ADD_LIQUIDITY_PRESSED\";\ntype ManageLiquidityPressed = \"MANAGE_LIQUIDITY_PRESSED\";\n\n/* On-chain events */\ntype CreateBondConfirmed = \"CREATE_BOND_CONFIRMED\";\ntype CancelBondConfirmed = \"CANCEL_BOND_CONFIRMED\";\ntype ClaimBondConfirmed = \"CLAIM_BOND_CONFIRMED\";\ntype SwapConfirmed = \"SWAP_CONFIRMED\";\ntype ManageLiquidityConfirmed = \"MANAGE_LIQUIDITY_CONFIRMED\";\n\nexport type BondEvent =\n  | CreateBondPressed\n  | CancelBondPressed\n  | ClaimBondPressed\n  | SwapPressed\n  | AddLiquidityPressed\n  | ManageLiquidityPressed\n  | ApprovePressed\n  | ConfirmPressed\n  | CancelPressed\n  | BackPressed\n  | CreateBondConfirmed\n  | CancelBondConfirmed\n  | ClaimBondConfirmed\n  | SwapConfirmed\n  | ManageLiquidityConfirmed;\n\ntype BondEventTransitions = Record<BondView, Partial<Record<BondEvent, BondView>>>;\n\nexport const transitions: BondEventTransitions = {\n  IDLE: {\n    CREATE_BOND_PRESSED: \"CREATING\",\n    CANCEL_BOND_PRESSED: \"CANCELLING\",\n    CLAIM_BOND_PRESSED: \"CLAIMING\",\n    SWAP_PRESSED: \"SWAPPING\",\n    ADD_LIQUIDITY_PRESSED: \"ADDING_LIQUIDITY\",\n    MANAGE_LIQUIDITY_PRESSED: \"MANAGING_LIQUIDITY\"\n  },\n  CREATING: {\n    ABORT_PRESSED: \"IDLE\",\n    CREATE_BOND_CONFIRMED: \"IDLE\",\n    BACK_PRESSED: \"IDLE\",\n    APPROVE_PRESSED: \"CREATING\",\n    CONFIRM_PRESSED: \"CREATING\"\n  },\n  CLAIMING: {\n    ABORT_PRESSED: \"IDLE\",\n    BACK_PRESSED: \"IDLE\",\n    CONFIRM_PRESSED: \"CLAIMING\",\n    CLAIM_BOND_CONFIRMED: \"IDLE\"\n  },\n  CANCELLING: {\n    ABORT_PRESSED: \"IDLE\",\n    BACK_PRESSED: \"IDLE\",\n    CONFIRM_PRESSED: \"CANCELLING\",\n    CANCEL_BOND_CONFIRMED: \"IDLE\"\n  },\n  SWAPPING: {\n    ABORT_PRESSED: \"IDLE\",\n    BACK_PRESSED: \"IDLE\",\n    APPROVE_PRESSED: \"SWAPPING\",\n    CONFIRM_PRESSED: \"SWAPPING\",\n    SWAP_CONFIRMED: \"IDLE\"\n  },\n  // Special case of managing liquidity when no deposit exists, and thus withdrawal is not possible\n  ADDING_LIQUIDITY: {\n    ABORT_PRESSED: \"IDLE\",\n    BACK_PRESSED: \"IDLE\",\n    APPROVE_PRESSED: \"ADDING_LIQUIDITY\",\n    CONFIRM_PRESSED: \"ADDING_LIQUIDITY\",\n    MANAGE_LIQUIDITY_CONFIRMED: \"IDLE\" // use the same event as in MANAGING_LIQUIDITY\n  },\n  MANAGING_LIQUIDITY: {\n    ABORT_PRESSED: \"IDLE\",\n    BACK_PRESSED: \"IDLE\",\n    APPROVE_PRESSED: \"MANAGING_LIQUIDITY\",\n    CONFIRM_PRESSED: \"MANAGING_LIQUIDITY\",\n    MANAGE_LIQUIDITY_CONFIRMED: \"IDLE\"\n  }\n};\n\nexport enum BLusdAmmTokenIndex {\n  BLUSD,\n  LUSD\n}\n\nexport type CreateBondPayload = { deposit: Decimal };\n\nexport type SelectBondPayload = { bondId: string };\n\nexport type SwapPressedPayload = {\n  inputToken: BLusdAmmTokenIndex;\n};\n\nexport type SwapPayload = {\n  inputAmount: Decimal;\n  minOutputAmount: Decimal;\n};\n\n// This payload is only dispatched by \"Manage liquidity\"\nexport type ApprovePressedPayload = {\n  tokensNeedingApproval: BLusdAmmTokenIndex[];\n};\n\nexport type AddLiquidityPayload = {\n  action: \"addLiquidity\";\n  bLusdAmount: Decimal;\n  lusdAmount: Decimal;\n  minLpTokens: Decimal;\n};\n\nexport type RemoveLiquidityPayload = {\n  action: \"removeLiquidity\";\n  burnLpTokens: Decimal;\n  minBLusdAmount: Decimal;\n  minLusdAmount: Decimal;\n};\n\nexport type RemoveLiquidityOneCoinPayload = {\n  action: \"removeLiquidityOneCoin\";\n  burnLpTokens: Decimal;\n  output: BLusdAmmTokenIndex;\n  minAmount: Decimal;\n};\n\nexport type ManageLiquidityPayload =\n  | AddLiquidityPayload\n  | RemoveLiquidityPayload\n  | RemoveLiquidityOneCoinPayload;\n\nexport type Payload =\n  | CreateBondPayload\n  | SelectBondPayload\n  | SwapPressedPayload\n  | SwapPayload\n  | ApprovePressedPayload\n  | ManageLiquidityPayload;\n\nexport type BondStatus = \"NON_EXISTENT\" | \"PENDING\" | \"CANCELLED\" | \"CLAIMED\";\n\nexport type Bond = {\n  id: string;\n  deposit: Decimal;\n  startTime: number;\n  endTime: number;\n  status: BondStatus;\n  tokenUri: string;\n  accrued: Decimal;\n  breakEvenAccrual: Decimal;\n  rebondAccrual: Decimal;\n  breakEvenTime: Date;\n  rebondTime: Date;\n  marketValue: Decimal;\n  rebondReturn: number;\n  rebondRoi: number;\n  rebondApr: number;\n  claimNowReturn: number;\n};\n\nexport type OptimisticBond = Pick<Bond, \"id\" | \"deposit\" | \"startTime\" | \"status\">;\n\nexport type Treasury = {\n  pending: Decimal;\n  reserve: Decimal;\n  permanent: Decimal;\n  total: Decimal;\n};\n\nexport type Stats = {\n  pendingBonds: Decimal;\n  cancelledBonds: Decimal;\n  claimedBonds: Decimal;\n  totalBonds: Decimal;\n};\n\nexport type ProtocolInfo = {\n  bLusdSupply: Decimal;\n  marketPrice: Decimal;\n  fairPrice: Decimal;\n  floorPrice: Decimal;\n  claimBondFee: Decimal;\n  alphaAccrualFactor: Decimal;\n  marketPricePremium: Decimal;\n  breakEvenTime: Date;\n  rebondTime: Date;\n  hasMarketPremium: boolean;\n  simulatedMarketPrice: Decimal;\n  breakEvenAccrualFactor: Decimal;\n  rebondAccrualFactor: Decimal;\n  breakEvenDays?: Decimal;\n  rebondDays?: Decimal;\n};\n\nexport type TransactionStatus = \"IDLE\" | \"PENDING\" | \"CONFIRMED\" | \"FAILED\";\n\nexport type BondTransaction =\n  | \"APPROVE\"\n  | \"CREATE\"\n  | \"CANCEL\"\n  | \"CLAIM\"\n  | \"APPROVE_AMM\"\n  | \"SWAP\"\n  | \"MANAGE_LIQUIDITY\";\n\nexport type BondTransactionStatuses = Record<BondTransaction, TransactionStatus>;\n","import { Theme, ThemeUIStyleObject } from \"theme-ui\";\n\nconst baseColors = {\n  blue: \"#1542cd\",\n  purple: \"#745ddf\",\n  cyan: \"#2eb6ea\",\n  green: \"#28c081\",\n  yellow: \"#fd9d28\",\n  red: \"#dc2c10\",\n  lightRed: \"#ff755f\"\n};\n\nconst colors = {\n  primary: baseColors.blue,\n  secondary: baseColors.purple,\n  accent: baseColors.cyan,\n\n  success: baseColors.green,\n  warning: baseColors.yellow,\n  danger: baseColors.red,\n  dangerHover: baseColors.lightRed,\n  info: baseColors.blue,\n  invalid: \"pink\",\n\n  text: \"rgb(255, 255, 255)\",\n  background: \"rgb(10, 10, 30)\",\n  muted: \"#eaebed\",\n  highlight: \"#efeffe\"\n};\n\nconst buttonBase: ThemeUIStyleObject = {\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n\n  \":enabled\": { cursor: \"pointer\" }\n};\n\nconst button: ThemeUIStyleObject = {\n  ...buttonBase,\n\n  px: \"32px\",\n  py: \"12px\",\n\n  color: \"white\",\n  border: 1,\n\n  fontWeight: \"bold\",\n\n  \":disabled\": {\n    opacity: 0.5\n  }\n};\n\nconst buttonOutline = (color: string, hoverColor: string): ThemeUIStyleObject => ({\n  color,\n  borderColor: color,\n  background: \"none\",\n\n  \":enabled:hover\": {\n    color: \"background\",\n    bg: hoverColor,\n    borderColor: hoverColor\n  }\n});\n\nconst iconButton: ThemeUIStyleObject = {\n  ...buttonBase,\n\n  padding: 0,\n  width: \"40px\",\n  height: \"40px\",\n\n  background: \"none\",\n\n  \":disabled\": {\n    color: \"text\",\n    opacity: 0.25\n  }\n};\n\nconst cardHeadingFontSize = 18.7167;\n\nconst cardGapX = [0, 3, 4];\nconst cardGapY = [3, 3, 4];\n\nconst card: ThemeUIStyleObject = {\n  position: \"relative\",\n  mt: cardGapY,\n  border: 1,\n  boxShadow: [1, null, 2]\n};\n\nconst infoCard: ThemeUIStyleObject = {\n  ...card,\n\n  padding: 3,\n\n  borderColor: \"rgba(122,199,240,0.4)\",\n  background: \"linear-gradient(200deg, #d4d9fc, #cae9f9)\",\n\n  h2: {\n    mb: 2,\n    fontSize: cardHeadingFontSize\n  }\n};\n\nconst formBase: ThemeUIStyleObject = {\n  display: \"block\",\n  width: \"auto\",\n  flexShrink: 0,\n  padding: 2,\n  fontSize: 3\n};\n\nconst formCell: ThemeUIStyleObject = {\n  ...formBase,\n\n  bg: \"background\",\n  border: 1,\n  borderColor: \"muted\",\n  borderRadius: 0,\n  boxShadow: [1, 2]\n};\n\nconst overlay: ThemeUIStyleObject = {\n  position: \"absolute\",\n\n  left: 0,\n  top: 0,\n  width: \"100%\",\n  height: \"100%\"\n};\n\nconst modalOverlay: ThemeUIStyleObject = {\n  position: \"fixed\",\n\n  left: 0,\n  top: 0,\n  width: \"100vw\",\n  height: \"100vh\"\n};\n\nconst headerGradient: ThemeUIStyleObject = {\n  background: `linear-gradient(90deg, ${colors.background}, ${colors.muted})`\n};\n\nconst theme: Theme = {\n  breakpoints: [\"48em\", \"52em\", \"64em\"],\n\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\n\n  fonts: {\n    body: [\n      \"system-ui\",\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"sans-serif\"\n    ].join(\", \"),\n    heading: \"inherit\",\n    monospace: \"Menlo, monospace\"\n  },\n\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\n\n  fontWeights: {\n    body: 400,\n    heading: 600,\n\n    light: 200,\n    medium: 500,\n    bold: 600\n  },\n\n  lineHeights: {\n    body: 1.5,\n    heading: 1.25\n  },\n\n  colors,\n\n  borders: [0, \"1px solid\", \"2px solid\"],\n\n  shadows: [\"0\", \"0px 4px 8px rgba(41, 49, 71, 0.1)\", \"0px 8px 16px rgba(41, 49, 71, 0.1)\"],\n\n  text: {\n    address: {\n      fontFamily: \"monospace\",\n      fontSize: 1\n    }\n  },\n\n  buttons: {\n    primary: {\n      ...button,\n\n      bg: \"primary\",\n      borderColor: \"primary\",\n\n      \":enabled:hover\": {\n        bg: \"secondary\",\n        borderColor: \"secondary\"\n      }\n    },\n\n    outline: {\n      ...button,\n      ...buttonOutline(\"primary\", \"secondary\")\n    },\n\n    cancel: {\n      ...button,\n      ...buttonOutline(\"text\", \"text\"),\n\n      opacity: 0.8\n    },\n\n    danger: {\n      ...button,\n\n      bg: \"danger\",\n      borderColor: \"danger\",\n\n      \":enabled:hover\": {\n        bg: \"dangerHover\",\n        borderColor: \"dangerHover\"\n      }\n    },\n\n    icon: {\n      ...iconButton,\n      color: \"primary\",\n      \":enabled:hover\": { color: \"accent\" }\n    },\n\n    dangerIcon: {\n      ...iconButton,\n      color: \"danger\",\n      \":enabled:hover\": { color: \"dangerHover\" }\n    },\n\n    titleIcon: {\n      ...iconButton,\n      color: \"text\",\n      \":enabled:hover\": { color: \"success\" }\n    },\n\n    close: {\n      cursor: \"pointer\"\n    }\n  },\n\n  cards: {\n    primary: {\n      ...card,\n\n      padding: 0,\n\n      borderColor: \"muted\",\n      bg: \"background\",\n\n      \"> h2\": {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n\n        height: \"56px\",\n\n        pl: 3,\n        py: 2,\n        pr: 2,\n\n        bg: \"muted\",\n\n        fontSize: cardHeadingFontSize\n      }\n    },\n\n    info: {\n      ...infoCard,\n\n      display: [\"none\", \"block\"]\n    },\n\n    infoPopup: {\n      ...infoCard,\n\n      position: \"fixed\",\n      top: 0,\n      right: 3,\n      left: 3,\n      mt: \"72px\",\n      height: \"80%\",\n      overflowY: \"scroll\"\n    },\n\n    tooltip: {\n      padding: 2,\n\n      border: 1,\n      borderColor: \"muted\",\n      borderRadius: \"4px\",\n      bg: \"background\",\n      boxShadow: 2,\n\n      fontSize: 1,\n      color: \"text\",\n      fontWeight: \"body\",\n      zIndex: 1\n    }\n  },\n\n  forms: {\n    label: {\n      ...formBase\n    },\n\n    radioLabel: {\n      mr: 3,\n      width: \"unset\",\n\n      svg: {\n        mr: 1\n      }\n    },\n\n    unit: {\n      ...formCell,\n\n      textAlign: \"center\",\n      bg: \"muted\"\n    },\n\n    input: {\n      ...formCell,\n\n      flex: 1\n    },\n\n    editor: {}\n  },\n\n  layout: {\n    header: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"stretch\",\n\n      position: [\"fixed\", \"relative\"],\n      top: 0,\n      zIndex: 1,\n\n      px: [2, \"12px\", \"12px\", 5],\n      py: [2, \"12px\", \"12px\"],\n\n      ...headerGradient,\n      boxShadow: [1, \"none\"]\n    },\n\n    footer: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n\n      mt: cardGapY,\n      px: 3,\n      minHeight: \"72px\",\n\n      bg: \"muted\"\n    },\n\n    main: {\n      width: \"100%\",\n      maxWidth: \"1280px\",\n      mx: \"auto\",\n      mt: [\"40px\", 0],\n      mb: [\"40px\", \"40px\"],\n      px: cardGapX\n    },\n\n    columns: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyItems: \"center\"\n    },\n\n    left: {\n      pr: cardGapX,\n      width: [\"100%\", \"58%\"]\n    },\n\n    right: {\n      width: [\"100%\", \"42%\"]\n    },\n\n    actions: {\n      justifyContent: \"flex-end\",\n      mt: 2,\n\n      button: {\n        ml: 2\n      }\n    },\n\n    disabledOverlay: {\n      ...overlay,\n\n      bg: \"rgba(255, 255, 255, 0.5)\"\n    },\n\n    modalOverlay: {\n      ...modalOverlay,\n\n      bg: \"rgba(0, 0, 0, 0.8)\",\n\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n\n    modal: {\n      padding: 3,\n      width: [\"100%\", \"40em\"]\n    },\n\n    infoOverlay: {\n      ...modalOverlay,\n\n      display: [\"block\", \"none\"],\n\n      bg: \"rgba(255, 255, 255, 0.8)\"\n    },\n\n    infoMessage: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      m: 3,\n      alignItems: \"center\",\n      minWidth: \"128px\"\n    },\n\n    sidenav: {\n      display: [\"flex\", \"none\"],\n      flexDirection: \"column\",\n      p: 0,\n      m: 0,\n      borderColor: \"muted\",\n      mr: \"25vw\",\n      height: \"100%\",\n      ...headerGradient\n    },\n\n    badge: {\n      border: 0,\n      borderRadius: 3,\n      p: 1,\n      px: 2,\n      backgroundColor: \"muted\",\n      color: \"slate\",\n      fontSize: 1,\n      fontWeight: \"body\"\n    }\n  },\n\n  styles: {\n    root: {\n      fontFamily: \"body\",\n      lineHeight: \"body\",\n      fontWeight: \"body\",\n\n      height: \"100%\",\n\n      \"#root\": {\n        height: \"100%\"\n      }\n    },\n\n    a: {\n      color: \"primary\",\n      \":hover\": { color: \"accent\" },\n      textDecoration: \"none\",\n      fontWeight: \"bold\"\n    },\n\n    progress: {\n      color: colors.success\n    }\n  },\n\n  links: {\n    nav: {\n      px: 2,\n      py: 1,\n      fontWeight: \"medium\",\n      fontSize: 2,\n      textTransform: \"uppercase\",\n      letterSpacing: \"2px\",\n      width: [\"100%\", \"auto\"],\n      mt: [3, \"auto\"]\n    }\n  }\n};\n\nexport default theme;\n","import { hexlify } from \"@ethersproject/bytes\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport { Decimal, Decimalish } from \"@liquity/lib-base\";\n\nexport class DisposableWalletProvider {\n  private readonly url: string;\n  private id: number = 0;\n\n  private readonly wallet: Wallet;\n  private readonly funderWallet: Wallet;\n\n  private readonly ethAmount: Decimal;\n  private haveFunded = false;\n\n  constructor(url: string, funderPrivateKey: string, ethAmount: Decimalish = 100) {\n    this.url = url;\n    this.wallet = Wallet.createRandom();\n    this.funderWallet = new Wallet(funderPrivateKey);\n    this.ethAmount = Decimal.from(ethAmount);\n  }\n\n  private findWallet(address: string) {\n    const wallet = [this.wallet, this.funderWallet].find(\n      wallet => wallet.address.toLowerCase() === address.toLowerCase()\n    );\n\n    // console.log(address, this.wallet, this.funderWallet);\n\n    if (!wallet) {\n      throw new Error(`Unknow account ${address}`);\n    }\n\n    return wallet;\n  }\n\n  private async fund() {\n    return this.send(\"eth_sendTransaction\", [\n      {\n        from: this.funderWallet.address,\n        to: this.wallet.address,\n        value: this.ethAmount.hex,\n        gas: hexlify(21000)\n      }\n    ]);\n\n    // TODO maybe wait for tx to be mined (not a problem on devchains though)\n  }\n\n  async send(method: string, params: any[]): Promise<any> {\n    if (!this.haveFunded) {\n      this.haveFunded = true;\n      await this.fund();\n    }\n\n    switch (method) {\n      case \"eth_accounts\":\n      case \"eth_requestAccounts\":\n        return [this.wallet.address];\n\n      case \"eth_sendTransaction\":\n        return this.send(\n          \"eth_sendRawTransaction\",\n          await Promise.all(\n            params.map(async ({ from, nonce, gas, ...rest }) => {\n              if (nonce === undefined) {\n                nonce = await this.send(\"eth_getTransactionCount\", [from]);\n              }\n\n              return this.findWallet(from).signTransaction({\n                from,\n                nonce,\n                ...(gas !== undefined ? { gasLimit: gas } : {}),\n                ...rest\n              });\n            })\n          )\n        );\n    }\n\n    //console.log({ method, params });\n\n    const response = await fetch(this.url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        method: method,\n        params: params,\n        id: this.id++,\n        jsonrpc: \"2.0\"\n      })\n    });\n\n    const json = await response.json();\n\n    //console.log(json);\n\n    if (json.error) {\n      const { message, ...rest } = json.error;\n      const error = new Error(`${message} ${JSON.stringify(rest)}`);\n      throw Object.assign(error, rest);\n    }\n\n    return json.result;\n  }\n\n  request({ method, params }: { method: string; params: any[] }) {\n    return this.send(method, params);\n  }\n}\n","export const COIN = \"MSD\";\nexport const GT = \"MADDY\";\nexport const LP = \"UNI LP\";\n// export const LP = \"ETH/LUSD LP\";\n","export const shortenAddress = (address: string) => address.substr(0, 6) + \"...\" + address.substr(-4);\n","export const PENDING_BONDS = {\n  term: \"Pending bonds\",\n  description: \"Your active bonds which are accruing bMSD and can be claimed or cancelled.\"\n};\n\nexport const BONDS = {\n  term: \"Bonds\",\n  description: \"List of your pending bonds and bonds you have claimed or cancelled in the past.\"\n};\n\nexport const NOT_BONDED_YET = {\n  term: \"You don't have any pending bonds.\",\n  description:\n    \"You can bond MSD to obtain Boosted MSD (bMSD) - a yield-amplified derivative of MSD.\"\n};\n\nexport const BONDS_NAVIGATION = {\n  term: \"Bonds\"\n};\n\nexport const BOND_CREATED = {\n  term: \"Bond created\",\n  description: \"The date you created your bond.\"\n};\n\nexport const AVAILABLE_BONDS = {\n  term: \"Available bonds\",\n  description: \"The types of bonds you can create.\"\n};\n\nexport const BOND_ASSET = {\n  term: \"Asset\",\n  description: \"The type of token accepted for bonding.\"\n};\n\nexport const BOND_NFT = {\n  term: \"NFT\",\n  description:\n    \"Bonds are represented as unique visual NFTs. The NFT image evolves when your bond is claimed or cancelled.\"\n};\n\nexport const BREAK_EVEN_TIME = {\n  term: \"Break-even time\",\n  description:\n    \"Estimated time at which the bond will have accrued enough bMSD to offset the MSD cost of the bond, under current market prices.\"\n};\n\nexport const OPTIMUM_REBOND_TIME = {\n  term: \"Rebond time\",\n  description:\n    \"Estimated optimum time to claim the bond, sell the bMSD for MSD, and then bond again, to maximize your return under current market prices.\"\n};\n\nexport const REBOND_RETURN = {\n  term: `${OPTIMUM_REBOND_TIME.term} return`,\n  description: `Estimated return from selling your accrued bMSD to MSD at the ${OPTIMUM_REBOND_TIME.term}, minus the initial MSD cost of the bond, under current market prices.`\n};\n\nexport const REBOND_TIME_ROI = {\n  term: `${OPTIMUM_REBOND_TIME.term} ROI`,\n  description: `Estimated ROI of selling your accrued bMSD to MSD at the ${OPTIMUM_REBOND_TIME.term}, minus the initial MSD cost of the bond, under current market prices.`\n};\n\nexport const OPTIMUM_APY = {\n  term: \"Max APR\",\n  description: `Estimated APY of continuously bonding and claiming at the ${OPTIMUM_REBOND_TIME.term}, under current market prices. Rebonding at other times could lead to a lower APY.`\n};\n\nexport const OPTIMUM_ACCRUAL = {\n  term: \"Rebond accrual\",\n  description: `The required amount of bMSD to accrue for the ${OPTIMUM_REBOND_TIME.term}, under current market prices.`\n};\n\nexport const BOND_DEPOSIT = {\n  term: \"Deposit\",\n  description:\n    \"The amount deposited into the bond, which can be fully recovered by cancelling the bond.\"\n};\n\nexport const ACCRUED_AMOUNT = {\n  term: \"Accruing\",\n  description: \"The amount of bMSD this bond has accrued so far.\"\n};\n\nexport const MARKET_VALUE = {\n  term: \"Accrued value\",\n  description:\n    \"Current market value of the accrued bMSD. The bMSD market price can fluctuate but will always be higher than the floor price under rational market conditions.\"\n};\n\nexport const BOND_AGE = {\n  term: \"Age\",\n  description: \"Time elapsed since the creation of the bond.\"\n};\n\nexport const BOND_RETURN = {\n  term: \"Claim-now return\",\n  description:\n    \"Expected MSD gained from claiming the bond now and selling the bMSD for MSD and deducting the initial cost of the bond, under current market prices.\"\n};\n\nexport const BOND_STATUS = {\n  term: \"Status\",\n  description: \"One of three values: Pending, Cancelled, or Claimed.\"\n};\n\nexport const PENDING_STATUS = {\n  term: \"Pending\",\n  description: \"An active bond which is accruding bMSD and can be cancelled or claimed.\"\n};\n\nexport const CANCELLED_STATUS = {\n  term: \"Cancelled\",\n  description: \"A bond which you cancelled.\"\n};\n\nexport const CLAIMED_STATUS = {\n  term: \"Claimed\",\n  description: \"A bond which you claimed.\"\n};\n\nexport const CANCEL_BOND = {\n  term: \"Cancel bond\",\n  description:\n    \"A bond can be cancelled at any time to recover the initially deposited MSD amount while forgoing the accrued bMSD.\"\n};\n\nexport const CLAIM_BOND = {\n  term: \"Claim bond\",\n  description:\n    \"A bond can be claimed at any time to forgo the initially deposited MSD amount and gain the accrued bMSD.\"\n};\n\nexport const BLUSD_MARKET_PRICE = {\n  term: \"Market price\",\n  description: \"The current price of bMSD according to the bMSD/MSD Curve pool.\"\n};\n\nexport const BLUSD_FAIR_PRICE = {\n  term: \"Fair price\",\n  description:\n    \"An estimation of the market price for bMSD based on the current yield amplification.\"\n};\n\nexport const TOTAL_BONDS_STATISTIC = {\n  term: \"Total bonds\",\n  description: \"The total number of bonds, historic and current.\"\n};\n\nexport const PENDING_BONDS_STATISTIC = {\n  term: \"Pending bonds\",\n  description:\n    \"The current number of active bonds in the system which are not yet claimed or cancelled.\"\n};\n\nexport const CANCELLED_BONDS_STATISTIC = {\n  term: \"Cancelled bonds\",\n  description: \"The total number of bonds which were cancelled.\"\n};\n\nexport const CLAIMED_BONDS_STATISTIC = {\n  term: \"Claimed bonds\",\n  description: \"The total number of bonds which were claimed.\"\n};\n\nexport const BLUSD_SUPPLY = {\n  term: \"Total supply\",\n  description: \"The total amount of bMSD in circulation. Not including pending bonds accrued bMSD.\"\n};\n\nexport const BLUSD_FLOOR_PRICE = {\n  term: \"Floor price\",\n  description:\n    \"The amount of MSD that an arbitrageur could redeem bMSD for thus creating a lower bound bMSD market price.\"\n};\n\nexport const TREASURY_TOTAL = {\n  term: \"Total\",\n  description:\n    \"The total amount of MSD held by the protocol within the three buckets (Pending, Reserve, Permanent).\"\n};\n\nexport const TREASURY_PENDING = {\n  term: \"Pending\",\n  description:\n    \"Contains the deposited MSD of the users while they bond. Pending bonds can be claimed or cancelled any time, moving the MSD into the Reserve and Permanent buckets, or back to the bonder, respectively.\"\n};\n\nexport const TREASURY_ACQUIRED = {\n  term: \"Reserve\",\n  description:\n    \"Contains a portion of the MSD obtained from claimed bonds and captures the yield from the entire Treasury. It acts as a reserve backing the bMSD supply. bMSD can be redeemed for a pro-rata share of the MSD held in the acquired bucket.\"\n};\n\nexport const TREASURY_PERMANENT = {\n  term: \"Permanent\",\n  description:\n    \"Contains a portion of the MSD obtained from claimed bonds which contributes a permanent price premium over MSD. The MSD in this bucket is not redeemable.\"\n};\n\nexport const ESTIMATES_ONLY_NOTICE = {\n  description: \"These metrics are estimations based on the current bMSD market price\"\n};\n","import { createContext, useContext } from \"react\";\nimport type {\n  BondView,\n  BondEvent,\n  Payload,\n  Treasury,\n  Bond,\n  Stats,\n  BondTransactionStatuses,\n  ProtocolInfo,\n  OptimisticBond,\n  BLusdAmmTokenIndex\n} from \"./transitions\";\nimport { PENDING_STATUS, CANCELLED_STATUS, CLAIMED_STATUS } from \"../lexicon\";\nimport { Decimal } from \"@liquity/lib-base\";\n\nexport type BondViewContextType = {\n  view: BondView;\n  dispatchEvent: (event: BondEvent, payload?: Payload) => void;\n  selectedBondId?: string;\n  protocolInfo?: ProtocolInfo;\n  stats?: Stats;\n  treasury?: Treasury;\n  bonds?: Bond[];\n  createBond: (lusdAmount: Decimal) => Promise<void>;\n  cancelBond: (bondId: string, minimumLusd: Decimal) => Promise<void>;\n  claimBond: (bondId: string) => Promise<void>;\n  selectedBond?: Bond;\n  optimisticBond?: OptimisticBond;\n  bLusdBalance?: Decimal;\n  lusdBalance?: Decimal;\n  lpTokenBalance?: Decimal;\n  lpTokenSupply?: Decimal;\n  bLusdAmmBLusdBalance?: Decimal;\n  bLusdAmmLusdBalance?: Decimal;\n  statuses: BondTransactionStatuses;\n  isInfiniteBondApproved: boolean;\n  isSynchronizing: boolean;\n  getLusdFromFaucet: () => Promise<void>;\n  simulatedProtocolInfo?: ProtocolInfo;\n  setSimulatedMarketPrice: (marketPrice: Decimal) => void;\n  resetSimulatedMarketPrice: () => void;\n  hasFoundContracts: boolean;\n  isBLusdApprovedWithBlusdAmm: boolean;\n  isLusdApprovedWithBlusdAmm: boolean;\n  inputToken: BLusdAmmTokenIndex;\n  isInputTokenApprovedWithBLusdAmm: boolean;\n  getExpectedSwapOutput: (inputToken: BLusdAmmTokenIndex, inputAmount: Decimal) => Promise<Decimal>;\n  getExpectedLpTokens: (bLusdAmount: Decimal, lusdAmount: Decimal) => Promise<Decimal>;\n  getExpectedWithdrawal: (\n    burnLp: Decimal,\n    output: BLusdAmmTokenIndex | \"both\"\n  ) => Promise<Map<BLusdAmmTokenIndex, Decimal>>;\n};\n\nexport const BondViewContext = createContext<BondViewContextType | null>(null);\n\nexport const useBondView = (): BondViewContextType => {\n  const context: BondViewContextType | null = useContext(BondViewContext);\n\n  if (context === null) {\n    throw new Error(\"You must add a <BondViewProvider> into the React tree\");\n  }\n\n  return context;\n};\n\nexport const statuses = {\n  PENDING: PENDING_STATUS.term,\n  CANCELLED: CANCELLED_STATUS.term,\n  CLAIMED: CLAIMED_STATUS.term,\n  NON_EXISTENT: \"NON_EXISTENT\"\n};\n","import React from \"react\";\nimport { Text, Flex, Box, Heading } from \"theme-ui\";\n\nimport { Decimal, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN, GT } from \"../strings\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { shortenAddress } from \"../utils/shortenAddress\";\n\nimport { Icon } from \"./Icon\";\nimport { useBondView } from \"./Bonds/context/BondViewContext\";\nimport { LUSD_OVERRIDE_ADDRESS } from \"@liquity/chicken-bonds/lusd/addresses\";\n\nconst select = ({ accountBalance, lusdBalance, lqtyBalance }: LiquityStoreState) => ({\n  accountBalance,\n  lusdBalance,\n  lqtyBalance\n});\n\nexport const UserAccount: React.FC = () => {\n  const { account } = useLiquity();\n  const { accountBalance, lusdBalance: realLusdBalance, lqtyBalance } = useLiquitySelector(select);\n  const { bLusdBalance, lusdBalance: customLusdBalance } = useBondView();\n\n  /***** TODO: REMOVE */\n  const lusdBalance = LUSD_OVERRIDE_ADDRESS === null ? realLusdBalance : customLusdBalance;\n\n  return (\n    <Box sx={{ display: [\"none\", \"flex\"] }}>\n      <Flex sx={{ alignItems: \"center\" }}>\n        <Icon name=\"user-circle\" size=\"lg\" />\n        <Flex sx={{ ml: 3, mr: 4, flexDirection: \"column\" }}>\n          <Heading sx={{ fontSize: 1 }}>Connected as</Heading>\n          <Text as=\"span\" sx={{ fontSize: 1 }}>\n            {shortenAddress(account)}\n          </Text>\n        </Flex>\n      </Flex>\n\n      <Flex sx={{ alignItems: \"center\" }}>\n        <Icon name=\"wallet\" size=\"lg\" />\n\n        {([\n          [\"ETH\", accountBalance],\n          [COIN, Decimal.from(lusdBalance || 0)],\n          [GT, Decimal.from(lqtyBalance)],\n          [\"bMSD\", Decimal.from(bLusdBalance || 0)]\n        ] as const).map(([currency, balance], i) => (\n          <Flex key={i} sx={{ ml: 3, flexDirection: \"column\" }}>\n            <Heading sx={{ fontSize: 1 }}>{currency}</Heading>\n            <Text sx={{ fontSize: 1 }}>{balance.prettify()}</Text>\n          </Flex>\n        ))}\n      </Flex>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport Tippy, { TippyProps } from \"@tippyjs/react\";\nimport { Icon } from \"./Icon\";\nimport { FontAwesomeIconProps } from \"@fortawesome/react-fontawesome\";\n\nexport type InfoIconProps = Pick<TippyProps, \"placement\"> &\n  Pick<FontAwesomeIconProps, \"size\"> & {\n    tooltip: React.ReactNode;\n  };\n\nexport const InfoIcon: React.FC<InfoIconProps> = ({ placement = \"right\", tooltip, size = \"1x\" }) => {\n  return (\n    <Tippy interactive={true} placement={placement} content={tooltip} maxWidth=\"268px\">\n      <span>\n        &nbsp;\n        <Icon name=\"question-circle\" size={size} />\n      </span>\n    </Tippy>\n  );\n};\n","import React from \"react\";\nimport { Flex, Card } from \"theme-ui\";\nimport { InfoIcon } from \"./InfoIcon\";\n\ntype StatisticProps = {\n  name: React.ReactNode;\n  tooltip?: React.ReactNode;\n};\n\nexport const Statistic: React.FC<StatisticProps> = ({ name, tooltip, children }) => {\n  return (\n    <Flex sx={{ borderBottom: 1, borderColor: \"rgba(0, 0, 0, 0.1)\" }}>\n      <Flex sx={{ alignItems: \"center\", justifyContent: \"flex-start\", flex: 1.2, fontWeight: 200 }}>\n        <Flex>{name}</Flex>\n        {tooltip && <InfoIcon size=\"xs\" tooltip={<Card variant=\"tooltip\">{tooltip}</Card>} />}\n      </Flex>\n      <Flex sx={{ justifyContent: \"flex-end\", flex: 0.8, alignItems: \"center\" }}>{children}</Flex>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Card, Heading, Link, Box, Text } from \"theme-ui\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { Decimal, Percent, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { COIN, GT } from \"../strings\";\nimport { Statistic } from \"./Statistic\";\n\nconst selectBalances = ({ accountBalance, lusdBalance, lqtyBalance }: LiquityStoreState) => ({\n  accountBalance,\n  lusdBalance,\n  lqtyBalance\n});\n\nconst Balances: React.FC = () => {\n  const { accountBalance, lusdBalance, lqtyBalance } = useLiquitySelector(selectBalances);\n\n  return (\n    <Box sx={{ mb: 3 }}>\n      <Heading>My Account Balances</Heading>\n      <Statistic name=\"ETH\"> {accountBalance.prettify(4)}</Statistic>\n      <Statistic name={COIN}> {lusdBalance.prettify()}</Statistic>\n      <Statistic name={GT}>{lqtyBalance.prettify()}</Statistic>\n    </Box>\n  );\n};\n\nconst GitHubCommit: React.FC<{ children?: string }> = ({ children }) =>\n  children?.match(/[0-9a-f]{40}/) ? (\n    <Link href={`https://github.com/liquity/dev/commit/${children}`}>{children.substr(0, 7)}</Link>\n  ) : (\n    <>unknown</>\n  );\n\ntype SystemStatsProps = {\n  variant?: string;\n  showBalances?: boolean;\n};\n\nconst select = ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  borrowingRate,\n  redemptionRate,\n  totalStakedLQTY,\n  frontend\n}: LiquityStoreState) => ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  borrowingRate,\n  redemptionRate,\n  totalStakedLQTY,\n  kickbackRate: frontend.status === \"registered\" ? frontend.kickbackRate : null\n});\n\nexport const SystemStats: React.FC<SystemStatsProps> = ({ variant = \"info\", showBalances }) => {\n  const {\n    liquity: {\n      connection: { version: contractsVersion, deploymentDate, frontendTag }\n    }\n  } = useLiquity();\n\n  const {\n    numberOfTroves,\n    price,\n    lusdInStabilityPool,\n    total,\n    borrowingRate,\n    totalStakedLQTY,\n    kickbackRate\n  } = useLiquitySelector(select);\n\n  const lusdInStabilityPoolPct =\n    total.debt.nonZero && new Percent(lusdInStabilityPool.div(total.debt));\n  const totalCollateralRatioPct = new Percent(total.collateralRatio(price));\n  const borrowingFeePct = new Percent(borrowingRate);\n  const kickbackRatePct = frontendTag === AddressZero ? \"100\" : kickbackRate?.mul(100).prettify();\n\n  return (\n    <Card {...{ variant }}>\n      {showBalances && <Balances />}\n\n      <Heading>Liquity statistics</Heading>\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        Protocol\n      </Heading>\n\n      <Statistic\n        name=\"Borrowing Fee\"\n        tooltip=\"The Borrowing Fee is a one-off fee charged as a percentage of the borrowed amount (in LUSD) and is part of a Trove's debt. The fee varies between 0.5% and 5% depending on MSD redemption volumes.\"\n      >\n        {borrowingFeePct.toString(2)}\n      </Statistic>\n\n      <Statistic\n        name=\"TVL\"\n        tooltip=\"The Total Value Locked (TVL) is the total value of Ether locked as collateral in the system, given in ETH and USD.\"\n      >\n        {total.collateral.shorten()} <Text sx={{ fontSize: 1 }}>&nbsp;ETH</Text>\n        <Text sx={{ fontSize: 1 }}>\n          &nbsp;(${Decimal.from(total.collateral.mul(price)).shorten()})\n        </Text>\n      </Statistic>\n      <Statistic name=\"Troves\" tooltip=\"The total number of active Troves in the system.\">\n        {Decimal.from(numberOfTroves).prettify(0)}\n      </Statistic>\n      <Statistic name=\"MSD supply\" tooltip=\"The total MSD minted by the Maddy Protocol.\">\n        {total.debt.shorten()}\n      </Statistic>\n      {lusdInStabilityPoolPct && (\n        <Statistic\n          name=\"MSD in Stability Pool\"\n          tooltip=\"The total MSD currently held in the Stability Pool, expressed as an amount and a fraction of the MSD supply.\n        \"\n        >\n          {lusdInStabilityPool.shorten()}\n          <Text sx={{ fontSize: 1 }}>&nbsp;({lusdInStabilityPoolPct.toString(1)})</Text>\n        </Statistic>\n      )}\n      <Statistic\n        name=\"Staked MADDY\"\n        tooltip=\"The total amount of MADDY that is staked for earning fee revenue.\"\n      >\n        {totalStakedLQTY.shorten()}\n      </Statistic>\n      <Statistic\n        name=\"Total Collateral Ratio\"\n        tooltip=\"The ratio of the Dollar value of the entire system collateral at the current ETH:USD price, to the entire system debt.\"\n      >\n        {totalCollateralRatioPct.prettify()}\n      </Statistic>\n      <Statistic\n        name=\"Recovery Mode\"\n        tooltip=\"Recovery Mode is activated when the Total Collateral Ratio (TCR) falls below 150%. When active, your Trove can be liquidated if its collateral ratio is below the TCR. The maximum collateral you can lose from liquidation is capped at 110% of your Trove's debt. Operations are also restricted that would negatively impact the TCR.\"\n      >\n        {total.collateralRatioIsBelowCritical(price) ? <Box color=\"danger\">Yes</Box> : \"No\"}\n      </Statistic>\n      {}\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        Frontend\n      </Heading>\n      {kickbackRatePct && (\n        <Statistic\n          name=\"Kickback Rate\"\n          tooltip=\"A rate between 0 and 100% set by the Frontend Operator that determines the fraction of MADDY that will be paid out as a kickback to the Stability Providers using the frontend.\"\n        >\n          {kickbackRatePct}%\n        </Statistic>\n      )}\n\n      <Box sx={{ mt: 3, opacity: 0.66 }}>\n        <Box sx={{ fontSize: 0 }}>\n          Contracts version: <GitHubCommit>{contractsVersion}</GitHubCommit>\n        </Box>\n        <Box sx={{ fontSize: 0 }}>Deployed: {deploymentDate.toLocaleString()}</Box>\n        <Box sx={{ fontSize: 0 }}>\n          Frontend version:{\" \"}\n          {process.env.NODE_ENV === \"development\" ? (\n            \"development\"\n          ) : (\n            <GitHubCommit>{process.env.REACT_APP_VERSION}</GitHubCommit>\n          )}\n        </Box>\n      </Box>\n    </Card>\n  );\n};\n","import React, { useState, useRef } from \"react\";\nimport { Container, Flex, Button } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { Icon } from \"./Icon\";\nimport { SystemStats } from \"./SystemStats\";\n\nconst select = ({ total, price }: LiquityStoreState) => ({ total, price });\n\nexport const SystemStatsPopup: React.FC = () => {\n  const { price, total } = useLiquitySelector(select);\n\n  const [systemStatsOpen, setSystemStatsOpen] = useState(false);\n  const systemStatsOverlayRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <>\n      <Button\n        onClick={() => setSystemStatsOpen(!systemStatsOpen)}\n        variant=\"icon\"\n        sx={{\n          position: \"relative\",\n          display: [\"block\", \"none\"]\n        }}\n      >\n        <Icon name=\"info-circle\" size=\"2x\" />\n\n        {total.collateralRatioIsBelowCritical(price) && (\n          <Flex\n            sx={{\n              position: \"absolute\",\n              right: 0,\n              top: 0,\n              width: \"100%\",\n              height: \"100%\",\n\n              alignItems: \"flex-start\",\n              justifyContent: \"flex-end\",\n              pt: \"2px\",\n\n              color: \"danger\"\n            }}\n          >\n            <Icon name=\"exclamation-circle\" size=\"xs\" />\n          </Flex>\n        )}\n      </Button>\n\n      {systemStatsOpen && (\n        <Container\n          variant=\"infoOverlay\"\n          ref={systemStatsOverlayRef}\n          onClick={e => {\n            if (e.target === systemStatsOverlayRef.current) {\n              setSystemStatsOpen(false);\n            }\n          }}\n        >\n          <SystemStats variant=\"infoPopup\" showBalances />\n        </Container>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Box, Image } from \"theme-ui\";\n\ntype LiquityLogoProps = React.ComponentProps<typeof Box> & {\n  height?: number | string;\n};\n\nexport const LiquityLogo: React.FC<LiquityLogoProps> = ({ height, ...boxProps }) => (\n  <Box sx={{ lineHeight: 0 }} {...boxProps}>\n    <Image src=\"./logo192.png\" sx={{ height }} />\n  </Box>\n);\n","import { NavLink as RouterLink, NavLinkProps as RouterLinkProps } from \"react-router-dom\";\nimport { NavLink as ThemeUINavLink, NavLinkProps as ThemeUILinkProps } from \"theme-ui\";\n\ntype CombinedProps = ThemeUILinkProps & RouterLinkProps<{}>;\n\nconst ExactLink: React.FC<CombinedProps> = props => {\n  return <RouterLink exact {...props} />;\n};\n\nexport const Link: React.FC<CombinedProps> = props => {\n  return <ThemeUINavLink {...props} as={ExactLink} />;\n};\n","import { Flex, Box, Badge, Text } from \"theme-ui\";\nimport { Link } from \"./Link\";\n\nconst TemporaryNewBadge = () => {\n  const isBeforeOctober2022 = new Date() < new Date(\"2022-10-01\");\n  if (!isBeforeOctober2022) return null;\n  return (\n    <Badge ml={1} sx={{ fontSize: \"12px\" }}>\n      New\n    </Badge>\n  );\n};\n\nexport const Nav: React.FC = () => {\n  return (\n    <Box as=\"nav\" sx={{ display: [\"none\", \"flex\"], alignItems: \"center\", flex: 1 }}>\n      <Flex>\n        <Link to=\"/\">Dashboard</Link>\n        <Link to=\"/bonds\">\n          <Flex sx={{ alignItems: \"center\" }}>\n            <Text>Bonds</Text>\n            <TemporaryNewBadge />\n          </Flex>\n        </Link>\n      </Flex>\n      <Flex sx={{ justifyContent: \"flex-end\", mr: 3, flex: 1 }}>\n        <Link sx={{ fontSize: 1 }} to=\"/risky-troves\">\n          Risky Troves\n        </Link>\n        <Link sx={{ fontSize: 1 }} to=\"/redemption\">\n          Redemption\n        </Link>\n      </Flex>\n    </Box>\n  );\n};\n","import React, { useState, useRef } from \"react\";\nimport { Box, Button, Container, Flex } from \"theme-ui\";\nimport { Icon } from \"./Icon\";\nimport { LiquityLogo } from \"./LiquityLogo\";\nimport { Link } from \"./Link\";\n\nconst logoHeight = \"32px\";\n\nexport const SideNav: React.FC = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const overlay = useRef<HTMLDivElement>(null);\n\n  if (!isVisible) {\n    return (\n      <Button sx={{ display: [\"flex\", \"none\"] }} variant=\"icon\" onClick={() => setIsVisible(true)}>\n        <Icon name=\"bars\" size=\"lg\" />\n      </Button>\n    );\n  }\n  return (\n    <Container\n      variant=\"infoOverlay\"\n      ref={overlay}\n      onClick={e => {\n        if (e.target === overlay.current) {\n          setIsVisible(false);\n        }\n      }}\n    >\n      <Flex variant=\"layout.sidenav\">\n        <Button\n          sx={{ position: \"fixed\", right: \"25vw\", m: 2 }}\n          variant=\"icon\"\n          onClick={() => setIsVisible(false)}\n        >\n          <Icon name=\"times\" size=\"2x\" />\n        </Button>\n        <LiquityLogo height={logoHeight} p={2} />\n        <Box as=\"nav\" sx={{ m: 3, mt: 1, p: 0 }} onClick={() => setIsVisible(false)}>\n          <Link to=\"/\">Dashboard</Link>\n          <Link to=\"/bonds\">Bonds</Link>\n          <Link to=\"/risky-troves\">Risky Troves</Link>\n          <Link to=\"/redemption\">Redemption</Link>\n        </Box>\n      </Flex>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { Container, Flex, Box } from \"theme-ui\";\nimport { AddressZero } from \"@ethersproject/constants\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { LiquityLogo } from \"./LiquityLogo\";\nimport { Nav } from \"./Nav\";\nimport { SideNav } from \"./SideNav\";\n\nconst logoHeight = \"32px\";\n\nconst select = ({ frontend }: LiquityStoreState) => ({\n  frontend\n});\n\nexport const Header: React.FC = ({ children }) => {\n  const {\n    config: { frontendTag }\n  } = useLiquity();\n  const { frontend } = useLiquitySelector(select);\n  const isFrontendRegistered = frontendTag === AddressZero || frontend.status === \"registered\";\n\n  return (\n    <Container variant=\"header\">\n      <Flex sx={{ alignItems: \"center\", flex: 1 }}>\n        <LiquityLogo height={logoHeight} />\n\n        <Box\n          sx={{\n            mx: [2, 3],\n            width: \"0px\",\n            height: \"100%\",\n            borderLeft: [\"none\", \"1px solid lightgrey\"]\n          }}\n        />\n        {isFrontendRegistered && (\n          <>\n            <SideNav />\n            <Nav />\n          </>\n        )}\n      </Flex>\n\n      {children}\n    </Container>\n  );\n};\n","import { Box, Flex, Text } from \"theme-ui\";\n\nimport { Icon } from \"./Icon\";\n\nexport const ActionDescription: React.FC = ({ children }) => (\n  <Box\n    sx={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n\n      mb: [2, 3],\n      p: 3,\n\n      border: 1,\n      borderRadius: \"8px\",\n      borderColor: \"accent\",\n      boxShadow: 2,\n      bg: \"rgba(46, 182, 234, 0.05)\"\n    }}\n  >\n    <Flex sx={{ alignItems: \"center\" }}>\n      <Icon name=\"info-circle\" size=\"lg\" />\n      <Text sx={{ ml: 2 }}>{children}</Text>\n    </Flex>\n  </Box>\n);\n\nexport const Amount: React.FC = ({ children }) => (\n  <Text sx={{ fontWeight: \"bold\", whiteSpace: \"nowrap\" }}>{children}</Text>\n);\n","import React, { useState } from \"react\";\nimport { Text, Flex, Label, Input, SxProp, Button, ThemeUICSSProperties } from \"theme-ui\";\n\nimport { Icon } from \"../Icon\";\n\ntype RowProps = SxProp & {\n  label: string;\n  labelId?: string;\n  labelFor?: string;\n  infoIcon?: React.ReactNode;\n};\n\nexport const Row: React.FC<RowProps> = ({ sx, label, labelId, labelFor, children, infoIcon }) => {\n  return (\n    <Flex sx={{ alignItems: \"stretch\", ...sx }}>\n      <Label\n        id={labelId}\n        htmlFor={labelFor}\n        sx={{\n          p: 0,\n          pl: 3,\n          pt: \"12px\",\n          position: \"absolute\",\n\n          fontSize: 1,\n          border: 1,\n          borderColor: \"transparent\"\n        }}\n      >\n        <Flex sx={{ alignItems: \"center\" }}>\n          {label}\n          {infoIcon && infoIcon}\n        </Flex>\n      </Label>\n      {children}\n    </Flex>\n  );\n};\n\ntype PendingAmountProps = {\n  value: string;\n};\n\nconst PendingAmount: React.FC<PendingAmountProps & SxProp> = ({ sx, value }) => (\n  <Text {...{ sx }}>\n    (\n    {value === \"++\" ? (\n      <Icon name=\"angle-double-up\" />\n    ) : value === \"--\" ? (\n      <Icon name=\"angle-double-down\" />\n    ) : value?.startsWith(\"+\") ? (\n      <>\n        <Icon name=\"angle-up\" /> {value.substr(1)}\n      </>\n    ) : value?.startsWith(\"-\") ? (\n      <>\n        <Icon name=\"angle-down\" /> {value.substr(1)}\n      </>\n    ) : (\n      value\n    )}\n    )\n  </Text>\n);\n\ntype StaticAmountsProps = {\n  inputId: string;\n  labelledBy?: string;\n  amount?: string;\n  unit?: string;\n  color?: string;\n  pendingAmount?: string;\n  pendingColor?: string;\n  onClick?: () => void;\n};\n\nexport const StaticAmounts: React.FC<StaticAmountsProps & SxProp> = ({\n  sx,\n  inputId,\n  labelledBy,\n  amount,\n  unit,\n  color,\n  pendingAmount,\n  pendingColor,\n  onClick,\n  children\n}) => {\n  return (\n    <Flex\n      id={inputId}\n      aria-labelledby={labelledBy}\n      {...{ onClick }}\n      sx={{\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n\n        ...(onClick ? { cursor: \"text\" } : {}),\n\n        ...staticStyle,\n        ...sx\n      }}\n    >\n      {amount && (\n        <Flex sx={{ alignItems: \"center\" }}>\n          <Text sx={{ color, fontWeight: \"medium\" }}>{amount}</Text>\n\n          {unit && (\n            <>\n              &nbsp;\n              <Text sx={{ fontWeight: \"light\", opacity: 0.8 }}>{unit}</Text>\n            </>\n          )}\n\n          {pendingAmount && (\n            <>\n              &nbsp;\n              <PendingAmount\n                sx={{ color: pendingColor, opacity: 0.8, fontSize: \"0.666em\" }}\n                value={pendingAmount}\n              />\n            </>\n          )}\n        </Flex>\n      )}\n\n      {children}\n    </Flex>\n  );\n};\n\nconst staticStyle: ThemeUICSSProperties = {\n  flexGrow: 1,\n\n  mb: 0,\n  pl: 3,\n  pr: \"11px\",\n  pb: 0,\n  pt: \"28px\",\n\n  fontSize: 3,\n\n  border: 1,\n  borderColor: \"transparent\"\n};\n\nconst editableStyle: ThemeUICSSProperties = {\n  flexGrow: 1,\n\n  mb: [2, 3],\n  pl: 3,\n  pr: \"11px\",\n  pb: 2,\n  pt: \"28px\",\n\n  fontSize: 4,\n\n  boxShadow: [1, 2],\n  border: 1,\n  borderColor: \"muted\"\n};\n\ntype StaticRowProps = RowProps & StaticAmountsProps;\n\nexport const StaticRow: React.FC<StaticRowProps> = ({\n  label,\n  labelId,\n  labelFor,\n  infoIcon,\n  ...props\n}) => (\n  <Row {...{ label, labelId, labelFor, infoIcon }} sx={{ mt: [-2, -3], pb: [2, 3] }}>\n    <StaticAmounts {...props} />\n  </Row>\n);\n\ntype DisabledEditableRowProps = Omit<StaticAmountsProps, \"labelledBy\" | \"onClick\"> & {\n  label: string;\n};\n\nexport const DisabledEditableRow: React.FC<DisabledEditableRowProps> = ({\n  inputId,\n  label,\n  unit,\n  amount,\n  color,\n  pendingAmount,\n  pendingColor,\n  children\n}) => (\n  <Row labelId={`${inputId}-label`} label={label}>\n    <StaticAmounts\n      sx={{ ...editableStyle, boxShadow: 0 }}\n      labelledBy={`${inputId}-label`}\n      {...{ inputId, amount, unit, color, pendingAmount, pendingColor }}\n    >\n      {children}\n    </StaticAmounts>\n  </Row>\n);\n\ntype EditableRowProps = DisabledEditableRowProps & {\n  editingState: [string | undefined, (editing: string | undefined) => void];\n  editedAmount: string;\n  setEditedAmount: (editedAmount: string) => void;\n  maxAmount?: string;\n  maxedOut?: boolean;\n};\n\nexport const EditableRow: React.FC<EditableRowProps> = ({\n  label,\n  inputId,\n  unit,\n  amount,\n  color,\n  pendingAmount,\n  pendingColor,\n  editingState,\n  editedAmount,\n  setEditedAmount,\n  maxAmount,\n  maxedOut\n}) => {\n  const [editing, setEditing] = editingState;\n  const [invalid, setInvalid] = useState(false);\n\n  return editing === inputId ? (\n    <Row {...{ label, labelFor: inputId, unit }}>\n      <Input\n        autoFocus\n        id={inputId}\n        type=\"number\"\n        step=\"any\"\n        defaultValue={editedAmount}\n        {...{ invalid }}\n        onChange={e => {\n          try {\n            setEditedAmount(e.target.value);\n            setInvalid(false);\n          } catch {\n            setInvalid(true);\n          }\n        }}\n        onBlur={() => {\n          setEditing(undefined);\n          setInvalid(false);\n        }}\n        variant=\"editor\"\n        sx={{\n          ...editableStyle,\n          fontWeight: \"medium\",\n          bg: invalid ? \"invalid\" : \"background\"\n        }}\n      />\n    </Row>\n  ) : (\n    <Row labelId={`${inputId}-label`} {...{ label, unit }}>\n      <StaticAmounts\n        sx={{\n          ...editableStyle,\n          bg: invalid ? \"invalid\" : \"background\"\n        }}\n        labelledBy={`${inputId}-label`}\n        onClick={() => setEditing(inputId)}\n        {...{ inputId, amount, unit, color, pendingAmount, pendingColor, invalid }}\n      >\n        {maxAmount && (\n          <Button\n            sx={{ fontSize: 1, p: 1, px: 3 }}\n            onClick={event => {\n              setEditedAmount(maxAmount);\n              event.stopPropagation();\n            }}\n            disabled={maxedOut}\n          >\n            max\n          </Button>\n        )}\n      </StaticAmounts>\n    </Row>\n  );\n};\n","import React from \"react\";\nimport { Container, Spinner } from \"theme-ui\";\n\nexport const LoadingOverlay: React.FC = () => (\n  <Container\n    variant=\"disabledOverlay\"\n    sx={{ p: \"14px\", display: \"flex\", justifyContent: \"flex-end\" }}\n  >\n    <Spinner size=\"28px\" sx={{ color: \"text\" }} />\n  </Container>\n);\n","import React from \"react\";\nimport { Flex, Box, Card } from \"theme-ui\";\n\nimport { CRITICAL_COLLATERAL_RATIO, Decimal, Difference, Percent } from \"@liquity/lib-base\";\n\nimport { Icon } from \"../Icon\";\n\nimport { StaticRow } from \"./Editor\";\nimport { InfoIcon } from \"../InfoIcon\";\nimport { ActionDescription } from \"../ActionDescription\";\n\ntype CollateralRatioProps = {\n  value?: Decimal;\n  change?: Difference;\n};\n\nexport const CollateralRatio: React.FC<CollateralRatioProps> = ({ value, change }) => {\n  const collateralRatioPct = new Percent(value ?? { toString: () => \"N/A\" });\n  const changePct = change && new Percent(change);\n  return (\n    <>\n      <Flex>\n        <Box sx={{ mt: [2, 0], ml: 3, mr: -2, fontSize: \"24px\" }}>\n          <Icon name=\"heartbeat\" />\n        </Box>\n\n        <StaticRow\n          label=\"Collateral ratio\"\n          inputId=\"trove-collateral-ratio\"\n          amount={collateralRatioPct.prettify()}\n          color={\n            value?.gt(CRITICAL_COLLATERAL_RATIO)\n              ? \"success\"\n              : value?.gt(1.2)\n              ? \"warning\"\n              : value?.lte(1.2)\n              ? \"danger\"\n              : \"muted\"\n          }\n          pendingAmount={\n            change?.positive?.absoluteValue?.gt(10)\n              ? \"++\"\n              : change?.negative?.absoluteValue?.gt(10)\n              ? \"--\"\n              : changePct?.nonZeroish(2)?.prettify()\n          }\n          pendingColor={change?.positive ? \"success\" : \"danger\"}\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ width: \"220px\" }}>\n                  The ratio between the dollar value of the collateral and the debt (in MSD) you are\n                  depositing. While the Minimum Collateral Ratio is 110% during normal operation, it\n                  is recommended to keep the Collateral Ratio always above 150% to avoid liquidation\n                  under Recovery Mode. A Collateral Ratio above 200% or 250% is recommended for\n                  additional safety.\n                </Card>\n              }\n            />\n          }\n        />\n      </Flex>\n      {value?.lt(1.5) && (\n        <ActionDescription>\n          Keeping your CR above 150% can help avoid liquidation under Recovery Mode.\n        </ActionDescription>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Heading, Box, Card } from \"theme-ui\";\n\nimport {\n  Percent,\n  Difference,\n  Decimalish,\n  Decimal,\n  Trove,\n  LiquityStoreState,\n  LUSD_LIQUIDATION_RESERVE\n} from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN } from \"../../strings\";\n\nimport { StaticRow } from \"./Editor\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { CollateralRatio } from \"./CollateralRatio\";\nimport { InfoIcon } from \"../InfoIcon\";\n\ntype TroveEditorProps = {\n  original: Trove;\n  edited: Trove;\n  fee: Decimal;\n  borrowingRate: Decimal;\n  changePending: boolean;\n  dispatch: (\n    action: { type: \"setCollateral\" | \"setDebt\"; newValue: Decimalish } | { type: \"revert\" }\n  ) => void;\n};\n\nconst select = ({ price }: LiquityStoreState) => ({ price });\n\nexport const TroveEditor: React.FC<TroveEditorProps> = ({\n  children,\n  original,\n  edited,\n  fee,\n  borrowingRate,\n  changePending\n}) => {\n  const { price } = useLiquitySelector(select);\n\n  const feePct = new Percent(borrowingRate);\n\n  const originalCollateralRatio = !original.isEmpty ? original.collateralRatio(price) : undefined;\n  const collateralRatio = !edited.isEmpty ? edited.collateralRatio(price) : undefined;\n  const collateralRatioChange = Difference.between(collateralRatio, originalCollateralRatio);\n\n  return (\n    <Card>\n      <Heading>Trove</Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <StaticRow\n          label=\"Collateral\"\n          inputId=\"trove-collateral\"\n          amount={edited.collateral.prettify(4)}\n          unit=\"ETH\"\n        />\n\n        <StaticRow label=\"Debt\" inputId=\"trove-debt\" amount={edited.debt.prettify()} unit={COIN} />\n\n        {original.isEmpty && (\n          <StaticRow\n            label=\"Liquidation Reserve\"\n            inputId=\"trove-liquidation-reserve\"\n            amount={`${LUSD_LIQUIDATION_RESERVE}`}\n            unit={COIN}\n            infoIcon={\n              <InfoIcon\n                tooltip={\n                  <Card variant=\"tooltip\" sx={{ width: \"200px\" }}>\n                    An amount set aside to cover the liquidator’s gas costs if your Trove needs to be\n                    liquidated. The amount increases your debt and is refunded if you close your\n                    Trove by fully paying off its net debt.\n                  </Card>\n                }\n              />\n            }\n          />\n        )}\n\n        <StaticRow\n          label=\"Borrowing Fee\"\n          inputId=\"trove-borrowing-fee\"\n          amount={fee.toString(2)}\n          pendingAmount={feePct.toString(2)}\n          unit={COIN}\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                  This amount is deducted from the borrowed amount as a one-time fee. There are no\n                  recurring fees for borrowing, which is thus interest-free.\n                </Card>\n              }\n            />\n          }\n        />\n\n        <CollateralRatio value={collateralRatio} change={collateralRatioChange} />\n\n        {children}\n      </Box>\n\n      {changePending && <LoadingOverlay />}\n    </Card>\n  );\n};\n","import { Button } from \"theme-ui\";\n\nimport { Decimal, TroveChange } from \"@liquity/lib-base\";\n\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../Transaction\";\n\ntype TroveActionProps = {\n  transactionId: string;\n  change: Exclude<TroveChange<Decimal>, { type: \"invalidCreation\" }>;\n  maxBorrowingRate: Decimal;\n  borrowingFeeDecayToleranceMinutes: number;\n};\n\nexport const TroveAction: React.FC<TroveActionProps> = ({\n  children,\n  transactionId,\n  change,\n  maxBorrowingRate,\n  borrowingFeeDecayToleranceMinutes\n}) => {\n  const { liquity } = useLiquity();\n\n  const [sendTransaction] = useTransactionFunction(\n    transactionId,\n    change.type === \"creation\"\n      ? liquity.send.openTrove.bind(liquity.send, change.params, {\n          maxBorrowingRate,\n          borrowingFeeDecayToleranceMinutes\n        })\n      : change.type === \"closure\"\n      ? liquity.send.closeTrove.bind(liquity.send)\n      : liquity.send.adjustTrove.bind(liquity.send, change.params, {\n          maxBorrowingRate,\n          borrowingFeeDecayToleranceMinutes\n        })\n  );\n\n  return <Button onClick={sendTransaction}>{children}</Button>;\n};\n","import { createContext, useContext } from \"react\";\nimport type { TroveView, TroveEvent } from \"./types\";\n\ntype TroveViewContextType = {\n  view: TroveView;\n  dispatchEvent: (event: TroveEvent) => void;\n};\n\nexport const TroveViewContext = createContext<TroveViewContextType | null>(null);\n\nexport const useTroveView = (): TroveViewContextType => {\n  const context: TroveViewContextType | null = useContext(TroveViewContext);\n\n  if (context === null) {\n    throw new Error(\"You must add a <TroveViewProvider> into the React tree\");\n  }\n\n  return context;\n};\n","import { Box, Flex, Text } from \"theme-ui\";\n\nimport { Icon } from \"./Icon\";\n\nexport const ErrorDescription: React.FC = ({ children }) => (\n  <Box\n    sx={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n\n      mb: [2, 3],\n      p: 3,\n\n      border: 1,\n      borderRadius: \"8px\",\n      borderColor: \"danger\",\n      boxShadow: 2,\n      bg: \"rgba(220, 44, 16, 0.05)\"\n    }}\n  >\n    <Flex sx={{ alignItems: \"center\" }}>\n      <Icon name=\"exclamation-triangle\" size=\"lg\" />\n      <Text sx={{ ml: 2 }}>{children}</Text>\n    </Flex>\n  </Box>\n);\n","import {\n  Decimal,\n  LUSD_MINIMUM_DEBT,\n  LUSD_MINIMUM_NET_DEBT,\n  Trove,\n  TroveAdjustmentParams,\n  TroveChange,\n  Percent,\n  MINIMUM_COLLATERAL_RATIO,\n  CRITICAL_COLLATERAL_RATIO,\n  LiquityStoreState,\n  TroveClosureParams,\n  TroveCreationParams\n} from \"@liquity/lib-base\";\n\nimport { COIN } from \"../../../strings\";\n\nimport { ActionDescription, Amount } from \"../../ActionDescription\";\nimport { ErrorDescription } from \"../../ErrorDescription\";\n\nconst mcrPercent = new Percent(MINIMUM_COLLATERAL_RATIO).toString(0);\nconst ccrPercent = new Percent(CRITICAL_COLLATERAL_RATIO).toString(0);\n\ntype TroveAdjustmentDescriptionParams = {\n  params: TroveAdjustmentParams<Decimal>;\n};\n\nconst TroveChangeDescription: React.FC<TroveAdjustmentDescriptionParams> = ({ params }) => (\n  <ActionDescription>\n    {params.depositCollateral && params.borrowLUSD ? (\n      <>\n        You will deposit <Amount>{params.depositCollateral.prettify()} ETH</Amount> and receive{\" \"}\n        <Amount>\n          {params.borrowLUSD.prettify()} {COIN}\n        </Amount>\n      </>\n    ) : params.repayLUSD && params.withdrawCollateral ? (\n      <>\n        You will pay{\" \"}\n        <Amount>\n          {params.repayLUSD.prettify()} {COIN}\n        </Amount>{\" \"}\n        and receive <Amount>{params.withdrawCollateral.prettify()} ETH</Amount>\n      </>\n    ) : params.depositCollateral && params.repayLUSD ? (\n      <>\n        You will deposit <Amount>{params.depositCollateral.prettify()} ETH</Amount> and pay{\" \"}\n        <Amount>\n          {params.repayLUSD.prettify()} {COIN}\n        </Amount>\n      </>\n    ) : params.borrowLUSD && params.withdrawCollateral ? (\n      <>\n        You will receive <Amount>{params.withdrawCollateral.prettify()} ETH</Amount> and{\" \"}\n        <Amount>\n          {params.borrowLUSD.prettify()} {COIN}\n        </Amount>\n      </>\n    ) : params.depositCollateral ? (\n      <>\n        You will deposit <Amount>{params.depositCollateral.prettify()} ETH</Amount>\n      </>\n    ) : params.withdrawCollateral ? (\n      <>\n        You will receive <Amount>{params.withdrawCollateral.prettify()} ETH</Amount>\n      </>\n    ) : params.borrowLUSD ? (\n      <>\n        You will receive{\" \"}\n        <Amount>\n          {params.borrowLUSD.prettify()} {COIN}\n        </Amount>\n      </>\n    ) : (\n      <>\n        You will pay{\" \"}\n        <Amount>\n          {params.repayLUSD.prettify()} {COIN}\n        </Amount>\n      </>\n    )}\n    .\n  </ActionDescription>\n);\n\nexport const selectForTroveChangeValidation = ({\n  price,\n  total,\n  accountBalance,\n  lusdBalance,\n  numberOfTroves\n}: LiquityStoreState) => ({ price, total, accountBalance, lusdBalance, numberOfTroves });\n\ntype TroveChangeValidationSelectedState = ReturnType<typeof selectForTroveChangeValidation>;\n\ninterface TroveChangeValidationContext extends TroveChangeValidationSelectedState {\n  originalTrove: Trove;\n  resultingTrove: Trove;\n  recoveryMode: boolean;\n  wouldTriggerRecoveryMode: boolean;\n}\n\nexport const validateTroveChange = (\n  originalTrove: Trove,\n  adjustedTrove: Trove,\n  borrowingRate: Decimal,\n  selectedState: TroveChangeValidationSelectedState\n): [\n  validChange: Exclude<TroveChange<Decimal>, { type: \"invalidCreation\" }> | undefined,\n  description: JSX.Element | undefined\n] => {\n  const { total, price } = selectedState;\n  const change = originalTrove.whatChanged(adjustedTrove, borrowingRate);\n\n  if (!change) {\n    return [undefined, undefined];\n  }\n\n  // Reapply change to get the exact state the Trove will end up in (which could be slightly\n  // different from `edited` due to imprecision).\n  const resultingTrove = originalTrove.apply(change, borrowingRate);\n  const recoveryMode = total.collateralRatioIsBelowCritical(price);\n  const wouldTriggerRecoveryMode = total\n    .subtract(originalTrove)\n    .add(resultingTrove)\n    .collateralRatioIsBelowCritical(price);\n\n  const context: TroveChangeValidationContext = {\n    ...selectedState,\n    originalTrove,\n    resultingTrove,\n    recoveryMode,\n    wouldTriggerRecoveryMode\n  };\n\n  if (change.type === \"invalidCreation\") {\n    // Trying to create a Trove with negative net debt\n    return [\n      undefined,\n      <ErrorDescription>\n        Total debt must be at least{\" \"}\n        <Amount>\n          {LUSD_MINIMUM_DEBT.toString()} {COIN}\n        </Amount>\n        .\n      </ErrorDescription>\n    ];\n  }\n\n  const errorDescription =\n    change.type === \"creation\"\n      ? validateTroveCreation(change.params, context)\n      : change.type === \"closure\"\n      ? validateTroveClosure(change.params, context)\n      : validateTroveAdjustment(change.params, context);\n\n  if (errorDescription) {\n    return [undefined, errorDescription];\n  }\n\n  return [change, <TroveChangeDescription params={change.params} />];\n};\n\nconst validateTroveCreation = (\n  { depositCollateral, borrowLUSD }: TroveCreationParams<Decimal>,\n  {\n    resultingTrove,\n    recoveryMode,\n    wouldTriggerRecoveryMode,\n    accountBalance,\n    price\n  }: TroveChangeValidationContext\n): JSX.Element | null => {\n  if (borrowLUSD.lt(LUSD_MINIMUM_NET_DEBT)) {\n    return (\n      <ErrorDescription>\n        You must borrow at least{\" \"}\n        <Amount>\n          {LUSD_MINIMUM_NET_DEBT.toString()} {COIN}\n        </Amount>\n        .\n      </ErrorDescription>\n    );\n  }\n\n  if (recoveryMode) {\n    if (!resultingTrove.isOpenableInRecoveryMode(price)) {\n      return (\n        <ErrorDescription>\n          You're not allowed to open a Trove with less than <Amount>{ccrPercent}</Amount> Collateral\n          Ratio during recovery mode. Please increase your Trove's Collateral Ratio.\n        </ErrorDescription>\n      );\n    }\n  } else {\n    if (resultingTrove.collateralRatioIsBelowMinimum(price)) {\n      return (\n        <ErrorDescription>\n          Collateral ratio must be at least <Amount>{mcrPercent}</Amount>.\n        </ErrorDescription>\n      );\n    }\n\n    if (wouldTriggerRecoveryMode) {\n      return (\n        <ErrorDescription>\n          You're not allowed to open a Trove that would cause the Total Collateral Ratio to fall\n          below <Amount>{ccrPercent}</Amount>. Please increase your Trove's Collateral Ratio.\n        </ErrorDescription>\n      );\n    }\n  }\n\n  if (depositCollateral.gt(accountBalance)) {\n    return (\n      <ErrorDescription>\n        The amount you're trying to deposit exceeds your balance by{\" \"}\n        <Amount>{depositCollateral.sub(accountBalance).prettify()} ETH</Amount>.\n      </ErrorDescription>\n    );\n  }\n\n  return null;\n};\n\nconst validateTroveAdjustment = (\n  { depositCollateral, withdrawCollateral, borrowLUSD, repayLUSD }: TroveAdjustmentParams<Decimal>,\n  {\n    originalTrove,\n    resultingTrove,\n    recoveryMode,\n    wouldTriggerRecoveryMode,\n    price,\n    accountBalance,\n    lusdBalance\n  }: TroveChangeValidationContext\n): JSX.Element | null => {\n  if (recoveryMode) {\n    if (withdrawCollateral) {\n      return (\n        <ErrorDescription>\n          You're not allowed to withdraw collateral during recovery mode.\n        </ErrorDescription>\n      );\n    }\n\n    if (borrowLUSD) {\n      if (resultingTrove.collateralRatioIsBelowCritical(price)) {\n        return (\n          <ErrorDescription>\n            Your collateral ratio must be at least <Amount>{ccrPercent}</Amount> to borrow during\n            recovery mode. Please improve your collateral ratio.\n          </ErrorDescription>\n        );\n      }\n\n      if (resultingTrove.collateralRatio(price).lt(originalTrove.collateralRatio(price))) {\n        return (\n          <ErrorDescription>\n            You're not allowed to decrease your collateral ratio during recovery mode.\n          </ErrorDescription>\n        );\n      }\n    }\n  } else {\n    if (resultingTrove.collateralRatioIsBelowMinimum(price)) {\n      return (\n        <ErrorDescription>\n          Collateral ratio must be at least <Amount>{mcrPercent}</Amount>.\n        </ErrorDescription>\n      );\n    }\n\n    if (wouldTriggerRecoveryMode) {\n      return (\n        <ErrorDescription>\n          The adjustment you're trying to make would cause the Total Collateral Ratio to fall below{\" \"}\n          <Amount>{ccrPercent}</Amount>. Please increase your Trove's Collateral Ratio.\n        </ErrorDescription>\n      );\n    }\n  }\n\n  if (repayLUSD) {\n    if (resultingTrove.debt.lt(LUSD_MINIMUM_DEBT)) {\n      return (\n        <ErrorDescription>\n          Total debt must be at least{\" \"}\n          <Amount>\n            {LUSD_MINIMUM_DEBT.toString()} {COIN}\n          </Amount>\n          .\n        </ErrorDescription>\n      );\n    }\n\n    if (repayLUSD.gt(lusdBalance)) {\n      return (\n        <ErrorDescription>\n          The amount you're trying to repay exceeds your balance by{\" \"}\n          <Amount>\n            {repayLUSD.sub(lusdBalance).prettify()} {COIN}\n          </Amount>\n          .\n        </ErrorDescription>\n      );\n    }\n  }\n\n  if (depositCollateral?.gt(accountBalance)) {\n    return (\n      <ErrorDescription>\n        The amount you're trying to deposit exceeds your balance by{\" \"}\n        <Amount>{depositCollateral.sub(accountBalance).prettify()} ETH</Amount>.\n      </ErrorDescription>\n    );\n  }\n\n  return null;\n};\n\nconst validateTroveClosure = (\n  { repayLUSD }: TroveClosureParams<Decimal>,\n  {\n    recoveryMode,\n    wouldTriggerRecoveryMode,\n    numberOfTroves,\n    lusdBalance\n  }: TroveChangeValidationContext\n): JSX.Element | null => {\n  if (numberOfTroves === 1) {\n    return (\n      <ErrorDescription>\n        You're not allowed to close your Trove when there are no other Troves in the system.\n      </ErrorDescription>\n    );\n  }\n\n  if (recoveryMode) {\n    return (\n      <ErrorDescription>\n        You're not allowed to close your Trove during recovery mode.\n      </ErrorDescription>\n    );\n  }\n\n  if (repayLUSD?.gt(lusdBalance)) {\n    return (\n      <ErrorDescription>\n        You need{\" \"}\n        <Amount>\n          {repayLUSD.sub(lusdBalance).prettify()} {COIN}\n        </Amount>{\" \"}\n        more to close your Trove.\n      </ErrorDescription>\n    );\n  }\n\n  if (wouldTriggerRecoveryMode) {\n    return (\n      <ErrorDescription>\n        You're not allowed to close a Trove if it would cause the Total Collateralization Ratio to\n        fall below <Amount>{ccrPercent}</Amount>. Please wait until the Total Collateral Ratio\n        increases.\n      </ErrorDescription>\n    );\n  }\n\n  return null;\n};\n","import { useCallback, useEffect } from \"react\";\nimport { Flex, Button } from \"theme-ui\";\n\nimport { LiquityStoreState, Decimal, Trove, Decimalish, LUSD_MINIMUM_DEBT } from \"@liquity/lib-base\";\n\nimport { LiquityStoreUpdate, useLiquityReducer, useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { ActionDescription } from \"../ActionDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\n\nimport { TroveEditor } from \"./TroveEditor\";\nimport { TroveAction } from \"./TroveAction\";\nimport { useTroveView } from \"./context/TroveViewContext\";\n\nimport {\n  selectForTroveChangeValidation,\n  validateTroveChange\n} from \"./validation/validateTroveChange\";\n\nconst init = ({ trove }: LiquityStoreState) => ({\n  original: trove,\n  edited: new Trove(trove.collateral, trove.debt),\n  changePending: false,\n  debtDirty: false,\n  addedMinimumDebt: false\n});\n\ntype TroveManagerState = ReturnType<typeof init>;\ntype TroveManagerAction =\n  | LiquityStoreUpdate\n  | { type: \"startChange\" | \"finishChange\" | \"revert\" | \"addMinimumDebt\" | \"removeMinimumDebt\" }\n  | { type: \"setCollateral\" | \"setDebt\"; newValue: Decimalish };\n\nconst reduceWith = (action: TroveManagerAction) => (state: TroveManagerState): TroveManagerState =>\n  reduce(state, action);\n\nconst addMinimumDebt = reduceWith({ type: \"addMinimumDebt\" });\nconst removeMinimumDebt = reduceWith({ type: \"removeMinimumDebt\" });\nconst finishChange = reduceWith({ type: \"finishChange\" });\nconst revert = reduceWith({ type: \"revert\" });\n\nconst reduce = (state: TroveManagerState, action: TroveManagerAction): TroveManagerState => {\n  // console.log(state);\n  // console.log(action);\n\n  const { original, edited, changePending, debtDirty, addedMinimumDebt } = state;\n\n  switch (action.type) {\n    case \"startChange\": {\n      console.log(\"starting change\");\n      return { ...state, changePending: true };\n    }\n\n    case \"finishChange\":\n      return { ...state, changePending: false };\n\n    case \"setCollateral\": {\n      const newCollateral = Decimal.from(action.newValue);\n\n      const newState = {\n        ...state,\n        edited: edited.setCollateral(newCollateral)\n      };\n\n      if (!debtDirty) {\n        if (edited.isEmpty && newCollateral.nonZero) {\n          return addMinimumDebt(newState);\n        }\n        if (addedMinimumDebt && newCollateral.isZero) {\n          return removeMinimumDebt(newState);\n        }\n      }\n\n      return newState;\n    }\n\n    case \"setDebt\":\n      return {\n        ...state,\n        edited: edited.setDebt(action.newValue),\n        debtDirty: true\n      };\n\n    case \"addMinimumDebt\":\n      return {\n        ...state,\n        edited: edited.setDebt(LUSD_MINIMUM_DEBT),\n        addedMinimumDebt: true\n      };\n\n    case \"removeMinimumDebt\":\n      return {\n        ...state,\n        edited: edited.setDebt(0),\n        addedMinimumDebt: false\n      };\n\n    case \"revert\":\n      return {\n        ...state,\n        edited: new Trove(original.collateral, original.debt),\n        debtDirty: false,\n        addedMinimumDebt: false\n      };\n\n    case \"updateStore\": {\n      const {\n        newState: { trove },\n        stateChange: { troveBeforeRedistribution: changeCommitted }\n      } = action;\n\n      const newState = {\n        ...state,\n        original: trove\n      };\n\n      if (changePending && changeCommitted) {\n        return finishChange(revert(newState));\n      }\n\n      const change = original.whatChanged(edited, 0);\n\n      if (\n        (change?.type === \"creation\" && !trove.isEmpty) ||\n        (change?.type === \"closure\" && trove.isEmpty)\n      ) {\n        return revert(newState);\n      }\n\n      return { ...newState, edited: trove.apply(change, 0) };\n    }\n  }\n};\n\nconst feeFrom = (original: Trove, edited: Trove, borrowingRate: Decimal): Decimal => {\n  const change = original.whatChanged(edited, borrowingRate);\n\n  if (change && change.type !== \"invalidCreation\" && change.params.borrowLUSD) {\n    return change.params.borrowLUSD.mul(borrowingRate);\n  } else {\n    return Decimal.ZERO;\n  }\n};\n\nconst select = (state: LiquityStoreState) => ({\n  fees: state.fees,\n  validationContext: selectForTroveChangeValidation(state)\n});\n\nconst transactionIdPrefix = \"trove-\";\nconst transactionIdMatcher = new RegExp(`^${transactionIdPrefix}`);\n\ntype TroveManagerProps = {\n  collateral?: Decimalish;\n  debt?: Decimalish;\n};\n\nexport const TroveManager: React.FC<TroveManagerProps> = ({ collateral, debt }) => {\n  const [{ original, edited, changePending }, dispatch] = useLiquityReducer(reduce, init);\n  const { fees, validationContext } = useLiquitySelector(select);\n\n  useEffect(() => {\n    if (collateral !== undefined) {\n      dispatch({ type: \"setCollateral\", newValue: collateral });\n    }\n    if (debt !== undefined) {\n      dispatch({ type: \"setDebt\", newValue: debt });\n    }\n  }, [collateral, debt, dispatch]);\n\n  const borrowingRate = fees.borrowingRate();\n  const maxBorrowingRate = borrowingRate.add(0.005); // TODO slippage tolerance\n\n  const [validChange, description] = validateTroveChange(\n    original,\n    edited,\n    borrowingRate,\n    validationContext\n  );\n\n  const { dispatchEvent } = useTroveView();\n\n  const handleCancel = useCallback(() => {\n    dispatchEvent(\"CANCEL_ADJUST_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  const openingNewTrove = original.isEmpty;\n\n  const myTransactionState = useMyTransactionState(transactionIdMatcher);\n\n  useEffect(() => {\n    if (\n      myTransactionState.type === \"waitingForApproval\" ||\n      myTransactionState.type === \"waitingForConfirmation\"\n    ) {\n      dispatch({ type: \"startChange\" });\n    } else if (myTransactionState.type === \"failed\" || myTransactionState.type === \"cancelled\") {\n      dispatch({ type: \"finishChange\" });\n    } else if (myTransactionState.type === \"confirmedOneShot\") {\n      if (myTransactionState.id === `${transactionIdPrefix}closure`) {\n        dispatchEvent(\"TROVE_CLOSED\");\n      } else {\n        dispatchEvent(\"TROVE_ADJUSTED\");\n      }\n    }\n  }, [myTransactionState, dispatch, dispatchEvent]);\n\n  return (\n    <TroveEditor\n      original={original}\n      edited={edited}\n      fee={feeFrom(original, edited, borrowingRate)}\n      borrowingRate={borrowingRate}\n      changePending={changePending}\n      dispatch={dispatch}\n    >\n      {description ??\n        (openingNewTrove ? (\n          <ActionDescription>\n            Start by entering the amount of ETH you'd like to deposit as collateral.\n          </ActionDescription>\n        ) : (\n          <ActionDescription>\n            Adjust your Trove by modifying its collateral, debt, or both.\n          </ActionDescription>\n        ))}\n\n      <Flex variant=\"layout.actions\">\n        <Button variant=\"cancel\" onClick={handleCancel}>\n          Cancel\n        </Button>\n\n        {validChange ? (\n          <TroveAction\n            transactionId={`${transactionIdPrefix}${validChange.type}`}\n            change={validChange}\n            maxBorrowingRate={maxBorrowingRate}\n            borrowingFeeDecayToleranceMinutes={60}\n          >\n            Confirm\n          </TroveAction>\n        ) : (\n          <Button disabled>Confirm</Button>\n        )}\n      </Flex>\n    </TroveEditor>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { DisabledEditableRow } from \"./Editor\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { Icon } from \"../Icon\";\nimport { COIN } from \"../../strings\";\nimport { CollateralRatio } from \"./CollateralRatio\";\n\nconst select = ({ trove, price }: LiquityStoreState) => ({ trove, price });\n\nexport const ReadOnlyTrove: React.FC = () => {\n  const { dispatchEvent } = useTroveView();\n  const handleAdjustTrove = useCallback(() => {\n    dispatchEvent(\"ADJUST_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n  const handleCloseTrove = useCallback(() => {\n    dispatchEvent(\"CLOSE_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  const { trove, price } = useLiquitySelector(select);\n\n  // console.log(\"READONLY TROVE\", trove.collateral.prettify(4));\n  return (\n    <Card>\n      <Heading>Trove</Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <Box>\n          <DisabledEditableRow\n            label=\"Collateral\"\n            inputId=\"trove-collateral\"\n            amount={trove.collateral.prettify(4)}\n            unit=\"ETH\"\n          />\n\n          <DisabledEditableRow\n            label=\"Debt\"\n            inputId=\"trove-debt\"\n            amount={trove.debt.prettify()}\n            unit={COIN}\n          />\n\n          <CollateralRatio value={trove.collateralRatio(price)} />\n        </Box>\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"outline\" onClick={handleCloseTrove}>\n            Close Trove\n          </Button>\n          <Button onClick={handleAdjustTrove}>\n            <Icon name=\"pen\" size=\"sm\" />\n            &nbsp;Adjust\n          </Button>\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n","import { Box, Flex, Heading, Text } from \"theme-ui\";\n\nimport { Icon } from \"./Icon\";\n\ntype InfoMessageProps = {\n  title: string;\n  icon?: React.ReactNode;\n};\n\nexport const InfoMessage: React.FC<InfoMessageProps> = ({ title, children, icon }) => (\n  <Box sx={{ mx: 1, mb: 3 }}>\n    <Flex sx={{ alignItems: \"center\", mb: \"10px\" }}>\n      <Box sx={{ mr: \"12px\", fontSize: \"20px\" }}>{icon || <Icon name=\"info-circle\" />}</Box>\n\n      <Heading as=\"h3\">{title}</Heading>\n    </Flex>\n\n    <Text sx={{ fontSize: 2 }}>{children}</Text>\n  </Box>\n);\n","import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { InfoMessage } from \"../InfoMessage\";\nimport { useTroveView } from \"./context/TroveViewContext\";\n\nexport const NoTrove: React.FC = props => {\n  const { dispatchEvent } = useTroveView();\n\n  const handleOpenTrove = useCallback(() => {\n    dispatchEvent(\"OPEN_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  return (\n    <Card>\n      <Heading>Trove</Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <InfoMessage title=\"You haven't borrowed any MSD yet.\">\n          You can borrow MSD by opening a Trove.\n        </InfoMessage>\n\n        <Flex variant=\"layout.actions\">\n          <Button onClick={handleOpenTrove}>Open Trove</Button>\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Decimal, TroveChange } from \"@liquity/lib-base\";\n\ntype ValidTroveChange = Exclude<TroveChange<Decimal>, { type: \"invalidCreation\" }>;\n\nconst paramsEq = (a?: Decimal, b?: Decimal) => (a && b ? a.eq(b) : !a && !b);\n\nconst equals = (a: ValidTroveChange, b: ValidTroveChange): boolean => {\n  return (\n    a.type === b.type &&\n    paramsEq(a.params.borrowLUSD, b.params.borrowLUSD) &&\n    paramsEq(a.params.repayLUSD, b.params.repayLUSD) &&\n    paramsEq(a.params.depositCollateral, b.params.depositCollateral) &&\n    paramsEq(a.params.withdrawCollateral, b.params.withdrawCollateral)\n  );\n};\n\nexport const useStableTroveChange = (\n  troveChange: ValidTroveChange | undefined\n): ValidTroveChange | undefined => {\n  const [stableTroveChange, setStableTroveChange] = useState(troveChange);\n\n  useEffect(() => {\n    if (!!stableTroveChange !== !!troveChange) {\n      setStableTroveChange(troveChange);\n    } else if (stableTroveChange && troveChange && !equals(stableTroveChange, troveChange)) {\n      setStableTroveChange(troveChange);\n    }\n  }, [stableTroveChange, troveChange]);\n\n  return stableTroveChange;\n};\n","import { Box, Flex, Text } from \"theme-ui\";\n\nimport { Icon } from \"./Icon\";\n\nexport const Warning: React.FC = ({ children }) => (\n  <Box\n    sx={{\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"space-around\",\n\n      mb: [2, 3],\n      p: 3,\n\n      border: 1,\n      borderRadius: \"8px\",\n      borderColor: \"warning\",\n      boxShadow: 2\n      // bg: \"rgba(46, 182, 234, 0.05)\"\n    }}\n  >\n    <Flex sx={{ alignItems: \"center\" }}>\n      <Icon name=\"exclamation-triangle\" size=\"lg\" />\n      <Text sx={{ ml: 2 }}>{children}</Text>\n    </Flex>\n  </Box>\n);\n","import React, { useEffect } from \"react\";\n\nimport { Decimal, TroveChange } from \"@liquity/lib-base\";\nimport { PopulatedEthersLiquityTransaction } from \"@liquity/lib-ethers\";\n\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { Warning } from \"../Warning\";\n\nexport type GasEstimationState =\n  | { type: \"idle\" | \"inProgress\" }\n  | { type: \"complete\"; populatedTx: PopulatedEthersLiquityTransaction };\n\ntype ExpensiveTroveChangeWarningParams = {\n  troveChange?: Exclude<TroveChange<Decimal>, { type: \"invalidCreation\" }>;\n  maxBorrowingRate: Decimal;\n  borrowingFeeDecayToleranceMinutes: number;\n  gasEstimationState: GasEstimationState;\n  setGasEstimationState: (newState: GasEstimationState) => void;\n};\n\nexport const ExpensiveTroveChangeWarning: React.FC<ExpensiveTroveChangeWarningParams> = ({\n  troveChange,\n  maxBorrowingRate,\n  borrowingFeeDecayToleranceMinutes,\n  gasEstimationState,\n  setGasEstimationState\n}) => {\n  const { liquity } = useLiquity();\n\n  useEffect(() => {\n    if (troveChange && troveChange.type !== \"closure\") {\n      setGasEstimationState({ type: \"inProgress\" });\n\n      let cancelled = false;\n\n      const timeoutId = setTimeout(async () => {\n        const populatedTx = await (troveChange.type === \"creation\"\n          ? liquity.populate.openTrove(troveChange.params, {\n              maxBorrowingRate,\n              borrowingFeeDecayToleranceMinutes\n            })\n          : liquity.populate.adjustTrove(troveChange.params, {\n              maxBorrowingRate,\n              borrowingFeeDecayToleranceMinutes\n            }));\n\n        if (!cancelled) {\n          setGasEstimationState({ type: \"complete\", populatedTx });\n          console.log(\n            \"Estimated TX cost: \" +\n              Decimal.from(`${populatedTx.rawPopulatedTransaction.gasLimit}`).prettify(0)\n          );\n        }\n      }, 333);\n\n      return () => {\n        clearTimeout(timeoutId);\n        cancelled = true;\n      };\n    } else {\n      setGasEstimationState({ type: \"idle\" });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [troveChange]);\n\n  if (\n    troveChange &&\n    gasEstimationState.type === \"complete\" &&\n    gasEstimationState.populatedTx.gasHeadroom !== undefined &&\n    gasEstimationState.populatedTx.gasHeadroom >= 200000\n  ) {\n    return troveChange.type === \"creation\" ? (\n      <Warning>\n        The cost of opening a Trove in this collateral ratio range is rather high. To lower it,\n        choose a slightly different collateral ratio.\n      </Warning>\n    ) : (\n      <Warning>\n        The cost of adjusting a Trove into this collateral ratio range is rather high. To lower it,\n        choose a slightly different collateral ratio.\n      </Warning>\n    );\n  }\n\n  return null;\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Flex, Button, Box, Card, Heading, Spinner } from \"theme-ui\";\nimport {\n  LiquityStoreState,\n  Decimal,\n  Trove,\n  LUSD_LIQUIDATION_RESERVE,\n  LUSD_MINIMUM_NET_DEBT,\n  Percent\n} from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useStableTroveChange } from \"../../hooks/useStableTroveChange\";\nimport { ActionDescription } from \"../ActionDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\nimport { TroveAction } from \"./TroveAction\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { COIN } from \"../../strings\";\nimport { Icon } from \"../Icon\";\nimport { InfoIcon } from \"../InfoIcon\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { CollateralRatio } from \"./CollateralRatio\";\nimport { EditableRow, StaticRow } from \"./Editor\";\nimport { ExpensiveTroveChangeWarning, GasEstimationState } from \"./ExpensiveTroveChangeWarning\";\nimport {\n  selectForTroveChangeValidation,\n  validateTroveChange\n} from \"./validation/validateTroveChange\";\n\nconst selector = (state: LiquityStoreState) => {\n  const { fees, price, accountBalance } = state;\n  return {\n    fees,\n    price,\n    accountBalance,\n    validationContext: selectForTroveChangeValidation(state)\n  };\n};\n\nconst EMPTY_TROVE = new Trove(Decimal.ZERO, Decimal.ZERO);\nconst TRANSACTION_ID = \"trove-creation\";\nconst GAS_ROOM_ETH = Decimal.from(0.1);\n\nexport const Opening: React.FC = () => {\n  const { dispatchEvent } = useTroveView();\n  const { fees, price, accountBalance, validationContext } = useLiquitySelector(selector);\n  const borrowingRate = fees.borrowingRate();\n  const editingState = useState<string>();\n\n  const [collateral, setCollateral] = useState<Decimal>(Decimal.ZERO);\n  const [borrowAmount, setBorrowAmount] = useState<Decimal>(Decimal.ZERO);\n\n  const maxBorrowingRate = borrowingRate.add(0.005);\n\n  const fee = borrowAmount.mul(borrowingRate);\n  const feePct = new Percent(borrowingRate);\n  const totalDebt = borrowAmount.add(LUSD_LIQUIDATION_RESERVE).add(fee);\n  const isDirty = !collateral.isZero || !borrowAmount.isZero;\n  const trove = isDirty ? new Trove(collateral, totalDebt) : EMPTY_TROVE;\n  const maxCollateral = accountBalance.gt(GAS_ROOM_ETH)\n    ? accountBalance.sub(GAS_ROOM_ETH)\n    : Decimal.ZERO;\n  const collateralMaxedOut = collateral.eq(maxCollateral);\n  const collateralRatio =\n    !collateral.isZero && !borrowAmount.isZero ? trove.collateralRatio(price) : undefined;\n\n  const [troveChange, description] = validateTroveChange(\n    EMPTY_TROVE,\n    trove,\n    borrowingRate,\n    validationContext\n  );\n\n  const stableTroveChange = useStableTroveChange(troveChange);\n  const [gasEstimationState, setGasEstimationState] = useState<GasEstimationState>({ type: \"idle\" });\n\n  const transactionState = useMyTransactionState(TRANSACTION_ID);\n  const isTransactionPending =\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\";\n\n  const handleCancelPressed = useCallback(() => {\n    dispatchEvent(\"CANCEL_ADJUST_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  const reset = useCallback(() => {\n    setCollateral(Decimal.ZERO);\n    setBorrowAmount(Decimal.ZERO);\n  }, []);\n\n  useEffect(() => {\n    if (!collateral.isZero && borrowAmount.isZero) {\n      setBorrowAmount(LUSD_MINIMUM_NET_DEBT);\n    }\n  }, [collateral, borrowAmount]);\n\n  return (\n    <Card>\n      <Heading>\n        Trove\n        {isDirty && !isTransactionPending && (\n          <Button variant=\"titleIcon\" sx={{ \":enabled:hover\": { color: \"danger\" } }} onClick={reset}>\n            <Icon name=\"history\" size=\"lg\" />\n          </Button>\n        )}\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <EditableRow\n          label=\"Collateral\"\n          inputId=\"trove-collateral\"\n          amount={collateral.prettify(4)}\n          maxAmount={maxCollateral.toString()}\n          maxedOut={collateralMaxedOut}\n          editingState={editingState}\n          unit=\"ETH\"\n          editedAmount={collateral.toString(4)}\n          setEditedAmount={(amount: string) => setCollateral(Decimal.from(amount))}\n        />\n\n        <EditableRow\n          label=\"Borrow\"\n          inputId=\"trove-borrow-amount\"\n          amount={borrowAmount.prettify()}\n          unit={COIN}\n          editingState={editingState}\n          editedAmount={borrowAmount.toString(2)}\n          setEditedAmount={(amount: string) => setBorrowAmount(Decimal.from(amount))}\n        />\n\n        <StaticRow\n          label=\"Liquidation Reserve\"\n          inputId=\"trove-liquidation-reserve\"\n          amount={`${LUSD_LIQUIDATION_RESERVE}`}\n          unit={COIN}\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ width: \"200px\" }}>\n                  An amount set aside to cover the liquidator’s gas costs if your Trove needs to be\n                  liquidated. The amount increases your debt and is refunded if you close your Trove\n                  by fully paying off its net debt.\n                </Card>\n              }\n            />\n          }\n        />\n\n        <StaticRow\n          label=\"Borrowing Fee\"\n          inputId=\"trove-borrowing-fee\"\n          amount={fee.prettify(2)}\n          pendingAmount={feePct.toString(2)}\n          unit={COIN}\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                  This amount is deducted from the borrowed amount as a one-time fee. There are no\n                  recurring fees for borrowing, which is thus interest-free.\n                </Card>\n              }\n            />\n          }\n        />\n\n        <StaticRow\n          label=\"Total debt\"\n          inputId=\"trove-total-debt\"\n          amount={totalDebt.prettify(2)}\n          unit={COIN}\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                  The total amount of MSD your Trove will hold.{\" \"}\n                  {isDirty && (\n                    <>\n                      You will need to repay {totalDebt.sub(LUSD_LIQUIDATION_RESERVE).prettify(2)}{\" \"}\n                      MSD to reclaim your collateral ({LUSD_LIQUIDATION_RESERVE.toString()} MSD\n                      Liquidation Reserve excluded).\n                    </>\n                  )}\n                </Card>\n              }\n            />\n          }\n        />\n\n        <CollateralRatio value={collateralRatio} />\n\n        {description ?? (\n          <ActionDescription>\n            Start by entering the amount of ETH you'd like to deposit as collateral.\n          </ActionDescription>\n        )}\n\n        <ExpensiveTroveChangeWarning\n          troveChange={stableTroveChange}\n          maxBorrowingRate={maxBorrowingRate}\n          borrowingFeeDecayToleranceMinutes={60}\n          gasEstimationState={gasEstimationState}\n          setGasEstimationState={setGasEstimationState}\n        />\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"cancel\" onClick={handleCancelPressed}>\n            Cancel\n          </Button>\n\n          {gasEstimationState.type === \"inProgress\" ? (\n            <Button disabled>\n              <Spinner size=\"24px\" sx={{ color: \"background\" }} />\n            </Button>\n          ) : stableTroveChange ? (\n            <TroveAction\n              transactionId={TRANSACTION_ID}\n              change={stableTroveChange}\n              maxBorrowingRate={maxBorrowingRate}\n              borrowingFeeDecayToleranceMinutes={60}\n            >\n              Confirm\n            </TroveAction>\n          ) : (\n            <Button disabled>Confirm</Button>\n          )}\n        </Flex>\n      </Box>\n      {isTransactionPending && <LoadingOverlay />}\n    </Card>\n  );\n};\n","import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport { Flex, Button, Box, Card, Heading } from \"theme-ui\";\nimport {\n  LiquityStoreState,\n  Decimal,\n  Trove,\n  LUSD_LIQUIDATION_RESERVE,\n  Percent,\n  Difference\n} from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useStableTroveChange } from \"../../hooks/useStableTroveChange\";\nimport { ActionDescription } from \"../ActionDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\nimport { TroveAction } from \"./TroveAction\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { COIN } from \"../../strings\";\nimport { Icon } from \"../Icon\";\nimport { InfoIcon } from \"../InfoIcon\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { CollateralRatio } from \"./CollateralRatio\";\nimport { EditableRow, StaticRow } from \"./Editor\";\nimport { ExpensiveTroveChangeWarning, GasEstimationState } from \"./ExpensiveTroveChangeWarning\";\nimport {\n  selectForTroveChangeValidation,\n  validateTroveChange\n} from \"./validation/validateTroveChange\";\n\nconst selector = (state: LiquityStoreState) => {\n  const { trove, fees, price, accountBalance } = state;\n  return {\n    trove,\n    fees,\n    price,\n    accountBalance,\n    validationContext: selectForTroveChangeValidation(state)\n  };\n};\n\nconst TRANSACTION_ID = \"trove-adjustment\";\nconst GAS_ROOM_ETH = Decimal.from(0.1);\n\nconst feeFrom = (original: Trove, edited: Trove, borrowingRate: Decimal): Decimal => {\n  const change = original.whatChanged(edited, borrowingRate);\n\n  if (change && change.type !== \"invalidCreation\" && change.params.borrowLUSD) {\n    return change.params.borrowLUSD.mul(borrowingRate);\n  } else {\n    return Decimal.ZERO;\n  }\n};\n\nconst applyUnsavedCollateralChanges = (unsavedChanges: Difference, trove: Trove) => {\n  if (unsavedChanges.absoluteValue) {\n    if (unsavedChanges.positive) {\n      return trove.collateral.add(unsavedChanges.absoluteValue);\n    }\n    if (unsavedChanges.negative) {\n      if (unsavedChanges.absoluteValue.lt(trove.collateral)) {\n        return trove.collateral.sub(unsavedChanges.absoluteValue);\n      }\n    }\n    return trove.collateral;\n  }\n  return trove.collateral;\n};\n\nconst applyUnsavedNetDebtChanges = (unsavedChanges: Difference, trove: Trove) => {\n  if (unsavedChanges.absoluteValue) {\n    if (unsavedChanges.positive) {\n      return trove.netDebt.add(unsavedChanges.absoluteValue);\n    }\n    if (unsavedChanges.negative) {\n      if (unsavedChanges.absoluteValue.lt(trove.netDebt)) {\n        return trove.netDebt.sub(unsavedChanges.absoluteValue);\n      }\n    }\n    return trove.netDebt;\n  }\n  return trove.netDebt;\n};\n\nexport const Adjusting: React.FC = () => {\n  const { dispatchEvent } = useTroveView();\n  const { trove, fees, price, accountBalance, validationContext } = useLiquitySelector(selector);\n  const editingState = useState<string>();\n  const previousTrove = useRef<Trove>(trove);\n  const [collateral, setCollateral] = useState<Decimal>(trove.collateral);\n  const [netDebt, setNetDebt] = useState<Decimal>(trove.netDebt);\n\n  const transactionState = useMyTransactionState(TRANSACTION_ID);\n  const borrowingRate = fees.borrowingRate();\n\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"TROVE_ADJUSTED\");\n    }\n  }, [transactionState.type, dispatchEvent]);\n\n  useEffect(() => {\n    if (!previousTrove.current.collateral.eq(trove.collateral)) {\n      const unsavedChanges = Difference.between(collateral, previousTrove.current.collateral);\n      const nextCollateral = applyUnsavedCollateralChanges(unsavedChanges, trove);\n      setCollateral(nextCollateral);\n    }\n    if (!previousTrove.current.netDebt.eq(trove.netDebt)) {\n      const unsavedChanges = Difference.between(netDebt, previousTrove.current.netDebt);\n      const nextNetDebt = applyUnsavedNetDebtChanges(unsavedChanges, trove);\n      setNetDebt(nextNetDebt);\n    }\n    previousTrove.current = trove;\n  }, [trove, collateral, netDebt]);\n\n  const handleCancelPressed = useCallback(() => {\n    dispatchEvent(\"CANCEL_ADJUST_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  const reset = useCallback(() => {\n    setCollateral(trove.collateral);\n    setNetDebt(trove.netDebt);\n  }, [trove.collateral, trove.netDebt]);\n\n  const isDirty = !collateral.eq(trove.collateral) || !netDebt.eq(trove.netDebt);\n  const isDebtIncrease = netDebt.gt(trove.netDebt);\n  const debtIncreaseAmount = isDebtIncrease ? netDebt.sub(trove.netDebt) : Decimal.ZERO;\n\n  const fee = isDebtIncrease\n    ? feeFrom(trove, new Trove(trove.collateral, trove.debt.add(debtIncreaseAmount)), borrowingRate)\n    : Decimal.ZERO;\n  const totalDebt = netDebt.add(LUSD_LIQUIDATION_RESERVE).add(fee);\n  const maxBorrowingRate = borrowingRate.add(0.005);\n  const updatedTrove = isDirty ? new Trove(collateral, totalDebt) : trove;\n  const feePct = new Percent(borrowingRate);\n  const availableEth = accountBalance.gt(GAS_ROOM_ETH)\n    ? accountBalance.sub(GAS_ROOM_ETH)\n    : Decimal.ZERO;\n  const maxCollateral = trove.collateral.add(availableEth);\n  const collateralMaxedOut = collateral.eq(maxCollateral);\n  const collateralRatio =\n    !collateral.isZero && !netDebt.isZero ? updatedTrove.collateralRatio(price) : undefined;\n  const collateralRatioChange = Difference.between(collateralRatio, trove.collateralRatio(price));\n\n  const [troveChange, description] = validateTroveChange(\n    trove,\n    updatedTrove,\n    borrowingRate,\n    validationContext\n  );\n\n  const stableTroveChange = useStableTroveChange(troveChange);\n  const [gasEstimationState, setGasEstimationState] = useState<GasEstimationState>({ type: \"idle\" });\n\n  const isTransactionPending =\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\";\n\n  if (trove.status !== \"open\") {\n    return null;\n  }\n\n  return (\n    <Card>\n      <Heading>\n        Trove\n        {isDirty && !isTransactionPending && (\n          <Button variant=\"titleIcon\" sx={{ \":enabled:hover\": { color: \"danger\" } }} onClick={reset}>\n            <Icon name=\"history\" size=\"lg\" />\n          </Button>\n        )}\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <EditableRow\n          label=\"Collateral\"\n          inputId=\"trove-collateral\"\n          amount={collateral.prettify(4)}\n          maxAmount={maxCollateral.toString()}\n          maxedOut={collateralMaxedOut}\n          editingState={editingState}\n          unit=\"ETH\"\n          editedAmount={collateral.toString(4)}\n          setEditedAmount={(amount: string) => setCollateral(Decimal.from(amount))}\n        />\n\n        <EditableRow\n          label=\"Net debt\"\n          inputId=\"trove-net-debt-amount\"\n          amount={netDebt.prettify()}\n          unit={COIN}\n          editingState={editingState}\n          editedAmount={netDebt.toString(2)}\n          setEditedAmount={(amount: string) => setNetDebt(Decimal.from(amount))}\n        />\n\n        <StaticRow\n          label=\"Liquidation Reserve\"\n          inputId=\"trove-liquidation-reserve\"\n          amount={`${LUSD_LIQUIDATION_RESERVE}`}\n          unit={COIN}\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ width: \"200px\" }}>\n                  An amount set aside to cover the liquidator’s gas costs if your Trove needs to be\n                  liquidated. The amount increases your debt and is refunded if you close your Trove\n                  by fully paying off its net debt.\n                </Card>\n              }\n            />\n          }\n        />\n\n        <StaticRow\n          label=\"Borrowing Fee\"\n          inputId=\"trove-borrowing-fee\"\n          amount={fee.prettify(2)}\n          pendingAmount={feePct.toString(2)}\n          unit={COIN}\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                  This amount is deducted from the borrowed amount as a one-time fee. There are no\n                  recurring fees for borrowing, which is thus interest-free.\n                </Card>\n              }\n            />\n          }\n        />\n\n        <StaticRow\n          label=\"Total debt\"\n          inputId=\"trove-total-debt\"\n          amount={totalDebt.prettify(2)}\n          unit={COIN}\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                  The total amount of MSD your Trove will hold.{\" \"}\n                  {isDirty && (\n                    <>\n                      You will need to repay {totalDebt.sub(LUSD_LIQUIDATION_RESERVE).prettify(2)}{\" \"}\n                      MSD to reclaim your collateral ({LUSD_LIQUIDATION_RESERVE.toString()} MSD\n                      Liquidation Reserve excluded).\n                    </>\n                  )}\n                </Card>\n              }\n            />\n          }\n        />\n\n        <CollateralRatio value={collateralRatio} change={collateralRatioChange} />\n\n        {description ?? (\n          <ActionDescription>\n            Adjust your Trove by modifying its collateral, debt, or both.\n          </ActionDescription>\n        )}\n\n        <ExpensiveTroveChangeWarning\n          troveChange={stableTroveChange}\n          maxBorrowingRate={maxBorrowingRate}\n          borrowingFeeDecayToleranceMinutes={60}\n          gasEstimationState={gasEstimationState}\n          setGasEstimationState={setGasEstimationState}\n        />\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"cancel\" onClick={handleCancelPressed}>\n            Cancel\n          </Button>\n\n          {stableTroveChange ? (\n            <TroveAction\n              transactionId={TRANSACTION_ID}\n              change={stableTroveChange}\n              maxBorrowingRate={maxBorrowingRate}\n              borrowingFeeDecayToleranceMinutes={60}\n            >\n              Confirm\n            </TroveAction>\n          ) : (\n            <Button disabled>Confirm</Button>\n          )}\n        </Flex>\n      </Box>\n      {isTransactionPending && <LoadingOverlay />}\n    </Card>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { Button, Flex, Spinner } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Transaction, useMyTransactionState } from \"./Transaction\";\nimport { useTroveView } from \"./Trove/context/TroveViewContext\";\n\nconst select = ({ collateralSurplusBalance }: LiquityStoreState) => ({\n  collateralSurplusBalance\n});\n\nexport const CollateralSurplusAction: React.FC = () => {\n  const { collateralSurplusBalance } = useLiquitySelector(select);\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n\n  const myTransactionId = \"claim-coll-surplus\";\n  const myTransactionState = useMyTransactionState(myTransactionId);\n\n  const { dispatchEvent } = useTroveView();\n\n  useEffect(() => {\n    if (myTransactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"TROVE_SURPLUS_COLLATERAL_CLAIMED\");\n    }\n  }, [myTransactionState.type, dispatchEvent]);\n\n  return myTransactionState.type === \"waitingForApproval\" ? (\n    <Flex variant=\"layout.actions\">\n      <Button disabled sx={{ mx: 2 }}>\n        <Spinner sx={{ mr: 2, color: \"white\" }} size=\"20px\" />\n        Waiting for your approval\n      </Button>\n    </Flex>\n  ) : myTransactionState.type !== \"waitingForConfirmation\" &&\n    myTransactionState.type !== \"confirmed\" ? (\n    <Flex variant=\"layout.actions\">\n      <Transaction\n        id={myTransactionId}\n        send={liquity.claimCollateralSurplus.bind(liquity, undefined)}\n      >\n        <Button sx={{ mx: 2 }}>Claim {collateralSurplusBalance.prettify()} ETH</Button>\n      </Transaction>\n    </Flex>\n  ) : null;\n};\n","import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Button, Flex } from \"theme-ui\";\nimport { CollateralSurplusAction } from \"../CollateralSurplusAction\";\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { InfoMessage } from \"../InfoMessage\";\n\nconst select = ({ collateralSurplusBalance }: LiquityStoreState) => ({\n  hasSurplusCollateral: !collateralSurplusBalance.isZero\n});\n\nexport const RedeemedTrove: React.FC = () => {\n  const { hasSurplusCollateral } = useLiquitySelector(select);\n  const { dispatchEvent } = useTroveView();\n\n  const handleOpenTrove = useCallback(() => {\n    dispatchEvent(\"OPEN_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  return (\n    <Card>\n      <Heading>Trove</Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <InfoMessage title=\"Your Trove has been redeemed.\">\n          {hasSurplusCollateral\n            ? \"Please reclaim your remaining collateral before opening a new Trove.\"\n            : \"You can borrow MSD by opening a Trove.\"}\n        </InfoMessage>\n\n        <Flex variant=\"layout.actions\">\n          {hasSurplusCollateral && <CollateralSurplusAction />}\n          {!hasSurplusCollateral && <Button onClick={handleOpenTrove}>Open Trove</Button>}\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Button, Flex } from \"theme-ui\";\nimport { CollateralSurplusAction } from \"../CollateralSurplusAction\";\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { InfoMessage } from \"../InfoMessage\";\n\nconst select = ({ collateralSurplusBalance }: LiquityStoreState) => ({\n  hasSurplusCollateral: !collateralSurplusBalance.isZero\n});\n\nexport const LiquidatedTrove: React.FC = () => {\n  const { hasSurplusCollateral } = useLiquitySelector(select);\n  const { dispatchEvent } = useTroveView();\n\n  const handleOpenTrove = useCallback(() => {\n    dispatchEvent(\"OPEN_TROVE_PRESSED\");\n  }, [dispatchEvent]);\n\n  return (\n    <Card>\n      <Heading>Trove</Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <InfoMessage title=\"Your Trove has been liquidated.\">\n          {hasSurplusCollateral\n            ? \"Please reclaim your remaining collateral before opening a new Trove.\"\n            : \"You can borrow MSD by opening a Trove.\"}\n        </InfoMessage>\n\n        <Flex variant=\"layout.actions\">\n          {hasSurplusCollateral && <CollateralSurplusAction />}\n          {!hasSurplusCollateral && <Button onClick={handleOpenTrove}>Open Trove</Button>}\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { TroveManager } from \"./TroveManager\";\nimport { ReadOnlyTrove } from \"./ReadOnlyTrove\";\nimport { NoTrove } from \"./NoTrove\";\nimport { Opening } from \"./Opening\";\nimport { Adjusting } from \"./Adjusting\";\nimport { RedeemedTrove } from \"./RedeemedTrove\";\nimport { useTroveView } from \"./context/TroveViewContext\";\nimport { LiquidatedTrove } from \"./LiquidatedTrove\";\nimport { Decimal } from \"@liquity/lib-base\";\n\nexport const Trove: React.FC = props => {\n  const { view } = useTroveView();\n\n  switch (view) {\n    // loading state not needed, as main app has a loading spinner that blocks render until the liquity backend data is available\n    case \"ACTIVE\": {\n      return <ReadOnlyTrove {...props} />;\n    }\n    case \"ADJUSTING\": {\n      return <Adjusting {...props} />;\n    }\n    case \"CLOSING\": {\n      return <TroveManager {...props} collateral={Decimal.ZERO} debt={Decimal.ZERO} />;\n    }\n    case \"OPENING\": {\n      return <Opening {...props} />;\n    }\n    case \"LIQUIDATED\": {\n      return <LiquidatedTrove {...props} />;\n    }\n    case \"REDEEMED\": {\n      return <RedeemedTrove {...props} />;\n    }\n    case \"NONE\": {\n      return <NoTrove {...props} />;\n    }\n  }\n};\n","import React, { useState } from \"react\";\nimport { Heading, Box, Card, Button } from \"theme-ui\";\n\nimport {\n  Decimal,\n  Decimalish,\n  StabilityDeposit,\n  LiquityStoreState,\n  Difference\n} from \"@liquity/lib-base\";\n\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN, GT } from \"../../strings\";\n\nimport { Icon } from \"../Icon\";\nimport { EditableRow, StaticRow } from \"../Trove/Editor\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { InfoIcon } from \"../InfoIcon\";\n\nconst select = ({ lusdBalance, lusdInStabilityPool }: LiquityStoreState) => ({\n  lusdBalance,\n  lusdInStabilityPool\n});\n\ntype StabilityDepositEditorProps = {\n  originalDeposit: StabilityDeposit;\n  editedLUSD: Decimal;\n  changePending: boolean;\n  dispatch: (action: { type: \"setDeposit\"; newValue: Decimalish } | { type: \"revert\" }) => void;\n};\n\nexport const StabilityDepositEditor: React.FC<StabilityDepositEditorProps> = ({\n  originalDeposit,\n  editedLUSD,\n  changePending,\n  dispatch,\n  children\n}) => {\n  const { lusdBalance, lusdInStabilityPool } = useLiquitySelector(select);\n  const editingState = useState<string>();\n\n  const edited = !editedLUSD.eq(originalDeposit.currentLUSD);\n\n  const maxAmount = originalDeposit.currentLUSD.add(lusdBalance);\n  const maxedOut = editedLUSD.eq(maxAmount);\n\n  const lusdInStabilityPoolAfterChange = lusdInStabilityPool\n    .sub(originalDeposit.currentLUSD)\n    .add(editedLUSD);\n\n  const originalPoolShare = originalDeposit.currentLUSD.mulDiv(100, lusdInStabilityPool);\n  const newPoolShare = editedLUSD.mulDiv(100, lusdInStabilityPoolAfterChange);\n  const poolShareChange =\n    originalDeposit.currentLUSD.nonZero &&\n    Difference.between(newPoolShare, originalPoolShare).nonZero;\n\n  return (\n    <Card>\n      <Heading>\n        Stability Pool\n        {edited && !changePending && (\n          <Button\n            variant=\"titleIcon\"\n            sx={{ \":enabled:hover\": { color: \"danger\" } }}\n            onClick={() => dispatch({ type: \"revert\" })}\n          >\n            <Icon name=\"history\" size=\"lg\" />\n          </Button>\n        )}\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <EditableRow\n          label=\"Deposit\"\n          inputId=\"deposit-lqty\"\n          amount={editedLUSD.prettify()}\n          maxAmount={maxAmount.toString()}\n          maxedOut={maxedOut}\n          unit={COIN}\n          {...{ editingState }}\n          editedAmount={editedLUSD.toString(2)}\n          setEditedAmount={newValue => dispatch({ type: \"setDeposit\", newValue })}\n        />\n\n        {newPoolShare.infinite ? (\n          <StaticRow label=\"Pool share\" inputId=\"deposit-share\" amount=\"N/A\" />\n        ) : (\n          <StaticRow\n            label=\"Pool share\"\n            inputId=\"deposit-share\"\n            amount={newPoolShare.prettify(4)}\n            pendingAmount={poolShareChange?.prettify(4).concat(\"%\")}\n            pendingColor={poolShareChange?.positive ? \"success\" : \"danger\"}\n            unit=\"%\"\n          />\n        )}\n\n        {!originalDeposit.isEmpty && (\n          <>\n            <StaticRow\n              label=\"Liquidation gain\"\n              inputId=\"deposit-gain\"\n              amount={originalDeposit.collateralGain.prettify(4)}\n              color={originalDeposit.collateralGain.nonZero && \"success\"}\n              unit=\"ETH\"\n            />\n\n            <StaticRow\n              label=\"Reward\"\n              inputId=\"deposit-reward\"\n              amount={originalDeposit.lqtyReward.prettify()}\n              color={originalDeposit.lqtyReward.nonZero && \"success\"}\n              unit={GT}\n              infoIcon={\n                <InfoIcon\n                  tooltip={\n                    <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                      Although the MADDY rewards accrue every minute, the value on the UI only updates\n                      when a user transacts with the Stability Pool. Therefore you may receive more\n                      rewards than is displayed when you claim or adjust your deposit.\n                    </Card>\n                  }\n                />\n              }\n            />\n          </>\n        )}\n        {children}\n      </Box>\n\n      {changePending && <LoadingOverlay />}\n    </Card>\n  );\n};\n","import { Button } from \"theme-ui\";\nimport { Decimal, LiquityStoreState, StabilityDepositChange } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../Transaction\";\n\ntype StabilityDepositActionProps = {\n  transactionId: string;\n  change: StabilityDepositChange<Decimal>;\n};\n\nconst selectFrontendRegistered = ({ frontend }: LiquityStoreState) =>\n  frontend.status === \"registered\";\n\nexport const StabilityDepositAction: React.FC<StabilityDepositActionProps> = ({\n  children,\n  transactionId,\n  change\n}) => {\n  const { config, liquity } = useLiquity();\n  const frontendRegistered = useLiquitySelector(selectFrontendRegistered);\n\n  const frontendTag = frontendRegistered ? config.frontendTag : undefined;\n\n  const [sendTransaction] = useTransactionFunction(\n    transactionId,\n    change.depositLUSD\n      ? liquity.send.depositLUSDInStabilityPool.bind(liquity.send, change.depositLUSD, frontendTag)\n      : liquity.send.withdrawLUSDFromStabilityPool.bind(liquity.send, change.withdrawLUSD)\n  );\n\n  return <Button onClick={sendTransaction}>{children}</Button>;\n};\n","import { createContext, useContext } from \"react\";\nimport type { StabilityView, StabilityEvent } from \"./types\";\n\ntype StabilityViewContextType = {\n  view: StabilityView;\n  dispatchEvent: (event: StabilityEvent) => void;\n};\n\nexport const StabilityViewContext = createContext<StabilityViewContextType | null>(null);\n\nexport const useStabilityView = (): StabilityViewContextType => {\n  const context: StabilityViewContextType | null = useContext(StabilityViewContext);\n\n  if (context === null) {\n    throw new Error(\"You must add a <StabilityViewProvider> into the React tree\");\n  }\n\n  return context;\n};\n","import React from \"react\";\n\nimport { Decimal, StabilityDeposit, StabilityDepositChange } from \"@liquity/lib-base\";\n\nimport { COIN, GT } from \"../../strings\";\nimport { ActionDescription, Amount } from \"../ActionDescription\";\n\ntype StabilityActionDescriptionProps = {\n  originalDeposit: StabilityDeposit;\n  change: StabilityDepositChange<Decimal>;\n};\n\nexport const StabilityActionDescription: React.FC<StabilityActionDescriptionProps> = ({\n  originalDeposit,\n  change\n}) => {\n  const collateralGain = originalDeposit.collateralGain.nonZero?.prettify(4).concat(\" ETH\");\n  const lqtyReward = originalDeposit.lqtyReward.nonZero?.prettify().concat(\" \", GT);\n\n  return (\n    <ActionDescription>\n      {change.depositLUSD ? (\n        <>\n          You are depositing{\" \"}\n          <Amount>\n            {change.depositLUSD.prettify()} {COIN}\n          </Amount>{\" \"}\n          in the Stability Pool\n        </>\n      ) : (\n        <>\n          You are withdrawing{\" \"}\n          <Amount>\n            {change.withdrawLUSD.prettify()} {COIN}\n          </Amount>{\" \"}\n          to your wallet\n        </>\n      )}\n      {(collateralGain || lqtyReward) && (\n        <>\n          {\" \"}\n          and claiming at least{\" \"}\n          {collateralGain && lqtyReward ? (\n            <>\n              <Amount>{collateralGain}</Amount> and <Amount>{lqtyReward}</Amount>\n            </>\n          ) : (\n            <Amount>{collateralGain ?? lqtyReward}</Amount>\n          )}\n        </>\n      )}\n      .\n    </ActionDescription>\n  );\n};\n","import {\n  Decimal,\n  LiquityStoreState,\n  StabilityDeposit,\n  StabilityDepositChange\n} from \"@liquity/lib-base\";\n\nimport { COIN } from \"../../../strings\";\nimport { Amount } from \"../../ActionDescription\";\nimport { ErrorDescription } from \"../../ErrorDescription\";\nimport { StabilityActionDescription } from \"../StabilityActionDescription\";\n\nexport const selectForStabilityDepositChangeValidation = ({\n  trove,\n  lusdBalance,\n  ownFrontend,\n  haveUndercollateralizedTroves\n}: LiquityStoreState) => ({\n  trove,\n  lusdBalance,\n  haveOwnFrontend: ownFrontend.status === \"registered\",\n  haveUndercollateralizedTroves\n});\n\ntype StabilityDepositChangeValidationContext = ReturnType<\n  typeof selectForStabilityDepositChangeValidation\n>;\n\nexport const validateStabilityDepositChange = (\n  originalDeposit: StabilityDeposit,\n  editedLUSD: Decimal,\n  {\n    lusdBalance,\n    haveOwnFrontend,\n    haveUndercollateralizedTroves\n  }: StabilityDepositChangeValidationContext\n): [\n  validChange: StabilityDepositChange<Decimal> | undefined,\n  description: JSX.Element | undefined\n] => {\n  const change = originalDeposit.whatChanged(editedLUSD);\n\n  if (haveOwnFrontend) {\n    return [\n      undefined,\n      <ErrorDescription>\n        You can’t deposit using a wallet address that is registered as a frontend.\n      </ErrorDescription>\n    ];\n  }\n\n  if (!change) {\n    return [undefined, undefined];\n  }\n\n  if (change.depositLUSD?.gt(lusdBalance)) {\n    return [\n      undefined,\n      <ErrorDescription>\n        The amount you're trying to deposit exceeds your balance by{\" \"}\n        <Amount>\n          {change.depositLUSD.sub(lusdBalance).prettify()} {COIN}\n        </Amount>\n        .\n      </ErrorDescription>\n    ];\n  }\n\n  if (change.withdrawLUSD && haveUndercollateralizedTroves) {\n    return [\n      undefined,\n      <ErrorDescription>\n        You're not allowed to withdraw MSD from your Stability Deposit when there are\n        undercollateralized Troves. Please liquidate those Troves or try again later.\n      </ErrorDescription>\n    ];\n  }\n\n  return [change, <StabilityActionDescription originalDeposit={originalDeposit} change={change} />];\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { Button, Flex } from \"theme-ui\";\n\nimport { Decimal, Decimalish, LiquityStoreState } from \"@liquity/lib-base\";\nimport { LiquityStoreUpdate, useLiquityReducer, useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN } from \"../../strings\";\n\nimport { ActionDescription } from \"../ActionDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\n\nimport { StabilityDepositEditor } from \"./StabilityDepositEditor\";\nimport { StabilityDepositAction } from \"./StabilityDepositAction\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\nimport {\n  selectForStabilityDepositChangeValidation,\n  validateStabilityDepositChange\n} from \"./validation/validateStabilityDepositChange\";\n\nconst init = ({ stabilityDeposit }: LiquityStoreState) => ({\n  originalDeposit: stabilityDeposit,\n  editedLUSD: stabilityDeposit.currentLUSD,\n  changePending: false\n});\n\ntype StabilityDepositManagerState = ReturnType<typeof init>;\ntype StabilityDepositManagerAction =\n  | LiquityStoreUpdate\n  | { type: \"startChange\" | \"finishChange\" | \"revert\" }\n  | { type: \"setDeposit\"; newValue: Decimalish };\n\nconst reduceWith = (action: StabilityDepositManagerAction) => (\n  state: StabilityDepositManagerState\n): StabilityDepositManagerState => reduce(state, action);\n\nconst finishChange = reduceWith({ type: \"finishChange\" });\nconst revert = reduceWith({ type: \"revert\" });\n\nconst reduce = (\n  state: StabilityDepositManagerState,\n  action: StabilityDepositManagerAction\n): StabilityDepositManagerState => {\n  // console.log(state);\n  // console.log(action);\n\n  const { originalDeposit, editedLUSD, changePending } = state;\n\n  switch (action.type) {\n    case \"startChange\": {\n      console.log(\"changeStarted\");\n      return { ...state, changePending: true };\n    }\n\n    case \"finishChange\":\n      return { ...state, changePending: false };\n\n    case \"setDeposit\":\n      return { ...state, editedLUSD: Decimal.from(action.newValue) };\n\n    case \"revert\":\n      return { ...state, editedLUSD: originalDeposit.currentLUSD };\n\n    case \"updateStore\": {\n      const {\n        stateChange: { stabilityDeposit: updatedDeposit }\n      } = action;\n\n      if (!updatedDeposit) {\n        return state;\n      }\n\n      const newState = { ...state, originalDeposit: updatedDeposit };\n\n      const changeCommitted =\n        !updatedDeposit.initialLUSD.eq(originalDeposit.initialLUSD) ||\n        updatedDeposit.currentLUSD.gt(originalDeposit.currentLUSD) ||\n        updatedDeposit.collateralGain.lt(originalDeposit.collateralGain) ||\n        updatedDeposit.lqtyReward.lt(originalDeposit.lqtyReward);\n\n      if (changePending && changeCommitted) {\n        return finishChange(revert(newState));\n      }\n\n      return {\n        ...newState,\n        editedLUSD: updatedDeposit.apply(originalDeposit.whatChanged(editedLUSD))\n      };\n    }\n  }\n};\n\nconst transactionId = \"stability-deposit\";\n\nexport const StabilityDepositManager: React.FC = () => {\n  const [{ originalDeposit, editedLUSD, changePending }, dispatch] = useLiquityReducer(reduce, init);\n  const validationContext = useLiquitySelector(selectForStabilityDepositChangeValidation);\n  const { dispatchEvent } = useStabilityView();\n\n  const handleCancel = useCallback(() => {\n    dispatchEvent(\"CANCEL_PRESSED\");\n  }, [dispatchEvent]);\n\n  const [validChange, description] = validateStabilityDepositChange(\n    originalDeposit,\n    editedLUSD,\n    validationContext\n  );\n\n  const makingNewDeposit = originalDeposit.isEmpty;\n\n  const myTransactionState = useMyTransactionState(transactionId);\n\n  useEffect(() => {\n    if (\n      myTransactionState.type === \"waitingForApproval\" ||\n      myTransactionState.type === \"waitingForConfirmation\"\n    ) {\n      dispatch({ type: \"startChange\" });\n    } else if (myTransactionState.type === \"failed\" || myTransactionState.type === \"cancelled\") {\n      dispatch({ type: \"finishChange\" });\n    } else if (myTransactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"DEPOSIT_CONFIRMED\");\n    }\n  }, [myTransactionState.type, dispatch, dispatchEvent]);\n\n  return (\n    <StabilityDepositEditor\n      originalDeposit={originalDeposit}\n      editedLUSD={editedLUSD}\n      changePending={changePending}\n      dispatch={dispatch}\n    >\n      {description ??\n        (makingNewDeposit ? (\n          <ActionDescription>Enter the amount of {COIN} you'd like to deposit.</ActionDescription>\n        ) : (\n          <ActionDescription>Adjust the {COIN} amount to deposit or withdraw.</ActionDescription>\n        ))}\n\n      <Flex variant=\"layout.actions\">\n        <Button variant=\"cancel\" onClick={handleCancel}>\n          Cancel\n        </Button>\n\n        {validChange ? (\n          <StabilityDepositAction transactionId={transactionId} change={validChange}>\n            Confirm\n          </StabilityDepositAction>\n        ) : (\n          <Button disabled>Confirm</Button>\n        )}\n      </Flex>\n    </StabilityDepositEditor>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"theme-ui\";\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../../Transaction\";\n\ntype ClaimAndMoveProps = {\n  disabled?: boolean;\n};\n\nexport const ClaimAndMove: React.FC<ClaimAndMoveProps> = ({ disabled, children }) => {\n  const { liquity } = useLiquity();\n\n  const [sendTransaction] = useTransactionFunction(\n    \"stability-deposit\",\n    liquity.send.transferCollateralGainToTrove.bind(liquity.send)\n  );\n\n  return (\n    <Button\n      variant=\"outline\"\n      sx={{ mt: 3, width: \"100%\" }}\n      onClick={sendTransaction}\n      disabled={disabled}\n    >\n      {children}\n    </Button>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"theme-ui\";\n\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../../Transaction\";\n\ntype ClaimRewardsProps = {\n  disabled?: boolean;\n};\n\nexport const ClaimRewards: React.FC<ClaimRewardsProps> = ({ disabled, children }) => {\n  const { liquity } = useLiquity();\n\n  const [sendTransaction] = useTransactionFunction(\n    \"stability-deposit\",\n    liquity.send.withdrawGainsFromStabilityPool.bind(liquity.send)\n  );\n\n  return (\n    <Button onClick={sendTransaction} disabled={disabled}>\n      {children}\n    </Button>\n  );\n};\n","import React from \"react\";\nimport { Flex } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nconst selector = ({ remainingStabilityPoolLQTYReward }: LiquityStoreState) => ({\n  remainingStabilityPoolLQTYReward\n});\n\nexport const RemainingLQTY: React.FC = () => {\n  const { remainingStabilityPoolLQTYReward } = useLiquitySelector(selector);\n\n  return (\n    <Flex sx={{ mr: 2, fontSize: 2, fontWeight: \"medium\" }}>\n      {remainingStabilityPoolLQTYReward.prettify(0)} MADDY remaining\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Flex } from \"theme-ui\";\n\nexport const Badge: React.FC = ({ children }) => {\n  return <Flex variant=\"layout.badge\">{children}</Flex>;\n};\n","import { Decimal } from \"@liquity/lib-base\";\n\ntype CoinGeckoSimplePriceResponse<T extends string, U extends string> = {\n  [P in T]: {\n    [Q in U]: number;\n  };\n};\n\nconst hasProp = <T, P extends string>(o: T, p: P): o is T & { [_ in P]: unknown } => p in o;\n\nconst validateCoinGeckoSimplePriceResponse = <T extends string, U extends string>(\n  expectedCoinIds: readonly T[],\n  expectedCurrencies: readonly U[],\n  body: unknown\n): CoinGeckoSimplePriceResponse<T, U> => {\n  if (typeof body !== \"object\" || body === null) {\n    throw new Error(`unexpected response from CoinGecko`);\n  }\n\n  for (const coinId of expectedCoinIds) {\n    if (!hasProp(body, coinId)) {\n      throw new Error(`coin \"${coinId}\" missing from CoinGecko response`);\n    }\n\n    const coinPrices = body[coinId];\n\n    for (const currency of expectedCurrencies) {\n      if (!hasProp(coinPrices, currency)) {\n        throw new Error(`currency \"${currency}\" missing from CoinGecko response`);\n      }\n\n      if (typeof coinPrices[currency] !== \"number\") {\n        throw new Error(`price of coin \"${coinId}\" in currency \"${currency}\" is not a number`);\n      }\n    }\n  }\n\n  return body as CoinGeckoSimplePriceResponse<T, U>;\n};\n\nconst fetchCoinGeckoSimplePrice = async <T extends string, U extends string>(\n  coinIds: readonly T[],\n  vsCurrencies: readonly U[]\n): Promise<CoinGeckoSimplePriceResponse<T, U>> => {\n  const simplePriceUrl =\n    \"https://api.coingecko.com/api/v3/simple/price?\" +\n    new URLSearchParams({\n      ids: coinIds.join(\",\"),\n      vs_currencies: vsCurrencies.join(\",\")\n    });\n\n  const response = await window.fetch(simplePriceUrl, {\n    headers: {\n      accept: \"application/json\"\n    }\n  });\n\n  if (!response.ok) {\n    throw new Error(`couldn't fetch price from CoinGecko: got status ${response.status}`);\n  }\n\n  return validateCoinGeckoSimplePriceResponse(coinIds, vsCurrencies, await response.json());\n};\n\nexport interface LqtyPriceResponse {\n  lqtyPriceUSD: Decimal;\n}\n\nexport const fetchLqtyPrice = async (): Promise<LqtyPriceResponse> => {\n  const response = await fetchCoinGeckoSimplePrice([\"liquity\"] as const, [\"usd\"] as const);\n\n  return {\n    lqtyPriceUSD: Decimal.from(response.liquity.usd)\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Card, Paragraph, Text } from \"theme-ui\";\nimport { Decimal, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { InfoIcon } from \"../InfoIcon\";\nimport { Badge } from \"../Badge\";\nimport { fetchLqtyPrice } from \"./context/fetchLqtyPrice\";\n\nconst selector = ({ lusdInStabilityPool, remainingStabilityPoolLQTYReward }: LiquityStoreState) => ({\n  lusdInStabilityPool,\n  remainingStabilityPoolLQTYReward\n});\n\nconst yearlyIssuanceFraction = 0.5;\nconst dailyIssuanceFraction = Decimal.from(1 - yearlyIssuanceFraction ** (1 / 365));\nconst dailyIssuancePercentage = dailyIssuanceFraction.mul(100);\n\nexport const Yield: React.FC = () => {\n  const { lusdInStabilityPool, remainingStabilityPoolLQTYReward } = useLiquitySelector(selector);\n\n  const [lqtyPrice, setLqtyPrice] = useState<Decimal | undefined>(undefined);\n  const hasZeroValue = remainingStabilityPoolLQTYReward.isZero || lusdInStabilityPool.isZero;\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { lqtyPriceUSD } = await fetchLqtyPrice();\n        setLqtyPrice(lqtyPriceUSD);\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  }, []);\n\n  if (hasZeroValue || lqtyPrice === undefined) return null;\n\n  const lqtyIssuanceOneDay = remainingStabilityPoolLQTYReward.mul(dailyIssuanceFraction);\n  const lqtyIssuanceOneDayInUSD = lqtyIssuanceOneDay.mul(lqtyPrice);\n  const aprPercentage = lqtyIssuanceOneDayInUSD.mulDiv(365 * 100, lusdInStabilityPool);\n  const remainingLqtyInUSD = remainingStabilityPoolLQTYReward.mul(lqtyPrice);\n\n  if (aprPercentage.isZero) return null;\n\n  return (\n    <Badge>\n      <Text>LQTY APR {aprPercentage.toString(2)}%</Text>\n      <InfoIcon\n        tooltip={\n          <Card variant=\"tooltip\" sx={{ width: [\"220px\", \"518px\"] }}>\n            <Paragraph>\n              An <Text sx={{ fontWeight: \"bold\" }}>estimate</Text> of the LQTY return on the LUSD\n              deposited to the Stability Pool over the next year, not including your ETH gains from\n              liquidations.\n            </Paragraph>\n            <Paragraph sx={{ fontSize: \"12px\", fontFamily: \"monospace\", mt: 2 }}>\n              ($LQTY_REWARDS * DAILY_ISSUANCE% / DEPOSITED_LUSD) * 365 * 100 ={\" \"}\n              <Text sx={{ fontWeight: \"bold\" }}> APR</Text>\n            </Paragraph>\n            <Paragraph sx={{ fontSize: \"12px\", fontFamily: \"monospace\" }}>\n              ($\n              {remainingLqtyInUSD.shorten()} * {dailyIssuancePercentage.toString(4)}% / $\n              {lusdInStabilityPool.shorten()}) * 365 * 100 =\n              <Text sx={{ fontWeight: \"bold\" }}> {aprPercentage.toString(2)}%</Text>\n            </Paragraph>\n          </Card>\n        }\n      ></InfoIcon>\n    </Badge>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN, GT } from \"../../strings\";\nimport { Icon } from \"../Icon\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { useMyTransactionState } from \"../Transaction\";\nimport { DisabledEditableRow, StaticRow } from \"../Trove/Editor\";\nimport { ClaimAndMove } from \"./actions/ClaimAndMove\";\nimport { ClaimRewards } from \"./actions/ClaimRewards\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\nimport { RemainingLQTY } from \"./RemainingLQTY\";\nimport { Yield } from \"./Yield\";\nimport { InfoIcon } from \"../InfoIcon\";\n\nconst selector = ({ stabilityDeposit, trove, lusdInStabilityPool }: LiquityStoreState) => ({\n  stabilityDeposit,\n  trove,\n  lusdInStabilityPool\n});\n\nexport const ActiveDeposit: React.FC = () => {\n  const { dispatchEvent } = useStabilityView();\n  const { stabilityDeposit, trove, lusdInStabilityPool } = useLiquitySelector(selector);\n\n  const poolShare = stabilityDeposit.currentLUSD.mulDiv(100, lusdInStabilityPool);\n\n  const handleAdjustDeposit = useCallback(() => {\n    dispatchEvent(\"ADJUST_DEPOSIT_PRESSED\");\n  }, [dispatchEvent]);\n\n  const hasReward = !stabilityDeposit.lqtyReward.isZero;\n  const hasGain = !stabilityDeposit.collateralGain.isZero;\n  const hasTrove = !trove.isEmpty;\n\n  const transactionId = \"stability-deposit\";\n  const transactionState = useMyTransactionState(transactionId);\n  const isWaitingForTransaction =\n    transactionState.type === \"waitingForApproval\" ||\n    transactionState.type === \"waitingForConfirmation\";\n\n  useEffect(() => {\n    if (transactionState.type === \"confirmedOneShot\") {\n      dispatchEvent(\"REWARDS_CLAIMED\");\n    }\n  }, [transactionState.type, dispatchEvent]);\n\n  return (\n    <Card>\n      <Heading>\n        Stability Pool\n        {!isWaitingForTransaction && (\n          <Flex sx={{ justifyContent: \"flex-end\" }}>\n            <RemainingLQTY />\n          </Flex>\n        )}\n      </Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <Box>\n          <DisabledEditableRow\n            label=\"Deposit\"\n            inputId=\"deposit-lusd\"\n            amount={stabilityDeposit.currentLUSD.prettify()}\n            unit={COIN}\n          />\n\n          <StaticRow\n            label=\"Pool share\"\n            inputId=\"deposit-share\"\n            amount={poolShare.prettify(4)}\n            unit=\"%\"\n          />\n\n          <StaticRow\n            label=\"Liquidation gain\"\n            inputId=\"deposit-gain\"\n            amount={stabilityDeposit.collateralGain.prettify(4)}\n            color={stabilityDeposit.collateralGain.nonZero && \"success\"}\n            unit=\"ETH\"\n          />\n\n          <Flex sx={{ alignItems: \"center\" }}>\n            <StaticRow\n              label=\"Reward\"\n              inputId=\"deposit-reward\"\n              amount={stabilityDeposit.lqtyReward.prettify()}\n              color={stabilityDeposit.lqtyReward.nonZero && \"success\"}\n              unit={GT}\n              infoIcon={\n                <InfoIcon\n                  tooltip={\n                    <Card variant=\"tooltip\" sx={{ width: \"240px\" }}>\n                      Although the MADDY rewards accrue every minute, the value on the UI only updates\n                      when a user transacts with the Stability Pool. Therefore you may receive more\n                      rewards than is displayed when you claim or adjust your deposit.\n                    </Card>\n                  }\n                />\n              }\n            />\n            <Flex sx={{ justifyContent: \"flex-end\", flex: 1 }}>\n              <Yield />\n            </Flex>\n          </Flex>\n        </Box>\n\n        <Flex variant=\"layout.actions\">\n          <Button variant=\"outline\" onClick={handleAdjustDeposit}>\n            <Icon name=\"pen\" size=\"sm\" />\n            &nbsp;Adjust\n          </Button>\n\n          <ClaimRewards disabled={!hasGain && !hasReward}>Claim ETH and MADDY</ClaimRewards>\n        </Flex>\n\n        {hasTrove && (\n          <ClaimAndMove disabled={!hasGain}>Claim MADDY and move ETH to Trove</ClaimAndMove>\n        )}\n      </Box>\n\n      {isWaitingForTransaction && <LoadingOverlay />}\n    </Card>\n  );\n};\n","import React, { useCallback } from \"react\";\nimport { Card, Heading, Box, Flex, Button } from \"theme-ui\";\nimport { InfoMessage } from \"../InfoMessage\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\nimport { RemainingLQTY } from \"./RemainingLQTY\";\nimport { Yield } from \"./Yield\";\n\nexport const NoDeposit: React.FC = props => {\n  const { dispatchEvent } = useStabilityView();\n\n  const handleOpenTrove = useCallback(() => {\n    dispatchEvent(\"DEPOSIT_PRESSED\");\n  }, [dispatchEvent]);\n\n  return (\n    <Card>\n      <Heading>\n        Stability Pool\n        <Flex sx={{ justifyContent: \"flex-end\" }}>\n          <RemainingLQTY />\n        </Flex>\n      </Heading>\n      <Box sx={{ p: [2, 3] }}>\n        <InfoMessage title=\"You have no MSD in the Stability Pool.\">\n          You can earn ETH and MADDY rewards by depositing MSD.\n        </InfoMessage>\n\n        <Flex variant=\"layout.actions\">\n          <Flex sx={{ justifyContent: \"flex-start\", flex: 1, alignItems: \"center\" }}>\n            <Yield />\n          </Flex>\n          <Button onClick={handleOpenTrove}>Deposit</Button>\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { StabilityDepositManager } from \"./StabilityDepositManager\";\nimport { ActiveDeposit } from \"./ActiveDeposit\";\nimport { NoDeposit } from \"./NoDeposit\";\nimport { useStabilityView } from \"./context/StabilityViewContext\";\n\nexport const Stability: React.FC = props => {\n  const { view } = useStabilityView();\n\n  switch (view) {\n    case \"NONE\": {\n      return <NoDeposit {...props} />;\n    }\n    case \"DEPOSITING\": {\n      return <StabilityDepositManager {...props} />;\n    }\n    case \"ADJUSTING\": {\n      return <StabilityDepositManager {...props} />;\n    }\n    case \"ACTIVE\": {\n      return <ActiveDeposit {...props} />;\n    }\n  }\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Box, Heading, Flex, Button, Label, Input } from \"theme-ui\";\n\nimport { Decimal, LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Icon } from \"./Icon\";\nimport { Transaction } from \"./Transaction\";\n\nconst selectPrice = ({ price }: LiquityStoreState) => price;\n\nexport const PriceManager: React.FC = () => {\n  const {\n    liquity: {\n      send: liquity,\n      connection: { _priceFeedIsTestnet: canSetPrice }\n    }\n  } = useLiquity();\n\n  const price = useLiquitySelector(selectPrice);\n  const [editedPrice, setEditedPrice] = useState(price.toString(2));\n\n  useEffect(() => {\n    setEditedPrice(price.toString(2));\n  }, [price]);\n\n  return (\n    <Card>\n      <Heading>Price feed</Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <Flex sx={{ alignItems: \"stretch\" }}>\n          <Label>ETH</Label>\n\n          <Label variant=\"unit\">$</Label>\n\n          <Input\n            type={canSetPrice ? \"number\" : \"text\"}\n            step=\"any\"\n            value={editedPrice}\n            onChange={e => setEditedPrice(e.target.value)}\n            disabled={!canSetPrice}\n          />\n\n          {canSetPrice && (\n            <Flex sx={{ ml: 2, alignItems: \"center\" }}>\n              <Transaction\n                id=\"set-price\"\n                tooltip=\"Set\"\n                tooltipPlacement=\"bottom\"\n                send={overrides => {\n                  if (!editedPrice) {\n                    throw new Error(\"Invalid price\");\n                  }\n                  return liquity.setPrice(Decimal.from(editedPrice), overrides);\n                }}\n              >\n                <Button variant=\"icon\">\n                  <Icon name=\"chart-line\" size=\"lg\" />\n                </Button>\n              </Transaction>\n            </Flex>\n          )}\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { InfoMessage } from \"../../../InfoMessage\";\nimport { NOT_BONDED_YET } from \"../../lexicon\";\n\nexport const Empty: React.FC = () => {\n  return <InfoMessage title={NOT_BONDED_YET.term}>{NOT_BONDED_YET.description}</InfoMessage>;\n};\n","/** @jsxImportSource theme-ui */\nimport React from \"react\";\nimport { Card, Text, Box, Heading, Flex, Grid, Button } from \"theme-ui\";\nimport { InfoIcon } from \"../InfoIcon\";\nimport * as lexicon from \"./lexicon\";\nimport { Empty } from \"./views/idle/Empty\";\nimport { Link } from \"../Link\";\nimport { useBondView } from \"./context/BondViewContext\";\n\nconst {\n  BONDS,\n  BOND_DEPOSIT: BOND_AMOUNT,\n  ACCRUED_AMOUNT,\n  MARKET_VALUE,\n  OPTIMUM_REBOND_TIME,\n  BREAK_EVEN_TIME\n} = lexicon;\n\nconst LineSegment: React.FC = () => (\n  <Flex\n    sx={{\n      borderTop: \"1px dotted gray\",\n      width: \"100%\",\n      mt: \"-20px\",\n      mb: 0\n    }}\n  />\n);\n\nconst formatDays = (days: number) =>\n  days < 0\n    ? \"Elapsed\"\n    : days === 0\n    ? \"Now\"\n    : parseFloat(days.toFixed(1)) < 1\n    ? `${days.toFixed(1)} days`\n    : `${days.toFixed(0)} days`;\n\nconst Line = (columns: number) =>\n  Array.from(Array(columns)).map((_, idx) => <LineSegment key={idx} />);\n\nconst columns = 5;\n\nexport const BondsTable: React.FC = () => {\n  const { bonds } = useBondView();\n\n  const pendingBonds = bonds ? bonds.filter(bond => bond.status === \"PENDING\") : [];\n  const hasBonds = pendingBonds.length > 0;\n  return (\n    <Card>\n      <Heading>\n        <Flex>\n          Pending bonds{\" \"}\n          <InfoIcon\n            placement=\"left\"\n            size=\"xs\"\n            tooltip={<Card variant=\"tooltip\">{BONDS.description}</Card>}\n          />\n        </Flex>\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        {!hasBonds && <Empty />}\n        {hasBonds && (\n          <Grid\n            gap=\"12px 0px\"\n            columns={[columns, \"1fr 1fr 1.1fr 1.3fr 1fr\"]}\n            sx={{ alignItems: \"center\", justifyItems: \"center\", alignContent: \"center\" }}\n          >\n            <Text sx={{ fontWeight: \"bold\" }}>\n              {BOND_AMOUNT.term}{\" \"}\n              <InfoIcon\n                size=\"xs\"\n                tooltip={<Card variant=\"tooltip\">{BOND_AMOUNT.description}</Card>}\n              />\n            </Text>\n            <Text sx={{ fontWeight: \"bold\" }}>\n              {ACCRUED_AMOUNT.term}{\" \"}\n              <InfoIcon\n                size=\"xs\"\n                tooltip={<Card variant=\"tooltip\">{ACCRUED_AMOUNT.description}</Card>}\n              />\n            </Text>\n            <Text sx={{ fontWeight: \"bold\" }}>\n              {MARKET_VALUE.term}{\" \"}\n              <InfoIcon\n                size=\"xs\"\n                tooltip={<Card variant=\"tooltip\">{MARKET_VALUE.description}</Card>}\n              />\n            </Text>\n            <Text sx={{ fontWeight: \"bold\" }}>\n              {BREAK_EVEN_TIME.term}{\" \"}\n              <InfoIcon\n                size=\"xs\"\n                tooltip={<Card variant=\"tooltip\">{BREAK_EVEN_TIME.description}</Card>}\n              />\n            </Text>\n            <Text sx={{ fontWeight: \"bold\" }}>\n              {OPTIMUM_REBOND_TIME.term}{\" \"}\n              <InfoIcon\n                size=\"xs\"\n                tooltip={<Card variant=\"tooltip\">{OPTIMUM_REBOND_TIME.description}</Card>}\n              />\n            </Text>\n            {Line(5)}\n\n            {pendingBonds.map((bond, idx) => {\n              const breakEvenDays = (bond.breakEvenTime.getTime() - Date.now()) / 1000 / 60 / 60 / 24;\n              const rebondDays = (bond.rebondTime.getTime() - Date.now()) / 1000 / 60 / 60 / 24;\n              return (\n                <React.Fragment key={idx}>\n                  <Text>{bond.deposit.shorten()} MSD</Text>\n                  <Text>{bond.accrued.shorten()} bMSD</Text>\n                  <Text>{bond.marketValue.shorten()} MSD</Text>\n                  <Text>{formatDays(breakEvenDays)}</Text>\n                  <Text>{formatDays(rebondDays)}</Text>\n\n                  {Line(5)}\n                </React.Fragment>\n              );\n            })}\n          </Grid>\n        )}\n        <Flex variant=\"layout.actions\" mt={3}>\n          <Link to=\"/bonds/pending\" m={0} p={0}>\n            <Button variant=\"primary\">Go to bonds</Button>\n          </Link>\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n","import { Container } from \"theme-ui\";\n\nimport { Trove } from \"../components/Trove/Trove\";\nimport { Stability } from \"../components/Stability/Stability\";\nimport { SystemStats } from \"../components/SystemStats\";\nimport { PriceManager } from \"../components/PriceManager\";\nimport { Staking } from \"../components/Staking/Staking\";\nimport { BondsTable } from \"../components/Bonds/BondsTable\";\n\nexport const Dashboard: React.FC = () => (\n  <Container variant=\"columns\">\n    <Container variant=\"left\">\n      <BondsTable />\n      <Trove />\n      <Stability />\n      {/*<Staking />*/}\n    </Container>\n\n    <Container variant=\"right\">\n      <SystemStats />\n      <PriceManager />\n    </Container>\n  </Container>\n);\n","import { Box, Flex, Heading, Paragraph } from \"theme-ui\";\n\nimport { shortenAddress } from \"../utils/shortenAddress\";\nimport { Icon } from \"../components/Icon\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nexport const UnregisteredFrontend: React.FC = () => {\n  const {\n    config: { frontendTag }\n  } = useLiquity();\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n\n        m: 3,\n        p: 3,\n        maxWidth: \"500px\",\n\n        border: 1,\n        borderRadius: \"8px\",\n        borderColor: \"warning\",\n        boxShadow: 2\n      }}\n    >\n      <Flex sx={{ alignItems: \"center\", mx: 3, mb: 2 }}>\n        <Icon name=\"exclamation-triangle\" size=\"2x\" />\n        <Heading sx={{ ml: 3, fontSize: \"18px\" }}>Frontend not yet registered</Heading>\n      </Flex>\n\n      <Paragraph sx={{ fontSize: 2 }}>\n        If you're the operator of this frontend, please select <b>{shortenAddress(frontendTag)}</b>{\" \"}\n        in your wallet to proceed with the registration.\n      </Paragraph>\n    </Box>\n  );\n};\n","import { useState } from \"react\";\nimport { Card, Heading, Box, Flex, Input, Label, Paragraph, Button, Spinner } from \"theme-ui\";\n\nimport { Decimal } from \"@liquity/lib-base\";\n\nimport { shortenAddress } from \"../utils/shortenAddress\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { Transaction, useMyTransactionState } from \"../components/Transaction\";\nimport { Icon } from \"../components/Icon\";\n\ntype FrontendRegistrationActionProps = {\n  kickbackRate: Decimal;\n};\n\nconst FrontendRegistrationAction: React.FC<FrontendRegistrationActionProps> = ({ kickbackRate }) => {\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n\n  const myTransactionId = \"register-frontend\";\n  const myTransactionState = useMyTransactionState(myTransactionId);\n\n  return myTransactionState.type === \"waitingForApproval\" ? (\n    <Button disabled>\n      <Spinner sx={{ mr: 2, color: \"white\" }} size=\"20px\" />\n      Waiting for your approval\n    </Button>\n  ) : myTransactionState.type !== \"waitingForConfirmation\" &&\n    myTransactionState.type !== \"confirmed\" ? (\n    <Transaction id={myTransactionId} send={liquity.registerFrontend.bind(liquity, kickbackRate)}>\n      <Button>Register</Button>\n    </Transaction>\n  ) : null;\n};\n\nexport const FrontendRegistration: React.FC = () => {\n  const { account } = useLiquity();\n\n  const [kickbackRate, setKickbackRate] = useState(Decimal.from(0.8));\n  const [cut, setCut] = useState(Decimal.from(0.2));\n  const [kickbackRateString, setKickbackRateString] = useState(\"80\");\n\n  return (\n    <>\n      <Card>\n        <Heading>Choose a kickback rate</Heading>\n\n        <Box sx={{ p: [2, 3] }}>\n          <Flex>\n            <Label>Kickback rate</Label>\n            <Label variant=\"unit\">%</Label>\n\n            <Input\n              sx={{ maxWidth: \"200px\" }}\n              type=\"number\"\n              step=\"any\"\n              value={kickbackRateString}\n              onChange={e => {\n                setKickbackRateString(e.target.value);\n                try {\n                  const newKickbackRate = Decimal.from(e.target.value || 0).div(100);\n                  const newCut = Decimal.ONE.sub(newKickbackRate);\n\n                  setKickbackRate(newKickbackRate);\n                  setCut(newCut);\n                } catch {}\n              }}\n              onBlur={() => {\n                setKickbackRateString(kickbackRate.mul(100).toString());\n              }}\n            />\n          </Flex>\n        </Box>\n      </Card>\n\n      <Box\n        sx={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"space-around\",\n\n          m: 3,\n          mt: [3, null, 4],\n          mb: 4,\n          p: 3,\n          maxWidth: \"450px\",\n\n          border: 1,\n          borderRadius: \"8px\",\n          borderColor: \"danger\",\n          boxShadow: 2\n        }}\n      >\n        <Flex sx={{ alignItems: \"center\", mx: 3, fontSize: 4 }}>\n          <Icon name=\"hand-paper\" />\n          <Heading sx={{ ml: 3, fontSize: \"18px\" }}>Before you proceed</Heading>\n        </Flex>\n\n        <Paragraph sx={{ fontSize: 1, mt: 3 }}>\n          You are about to register <b>{shortenAddress(account)}</b> to receive{\" \"}\n          <b>{cut.mul(100).toString()}%</b> of the MADDY rewards earned through this frontend.\n        </Paragraph>\n\n        <Paragraph sx={{ fontSize: 1, mt: 3, fontWeight: \"bold\" }}>\n          You will not be able to change the kickback rate for this address later.\n        </Paragraph>\n\n        <Paragraph sx={{ fontSize: 1, mt: 3 }}>\n          If you'd like to use a different kickback rate in the future, you will need to repeat this\n          registration with a different address.\n        </Paragraph>\n      </Box>\n\n      <FrontendRegistrationAction {...{ kickbackRate }} />\n    </>\n  );\n};\n","import { Box, Flex, Heading, Paragraph, Button } from \"theme-ui\";\n\nimport { Icon } from \"../components/Icon\";\n\ntype FrontendRegistrationSuccessProps = {\n  onDismiss: () => void;\n};\n\nexport const FrontendRegistrationSuccess: React.FC<FrontendRegistrationSuccessProps> = ({\n  onDismiss\n}) => (\n  <>\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-around\",\n\n        m: 3,\n        mt: 4,\n        mb: 4,\n        p: 4,\n        maxWidth: \"500px\",\n\n        bg: \"rgba(40, 192, 129, 0.05)\",\n        color: \"success\",\n\n        border: 1,\n        borderRadius: \"8px\",\n        borderColor: \"success\",\n        boxShadow: 2\n      }}\n    >\n      <Flex sx={{ alignItems: \"center\", mx: 3, mb: 4, fontSize: 5 }}>\n        <Icon name=\"check\" />\n        <Heading sx={{ ml: 3, fontSize: 4 }}>Success!</Heading>\n      </Flex>\n\n      <Paragraph sx={{ fontSize: 2 }}>Your frontend is now ready to receive MADDY rewards.</Paragraph>\n    </Box>\n\n    <Button onClick={onDismiss}>Go to Dashboard</Button>\n  </>\n);\n","import { useEffect, useState } from \"react\";\nimport { AddressZero } from \"@ethersproject/constants\";\n\nimport { LiquityStoreState } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Dashboard } from \"./Dashboard\";\nimport { UnregisteredFrontend } from \"./UnregisteredFrontend\";\nimport { FrontendRegistration } from \"./FrontendRegistration\";\nimport { FrontendRegistrationSuccess } from \"./FrontendRegistrationSuccess\";\n\nconst selectFrontend = ({ frontend }: LiquityStoreState) => frontend;\n\nexport const PageSwitcher: React.FC = () => {\n  const {\n    account,\n    config: { frontendTag }\n  } = useLiquity();\n\n  const frontend = useLiquitySelector(selectFrontend);\n  const unregistered = frontendTag !== AddressZero && frontend.status === \"unregistered\";\n\n  const [registering, setRegistering] = useState(false);\n\n  useEffect(() => {\n    if (unregistered) {\n      setRegistering(true);\n    }\n  }, [unregistered]);\n\n  if (registering || unregistered) {\n    if (frontend.status === \"registered\") {\n      return <FrontendRegistrationSuccess onDismiss={() => setRegistering(false)} />;\n    } else if (account === frontendTag) {\n      return <FrontendRegistration />;\n    } else {\n      return <UnregisteredFrontend />;\n    }\n  } else {\n    return <Dashboard />;\n  }\n};\n","import React, { useState } from \"react\";\nimport { Card, Box, Heading, Flex, Button, Label, Input } from \"theme-ui\";\n\nimport { useLiquity } from \"../hooks/LiquityContext\";\n\nimport { Icon } from \"./Icon\";\nimport { Transaction } from \"./Transaction\";\n\nexport const LiquidationManager: React.FC = () => {\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n  const [numberOfTrovesToLiquidate, setNumberOfTrovesToLiquidate] = useState(\"90\");\n\n  return (\n    <Card>\n      <Heading>Liquidate</Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <Flex sx={{ alignItems: \"stretch\" }}>\n          <Label>Up to</Label>\n\n          <Input\n            type=\"number\"\n            min=\"1\"\n            step=\"1\"\n            value={numberOfTrovesToLiquidate}\n            onChange={e => setNumberOfTrovesToLiquidate(e.target.value)}\n          />\n\n          <Label>Troves</Label>\n\n          <Flex sx={{ ml: 2, alignItems: \"center\" }}>\n            <Transaction\n              id=\"batch-liquidate\"\n              tooltip=\"Liquidate\"\n              tooltipPlacement=\"bottom\"\n              send={overrides => {\n                if (!numberOfTrovesToLiquidate) {\n                  throw new Error(\"Invalid number\");\n                }\n                return liquity.liquidateUpTo(parseInt(numberOfTrovesToLiquidate, 10), overrides);\n              }}\n            >\n              <Button variant=\"dangerIcon\">\n                <Icon name=\"trash\" size=\"lg\" />\n              </Button>\n            </Transaction>\n          </Flex>\n        </Flex>\n      </Box>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Box, BoxProps } from \"theme-ui\";\n\ntype AbbreviationProps = BoxProps & {\n  short: React.ReactNode;\n};\n\nexport const Abbreviation: React.FC<AbbreviationProps> = ({ children, short, ...boxProps }) => (\n  <Box as=\"span\" {...boxProps}>\n    <Box as=\"span\" sx={{ display: [\"none\", \"unset\"] }}>\n      {children}\n    </Box>\n\n    <Box as=\"span\" sx={{ display: [\"unset\", \"none\"] }}>\n      {short}\n    </Box>\n  </Box>\n);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport CopyToClipboard from \"react-copy-to-clipboard\";\nimport { Card, Button, Text, Box, Heading, Flex } from \"theme-ui\";\n\nimport {\n  Percent,\n  MINIMUM_COLLATERAL_RATIO,\n  CRITICAL_COLLATERAL_RATIO,\n  UserTrove,\n  Decimal\n} from \"@liquity/lib-base\";\nimport { BlockPolledLiquityStoreState } from \"@liquity/lib-ethers\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { shortenAddress } from \"../utils/shortenAddress\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { COIN } from \"../strings\";\n\nimport { Icon } from \"./Icon\";\nimport { LoadingOverlay } from \"./LoadingOverlay\";\nimport { Transaction } from \"./Transaction\";\nimport { Tooltip } from \"./Tooltip\";\nimport { Abbreviation } from \"./Abbreviation\";\n\nconst rowHeight = \"40px\";\n\nconst liquidatableInNormalMode = (trove: UserTrove, price: Decimal) =>\n  [trove.collateralRatioIsBelowMinimum(price), \"Collateral ratio not low enough\"] as const;\n\nconst liquidatableInRecoveryMode = (\n  trove: UserTrove,\n  price: Decimal,\n  totalCollateralRatio: Decimal,\n  lusdInStabilityPool: Decimal\n) => {\n  const collateralRatio = trove.collateralRatio(price);\n\n  if (collateralRatio.gte(MINIMUM_COLLATERAL_RATIO) && collateralRatio.lt(totalCollateralRatio)) {\n    return [\n      trove.debt.lte(lusdInStabilityPool),\n      \"There's not enough LUSD in the Stability pool to cover the debt\"\n    ] as const;\n  } else {\n    return liquidatableInNormalMode(trove, price);\n  }\n};\n\ntype RiskyTrovesProps = {\n  pageSize: number;\n};\n\nconst select = ({\n  numberOfTroves,\n  price,\n  total,\n  lusdInStabilityPool,\n  blockTag\n}: BlockPolledLiquityStoreState) => ({\n  numberOfTroves,\n  price,\n  recoveryMode: total.collateralRatioIsBelowCritical(price),\n  totalCollateralRatio: total.collateralRatio(price),\n  lusdInStabilityPool,\n  blockTag\n});\n\nexport const RiskyTroves: React.FC<RiskyTrovesProps> = ({ pageSize }) => {\n  const {\n    blockTag,\n    numberOfTroves,\n    recoveryMode,\n    totalCollateralRatio,\n    lusdInStabilityPool,\n    price\n  } = useLiquitySelector(select);\n  const { liquity } = useLiquity();\n\n  const [loading, setLoading] = useState(true);\n  const [troves, setTroves] = useState<UserTrove[]>();\n\n  const [reload, setReload] = useState({});\n  const forceReload = useCallback(() => setReload({}), []);\n\n  const [page, setPage] = useState(0);\n  const numberOfPages = Math.ceil(numberOfTroves / pageSize) || 1;\n  const clampedPage = Math.min(page, numberOfPages - 1);\n\n  const nextPage = () => {\n    if (clampedPage < numberOfPages - 1) {\n      setPage(clampedPage + 1);\n    }\n  };\n\n  const previousPage = () => {\n    if (clampedPage > 0) {\n      setPage(clampedPage - 1);\n    }\n  };\n\n  useEffect(() => {\n    if (page !== clampedPage) {\n      setPage(clampedPage);\n    }\n  }, [page, clampedPage]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    setLoading(true);\n\n    liquity\n      .getTroves(\n        {\n          first: pageSize,\n          sortedBy: \"ascendingCollateralRatio\",\n          startingAt: clampedPage * pageSize\n        },\n        { blockTag }\n      )\n      .then(troves => {\n        if (mounted) {\n          setTroves(troves);\n          setLoading(false);\n        }\n      });\n\n    return () => {\n      mounted = false;\n    };\n    // Omit blockTag from deps on purpose\n    // eslint-disable-next-line\n  }, [liquity, clampedPage, pageSize, reload]);\n\n  useEffect(() => {\n    forceReload();\n  }, [forceReload, numberOfTroves]);\n\n  const [copied, setCopied] = useState<string>();\n\n  useEffect(() => {\n    if (copied !== undefined) {\n      let cancelled = false;\n\n      setTimeout(() => {\n        if (!cancelled) {\n          setCopied(undefined);\n        }\n      }, 2000);\n\n      return () => {\n        cancelled = true;\n      };\n    }\n  }, [copied]);\n\n  return (\n    <Card sx={{ width: \"100%\" }}>\n      <Heading>\n        <Abbreviation short=\"Troves\">Risky Troves</Abbreviation>\n\n        <Flex sx={{ alignItems: \"center\" }}>\n          {numberOfTroves !== 0 && (\n            <>\n              <Abbreviation\n                short={`page ${clampedPage + 1} / ${numberOfPages}`}\n                sx={{ mr: [0, 3], fontWeight: \"body\", fontSize: [1, 2], letterSpacing: [-1, 0] }}\n              >\n                {clampedPage * pageSize + 1}-{Math.min((clampedPage + 1) * pageSize, numberOfTroves)}{\" \"}\n                of {numberOfTroves}\n              </Abbreviation>\n\n              <Button variant=\"titleIcon\" onClick={previousPage} disabled={clampedPage <= 0}>\n                <Icon name=\"chevron-left\" size=\"lg\" />\n              </Button>\n\n              <Button\n                variant=\"titleIcon\"\n                onClick={nextPage}\n                disabled={clampedPage >= numberOfPages - 1}\n              >\n                <Icon name=\"chevron-right\" size=\"lg\" />\n              </Button>\n            </>\n          )}\n\n          <Button\n            variant=\"titleIcon\"\n            sx={{ opacity: loading ? 0 : 1, ml: [0, 3] }}\n            onClick={forceReload}\n          >\n            <Icon name=\"redo\" size=\"lg\" />\n          </Button>\n        </Flex>\n      </Heading>\n\n      {!troves || troves.length === 0 ? (\n        <Box sx={{ p: [2, 3] }}>\n          <Box sx={{ p: 4, fontSize: 3, textAlign: \"center\" }}>\n            {!troves ? \"Loading...\" : \"There are no Troves yet\"}\n          </Box>\n        </Box>\n      ) : (\n        <Box sx={{ p: [2, 3] }}>\n          <Box\n            as=\"table\"\n            sx={{\n              mt: 2,\n              pl: [1, 4],\n              width: \"100%\",\n\n              textAlign: \"center\",\n              lineHeight: 1.15\n            }}\n          >\n            <colgroup>\n              <col style={{ width: \"50px\" }} />\n              <col />\n              <col />\n              <col />\n              <col style={{ width: rowHeight }} />\n            </colgroup>\n\n            <thead>\n              <tr>\n                <th>Owner</th>\n                <th>\n                  <Abbreviation short=\"Coll.\">Collateral</Abbreviation>\n                  <Box sx={{ fontSize: [0, 1], fontWeight: \"body\", opacity: 0.5 }}>ETH</Box>\n                </th>\n                <th>\n                  Debt\n                  <Box sx={{ fontSize: [0, 1], fontWeight: \"body\", opacity: 0.5 }}>{COIN}</Box>\n                </th>\n                <th>\n                  Coll.\n                  <br />\n                  Ratio\n                </th>\n                <th></th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {troves.map(\n                trove =>\n                  !trove.isEmpty && ( // making sure the Trove hasn't been liquidated\n                    // (TODO: remove check after we can fetch multiple Troves in one call)\n                    <tr key={trove.ownerAddress}>\n                      <td\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          height: rowHeight\n                        }}\n                      >\n                        <Tooltip message={trove.ownerAddress} placement=\"top\">\n                          <Text\n                            variant=\"address\"\n                            sx={{\n                              width: [\"73px\", \"unset\"],\n                              overflow: \"hidden\",\n                              position: \"relative\"\n                            }}\n                          >\n                            {shortenAddress(trove.ownerAddress)}\n                            <Box\n                              sx={{\n                                display: [\"block\", \"none\"],\n                                position: \"absolute\",\n                                top: 0,\n                                right: 0,\n                                width: \"50px\",\n                                height: \"100%\",\n                                background:\n                                  \"linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,1) 100%)\"\n                              }}\n                            />\n                          </Text>\n                        </Tooltip>\n\n                        <CopyToClipboard\n                          text={trove.ownerAddress}\n                          onCopy={() => setCopied(trove.ownerAddress)}\n                        >\n                          <Button variant=\"icon\" sx={{ width: \"24px\", height: \"24px\" }}>\n                            <Icon\n                              name={copied === trove.ownerAddress ? \"clipboard-check\" : \"clipboard\"}\n                              size=\"sm\"\n                            />\n                          </Button>\n                        </CopyToClipboard>\n                      </td>\n                      <td>\n                        <Abbreviation short={trove.collateral.shorten()}>\n                          {trove.collateral.prettify(4)}\n                        </Abbreviation>\n                      </td>\n                      <td>\n                        <Abbreviation short={trove.debt.shorten()}>\n                          {trove.debt.prettify()}\n                        </Abbreviation>\n                      </td>\n                      <td>\n                        {(collateralRatio => (\n                          <Text\n                            color={\n                              collateralRatio.gt(CRITICAL_COLLATERAL_RATIO)\n                                ? \"success\"\n                                : collateralRatio.gt(1.2)\n                                ? \"warning\"\n                                : \"danger\"\n                            }\n                          >\n                            {new Percent(collateralRatio).prettify()}\n                          </Text>\n                        ))(trove.collateralRatio(price))}\n                      </td>\n                      <td>\n                        <Transaction\n                          id={`liquidate-${trove.ownerAddress}`}\n                          tooltip=\"Liquidate\"\n                          requires={[\n                            recoveryMode\n                              ? liquidatableInRecoveryMode(\n                                  trove,\n                                  price,\n                                  totalCollateralRatio,\n                                  lusdInStabilityPool\n                                )\n                              : liquidatableInNormalMode(trove, price)\n                          ]}\n                          send={liquity.send.liquidate.bind(liquity.send, trove.ownerAddress)}\n                        >\n                          <Button variant=\"dangerIcon\">\n                            <Icon name=\"trash\" />\n                          </Button>\n                        </Transaction>\n                      </td>\n                    </tr>\n                  )\n              )}\n            </tbody>\n          </Box>\n        </Box>\n      )}\n\n      {loading && <LoadingOverlay />}\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { Container, Card, Box, Paragraph } from \"theme-ui\";\nimport { SystemStats } from \"../components/SystemStats\";\nimport { LiquidationManager } from \"../components/LiquidationManager\";\nimport { RiskyTroves } from \"../components/RiskyTroves\";\nimport { InfoMessage } from \"../components/InfoMessage\";\n\nexport const RiskyTrovesPage: React.FC = () => (\n  <Container variant=\"columns\">\n    <Container variant=\"left\">\n      <Card>\n        <Box sx={{ p: [2, 3] }}>\n          <InfoMessage title=\"Bot functionality\">\n            <Paragraph>Liquidation is expected to be carried out by bots.</Paragraph>\n            <Paragraph>\n              Early on you may be able to manually liquidate Troves, but as the system matures this\n              will become less likely.\n            </Paragraph>\n          </InfoMessage>\n        </Box>\n      </Card>\n      <LiquidationManager />\n    </Container>\n\n    <Container variant=\"right\">\n      <SystemStats />\n    </Container>\n    <RiskyTroves pageSize={10} />\n  </Container>\n);\n","import { Box, Card, Heading, Paragraph, Text } from \"theme-ui\";\n\nimport { InfoMessage } from \"../InfoMessage\";\nimport { Icon } from \"../Icon\";\n\ntype DisabledRedemptionProps = {\n  disabledDays: number;\n  unlockDate: Date;\n};\n\nexport const DisabledRedemption: React.FC<DisabledRedemptionProps> = ({\n  disabledDays,\n  unlockDate\n}) => (\n  <Card>\n    <Heading>Redeem</Heading>\n\n    <Box sx={{ p: [2, 3] }}>\n      <InfoMessage\n        title=\"Redemption is not enabled yet.\"\n        icon={\n          <Box sx={{ color: \"warning\" }}>\n            <Icon name=\"exclamation-triangle\" />\n          </Box>\n        }\n      >\n        <Paragraph>\n          MSD redemption is disabled for the first {disabledDays} days after launch.\n        </Paragraph>\n\n        <Paragraph sx={{ mt: 3 }}>\n          It will be unlocked at{\" \"}\n          <Text sx={{ fontWeight: \"medium\" }}>{unlockDate.toLocaleString()}</Text>.\n        </Paragraph>\n      </InfoMessage>\n    </Box>\n  </Card>\n);\n","import { Button } from \"theme-ui\";\n\nimport { Decimal } from \"@liquity/lib-base\";\n\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { useTransactionFunction } from \"../Transaction\";\n\ntype RedemptionActionProps = {\n  transactionId: string;\n  disabled?: boolean;\n  lusdAmount: Decimal;\n  maxRedemptionRate: Decimal;\n};\n\nexport const RedemptionAction: React.FC<RedemptionActionProps> = ({\n  transactionId,\n  disabled,\n  lusdAmount,\n  maxRedemptionRate\n}) => {\n  const {\n    liquity: { send: liquity }\n  } = useLiquity();\n\n  const [sendTransaction] = useTransactionFunction(\n    transactionId,\n    liquity.redeemLUSD.bind(liquity, lusdAmount, maxRedemptionRate)\n  );\n\n  return (\n    <Button disabled={disabled} onClick={sendTransaction}>\n      Confirm\n    </Button>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Button, Box, Flex, Card, Heading } from \"theme-ui\";\n\nimport { Decimal, Percent, LiquityStoreState, MINIMUM_COLLATERAL_RATIO } from \"@liquity/lib-base\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { COIN } from \"../../strings\";\n\nimport { Icon } from \"../Icon\";\nimport { LoadingOverlay } from \"../LoadingOverlay\";\nimport { EditableRow, StaticRow } from \"../Trove/Editor\";\nimport { ActionDescription, Amount } from \"../ActionDescription\";\nimport { ErrorDescription } from \"../ErrorDescription\";\nimport { useMyTransactionState } from \"../Transaction\";\n\nimport { RedemptionAction } from \"./RedemptionAction\";\nimport { InfoIcon } from \"../InfoIcon\";\n\nconst mcrPercent = new Percent(MINIMUM_COLLATERAL_RATIO).toString(0);\n\nconst select = ({ price, fees, total, lusdBalance }: LiquityStoreState) => ({\n  price,\n  fees,\n  total,\n  lusdBalance\n});\n\nconst transactionId = \"redemption\";\n\nexport const RedemptionManager: React.FC = () => {\n  const { price, fees, total, lusdBalance } = useLiquitySelector(select);\n  const [lusdAmount, setLUSDAmount] = useState(Decimal.ZERO);\n  const [changePending, setChangePending] = useState(false);\n  const editingState = useState<string>();\n\n  const dirty = !lusdAmount.isZero;\n  const ethAmount = lusdAmount.div(price);\n  const redemptionRate = fees.redemptionRate(lusdAmount.div(total.debt));\n  const feePct = new Percent(redemptionRate);\n  const ethFee = ethAmount.mul(redemptionRate);\n  const maxRedemptionRate = redemptionRate.add(0.001); // TODO slippage tolerance\n\n  const myTransactionState = useMyTransactionState(transactionId);\n\n  useEffect(() => {\n    if (\n      myTransactionState.type === \"waitingForApproval\" ||\n      myTransactionState.type === \"waitingForConfirmation\"\n    ) {\n      setChangePending(true);\n    } else if (myTransactionState.type === \"failed\" || myTransactionState.type === \"cancelled\") {\n      setChangePending(false);\n    } else if (myTransactionState.type === \"confirmed\") {\n      setLUSDAmount(Decimal.ZERO);\n      setChangePending(false);\n    }\n  }, [myTransactionState.type, setChangePending, setLUSDAmount]);\n\n  const [canRedeem, description] = total.collateralRatioIsBelowMinimum(price)\n    ? [\n        false,\n        <ErrorDescription>\n          You can't redeem MSD when the total collateral ratio is less than{\" \"}\n          <Amount>{mcrPercent}</Amount>. Please try again later.\n        </ErrorDescription>\n      ]\n    : lusdAmount.gt(lusdBalance)\n    ? [\n        false,\n        <ErrorDescription>\n          The amount you're trying to redeem exceeds your balance by{\" \"}\n          <Amount>\n            {lusdAmount.sub(lusdBalance).prettify()} {COIN}\n          </Amount>\n          .\n        </ErrorDescription>\n      ]\n    : [\n        true,\n        <ActionDescription>\n          You will receive <Amount>{ethAmount.sub(ethFee).prettify(4)} ETH</Amount> in exchange for{\" \"}\n          <Amount>\n            {lusdAmount.prettify()} {COIN}\n          </Amount>\n          .\n        </ActionDescription>\n      ];\n\n  return (\n    <Card>\n      <Heading>\n        Redeem\n        {dirty && !changePending && (\n          <Button\n            variant=\"titleIcon\"\n            sx={{ \":enabled:hover\": { color: \"danger\" } }}\n            onClick={() => setLUSDAmount(Decimal.ZERO)}\n          >\n            <Icon name=\"history\" size=\"lg\" />\n          </Button>\n        )}\n      </Heading>\n\n      <Box sx={{ p: [2, 3] }}>\n        <EditableRow\n          label=\"Redeem\"\n          inputId=\"redeem-lusd\"\n          amount={lusdAmount.prettify()}\n          maxAmount={lusdBalance.toString()}\n          maxedOut={lusdAmount.eq(lusdBalance)}\n          unit={COIN}\n          {...{ editingState }}\n          editedAmount={lusdAmount.toString(2)}\n          setEditedAmount={amount => setLUSDAmount(Decimal.from(amount))}\n        />\n\n        <StaticRow\n          label=\"Redemption Fee\"\n          inputId=\"redeem-fee\"\n          amount={ethFee.toString(4)}\n          pendingAmount={feePct.toString(2)}\n          unit=\"ETH\"\n          infoIcon={\n            <InfoIcon\n              tooltip={\n                <Card variant=\"tooltip\" sx={{ minWidth: \"240px\" }}>\n                  The Redemption Fee is charged as a percentage of the redeemed Ether. The Redemption\n                  Fee depends on MSD redemption volumes and is 0.5% at minimum.\n                </Card>\n              }\n            />\n          }\n        />\n\n        {((dirty || !canRedeem) && description) || (\n          <ActionDescription>Enter the amount of {COIN} you'd like to redeem.</ActionDescription>\n        )}\n\n        <Flex variant=\"layout.actions\">\n          <RedemptionAction\n            transactionId={transactionId}\n            disabled={!dirty || !canRedeem}\n            lusdAmount={lusdAmount}\n            maxRedemptionRate={maxRedemptionRate}\n          />\n        </Flex>\n      </Box>\n\n      {changePending && <LoadingOverlay />}\n    </Card>\n  );\n};\n","import { BlockPolledLiquityStoreState } from \"@liquity/lib-ethers\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"../../hooks/LiquityContext\";\nimport { DisabledRedemption } from \"./DisabledRedemption\";\nimport { RedemptionManager } from \"./RedemptionManager\";\n\nconst SECONDS_IN_ONE_DAY = 24 * 60 * 60;\n\nconst selectBlockTimestamp = ({ blockTimestamp }: BlockPolledLiquityStoreState) => blockTimestamp;\n\nexport const Redemption: React.FC = () => {\n  const {\n    liquity: {\n      connection: { deploymentDate, bootstrapPeriod }\n    }\n  } = useLiquity();\n\n  const blockTimestamp = useLiquitySelector(selectBlockTimestamp);\n\n  const bootstrapPeriodDays = Math.round(bootstrapPeriod / SECONDS_IN_ONE_DAY);\n  const deploymentTime = deploymentDate.getTime() / 1000;\n  const bootstrapEndTime = deploymentTime + bootstrapPeriod;\n  const bootstrapEndDate = new Date(bootstrapEndTime * 1000);\n  const redemptionDisabled = blockTimestamp < bootstrapEndTime;\n\n  if (redemptionDisabled) {\n    return <DisabledRedemption disabledDays={bootstrapPeriodDays} unlockDate={bootstrapEndDate} />;\n  }\n\n  return <RedemptionManager />;\n};\n","import React from \"react\";\nimport { Box, Card, Container, Link, Paragraph } from \"theme-ui\";\nimport { SystemStats } from \"../components/SystemStats\";\nimport { Redemption } from \"../components/Redemption/Redemption\";\nimport { InfoMessage } from \"../components/InfoMessage\";\nimport { useLiquity } from \"../hooks/LiquityContext\";\nimport { Icon } from \"../components/Icon\";\n\nconst uniLink = (lusdAddress: string) =>\n  `https://app.uniswap.org/#/swap?inputCurrency=${lusdAddress}&outputCurrency=ETH`;\n\nexport const RedemptionPage: React.FC = () => {\n  const {\n    liquity: {\n      connection: { addresses }\n    }\n  } = useLiquity();\n\n  return (\n    <Container variant=\"columns\">\n      <Container variant=\"left\">\n        <Card>\n          <Box sx={{ p: [2, 3] }}>\n            <InfoMessage title=\"Bot functionality\">\n              <Paragraph>\n                Redemptions are expected to be carried out by bots when arbitrage opportunities\n                emerge.\n              </Paragraph>\n              <Paragraph sx={{ mt: 2 }}>\n                Most of the time you will get a better rate for converting MSD to ETH on{\" \"}\n                <Link href={uniLink(addresses[\"lusdToken\"])} target=\"_blank\">\n                  Uniswap <Icon name=\"external-link-alt\" size=\"xs\" />\n                </Link>{\" \"}\n                or other exchanges.\n              </Paragraph>\n              <Paragraph sx={{ mt: 2 }}>\n                <strong>Note</strong>: Redemption is not for repaying your loan. To repay your loan,\n                adjust your Trove on the <Link href=\"#/\">Dashboard</Link>.\n              </Paragraph>\n            </InfoMessage>\n          </Box>\n        </Card>\n        <Redemption />\n      </Container>\n\n      <Container variant=\"right\">\n        <SystemStats />\n      </Container>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { PieChart, Pie, ResponsiveContainer, Tooltip, Cell } from \"recharts\";\n\nconst labels = [\"Pending\", \"Reserve\", \"Permanent\"];\nconst colors = [\"#7a77c2\", \"#6d6aad\", \"#5f5c97\"];\nconst RADIAN = Math.PI / 180;\nconst treasury = [\n  {\n    name: \"Pending\",\n    value: 850000,\n    share: 7\n  },\n  {\n    name: \"Reserve\",\n    value: 7100000,\n    share: 62\n  },\n  {\n    name: \"Permanent\",\n    value: 3600000,\n    share: 31\n  }\n];\n\n// @ts-ignore\nconst BucketLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, index }) => {\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n  return (\n    <text\n      fontSize={16}\n      fontWeight={300}\n      x={index === 0 ? x + 20 : x + 10}\n      y={y}\n      fill=\"white\"\n      textAnchor=\"middle\"\n      dominantBaseline=\"central\"\n    >\n      {labels[index]}\n    </text>\n  );\n};\n\n// @ts-ignore\nconst ShareLabel = ({ x, y, index }) => {\n  const radius = 20;\n  const positions = [\n    {\n      // Pending\n      text: {\n        x: -34,\n        y: 8\n      },\n      circle: {\n        x: -24,\n        y: 8\n      }\n    },\n    {\n      // Acquired\n      text: {\n        x: -3,\n        y: 20\n      },\n      circle: {\n        x: 8,\n        y: 20\n      }\n    },\n    {\n      // Permanent\n      text: {\n        x: -22,\n        y: -22\n      },\n      circle: {\n        x: -6,\n        y: -25\n      }\n    }\n  ];\n\n  return (\n    <g>\n      <circle\n        textAnchor=\"outside\"\n        cx={x + positions[index].circle.x}\n        cy={y + positions[index].circle.y}\n        r={radius}\n        fill={colors[index]}\n      />\n      <text\n        x={x + positions[index].text.x}\n        y={y + positions[index].text.y}\n        fill=\"white\"\n        textAnchor=\"outside\"\n        dominantBaseline=\"middle\"\n      >\n        {treasury[index].share}%\n      </text>\n    </g>\n  );\n};\n\nexport const TreasuryChart = () => {\n  return (\n    <ResponsiveContainer width=\"100%\" height={320}>\n      <PieChart width={100} height={250}>\n        <Tooltip isAnimationActive={false} />\n        <Pie\n          data={treasury}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          outerRadius={110}\n          label={BucketLabel}\n          isAnimationActive={false}\n          strokeOpacity=\"0.55\"\n        >\n          {treasury.map((_, index) => (\n            <Cell key={`label-${index}`} fill={colors[index]} />\n          ))}\n        </Pie>\n        <Pie\n          data={treasury}\n          dataKey=\"value\"\n          nameKey=\"name\"\n          cx=\"50%\"\n          cy=\"50%\"\n          innerRadius={110}\n          outerRadius={136}\n          isAnimationActive={false}\n          strokeOpacity=\"0.55\"\n          label={ShareLabel}\n          labelLine={false}\n        >\n          {treasury.map((_, index) => (\n            <Cell key={`share-${index}`} fill={colors[index]} />\n          ))}\n        </Pie>\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n","import React from \"react\";\nimport { Card, Heading, Text } from \"theme-ui\";\nimport * as l from \"../components/Bonds/lexicon\";\nimport { Statistic } from \"./Statistic\";\nimport { TreasuryChart } from \"./TreasuryChart\";\nimport { useBondView } from \"./Bonds/context/BondViewContext\";\n\ntype BondStatsProps = {\n  variant?: string;\n};\n\ntype MetricProps = {\n  value: string | undefined;\n  unit?: string;\n};\n\nconst Metric: React.FC<MetricProps> = ({ value, unit }) => {\n  return (\n    <>\n      {value}\n      &nbsp;\n      {unit && <Text sx={{ fontWeight: \"light\", fontSize: 1 }}>{unit}</Text>}\n    </>\n  );\n};\n\nexport const BondStats: React.FC<BondStatsProps> = () => {\n  const { treasury, stats, protocolInfo } = useBondView();\n\n  if (treasury === undefined || stats === undefined || protocolInfo === undefined) return null;\n\n  return (\n    <Card variant=\"info\">\n      <Heading sx={{ fontweight: \"bold\" }}>MSD bonds</Heading>\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        bMSD\n      </Heading>\n      <Statistic name={l.BLUSD_MARKET_PRICE.term} tooltip={l.BLUSD_MARKET_PRICE.description}>\n        <Metric value={protocolInfo.marketPrice.prettify(2)} unit=\"MSD\" />\n      </Statistic>\n      <Statistic name={l.BLUSD_FAIR_PRICE.term} tooltip={l.BLUSD_FAIR_PRICE.description}>\n        <Metric value={protocolInfo.fairPrice.prettify(2)} unit=\"MSD\" />\n      </Statistic>\n      <Statistic name={l.BLUSD_FLOOR_PRICE.term} tooltip={l.BLUSD_FLOOR_PRICE.description}>\n        <Metric value={protocolInfo.floorPrice.prettify(2)} unit=\"MSD\" />\n      </Statistic>\n      <Statistic name={l.BLUSD_SUPPLY.term} tooltip={l.BLUSD_SUPPLY.description}>\n        <Metric value={protocolInfo.bLusdSupply.shorten()} unit=\"BMSD\" />\n      </Statistic>\n      <Statistic name={\"Yield amplification\"} tooltip={\"TODO\"}>\n        <Metric value={\"1.1\"} unit=\"x\" />\n      </Statistic>\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        Statistics\n      </Heading>\n      <Statistic\n        name={l.PENDING_BONDS_STATISTIC.term}\n        tooltip={l.PENDING_BONDS_STATISTIC.description}\n      >\n        <Metric value={stats.pendingBonds.prettify(0)} />\n      </Statistic>\n      <Statistic\n        name={l.CANCELLED_BONDS_STATISTIC.term}\n        tooltip={l.CANCELLED_BONDS_STATISTIC.description}\n      >\n        <Metric value={stats.cancelledBonds.prettify(0)} />\n      </Statistic>\n      <Statistic\n        name={l.CLAIMED_BONDS_STATISTIC.term}\n        tooltip={l.CLAIMED_BONDS_STATISTIC.description}\n      >\n        <Metric value={stats.claimedBonds.prettify(0)} />\n      </Statistic>\n      <Statistic name={l.TOTAL_BONDS_STATISTIC.term} tooltip={l.TOTAL_BONDS_STATISTIC.description}>\n        <Metric value={stats.totalBonds.prettify(0)} />\n      </Statistic>\n\n      <Heading as=\"h2\" sx={{ mt: 3, fontWeight: \"body\" }}>\n        Treasury\n      </Heading>\n      <Statistic name={l.TREASURY_PENDING.term} tooltip={l.TREASURY_PENDING.description}>\n        <Metric value={treasury.pending.shorten()} unit=\"MSD\" />\n      </Statistic>\n      <Statistic name={l.TREASURY_ACQUIRED.term} tooltip={l.TREASURY_ACQUIRED.description}>\n        <Metric value={treasury.reserve.shorten()} unit=\"MSD\" />\n      </Statistic>\n      <Statistic name={l.TREASURY_PERMANENT.term} tooltip={l.TREASURY_PERMANENT.description}>\n        <Metric value={treasury.permanent.shorten()} unit=\"MSD\" />\n      </Statistic>\n      <Statistic name={l.TREASURY_TOTAL.term} tooltip={l.TREASURY_TOTAL.description}>\n        <Metric value={treasury.total.shorten()} unit=\"MSD\" />\n      </Statistic>\n\n      <TreasuryChart />\n    </Card>\n  );\n};\n","import { Flex } from \"theme-ui\";\nimport type { ThemeUIStyleObject } from \"theme-ui\";\nimport { keyframes } from \"@emotion/react\";\n\nconst loading = keyframes`\n  from {\n    left: -25%;\n  }\n  to {\n    left: 100%;\n  }\n`;\n\ntype PlaceholderProps = { style?: ThemeUIStyleObject };\n\nexport const Placeholder: React.FC<PlaceholderProps> = ({ style }) => {\n  return (\n    <Flex\n      sx={{\n        position: \"relative\",\n        backgroundColor: \"rgb(225, 230, 230)\",\n        overflow: \"hidden\",\n        borderRadius: \"5px\",\n        height: \"100%\",\n        width: \"100%\",\n        ...style\n      }}\n    >\n      <Flex\n        sx={{\n          position: \"absolute\",\n          left: \"-25%\",\n          height: \"100%\",\n          width: \"45%\",\n          backgroundImage:\n            \"linear-gradient(to left, rgba(251,251,251, .05), rgba(251,251,251, .3), rgba(251,251,251, .6), rgba(251,251,251, .3), rgba(251,251,251, .05))\",\n          animation: `${loading} 1s infinite`\n        }}\n      />\n      &nbsp;\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Flex, Box, Text, Card } from \"theme-ui\";\nimport type { ThemeUIStyleObject } from \"theme-ui\";\nimport { InfoIcon } from \"./InfoIcon\";\nimport { Placeholder } from \"./Placeholder\";\n\nconst mutedGray = \"#d9d9d9\";\n\nconst defaultCircleStyle = {\n  height: \"12px\",\n  width: \"12px\",\n  mx: \"-1px\",\n  borderRadius: \"50%\",\n  border: \"2px solid\",\n  borderColor: mutedGray,\n  background: \"none\",\n  zIndex: 1\n};\nconst solidCircleStyle = {\n  backgroundColor: \"gray\",\n  borderColor: \"gray\"\n};\nconst transparentCircleStyle = {\n  width: \"0px\",\n  mx: \"-2px\",\n  opacity: 0\n};\nconst defaultLineStyle = {\n  height: 4,\n  flexGrow: 1,\n  border: 0,\n  backgroundColor: mutedGray,\n  margin: 0,\n  padding: 0\n};\n\nconst solidLineStyle = {\n  backgroundColor: \"gray\",\n  opacity: 1\n};\n\nconst fadeLineStyle = (leftColor: string, rightColor: string) => ({\n  background: `linear-gradient(to right, ${leftColor}, ${rightColor})`\n});\n\ntype CircleProps = {\n  style?: ThemeUIStyleObject;\n};\n\nconst Circle: React.FC<CircleProps> = ({ style }) => {\n  return <Box sx={{ ...defaultCircleStyle, ...style }} />;\n};\n\ntype LineProps = {\n  style?: ThemeUIStyleObject;\n};\n\nconst Line: React.FC<LineProps> = ({ style }) => {\n  return <Box sx={{ ...defaultLineStyle, ...style }} />;\n};\n\n// Use the maximum possible date to represent unknown\nexport const UNKNOWN_DATE = new Date(8640000000000000);\n\nexport type EventType = {\n  date: Date;\n  label: React.ReactNode;\n  isEndOfLife?: boolean;\n  isMilestone?: boolean;\n  isLoading?: boolean;\n};\n\ntype EventProps = EventType & {\n  isFirst: boolean;\n  isLast: boolean;\n  isPast: boolean;\n};\n\ntype LabelProps = {\n  subLabel?: React.ReactNode;\n  description?: React.ReactNode;\n  style?: ThemeUIStyleObject;\n};\n\ntype SubLabelProps = { style?: ThemeUIStyleObject };\nexport const SubLabel: React.FC<SubLabelProps> = ({ style, children }) => (\n  <Flex\n    sx={{\n      fontWeight: 200,\n      fontSize: \"0.98em\",\n      alignSelf: \"center\",\n      justifyContent: \"center\",\n      flexGrow: 1,\n      ...style\n    }}\n  >\n    {children}\n  </Flex>\n);\n\nexport const Label: React.FC<LabelProps> = ({ children, description, style }) => {\n  return (\n    <Flex\n      sx={{\n        fontWeight: 300,\n        alignSelf: \"center\",\n        alignContent: \"center\",\n        alignItems: \"center\",\n        ...style\n      }}\n    >\n      {children}\n      &nbsp;\n      {description ? (\n        <InfoIcon\n          size=\"xs\"\n          tooltip={\n            <Card variant=\"tooltip\" sx={{ width: \"200px\" }}>\n              {description}\n            </Card>\n          }\n        />\n      ) : null}\n    </Flex>\n  );\n};\n\nconst LoadingEvent: React.FC<{ label: React.ReactNode }> = ({ label }) => {\n  return (\n    <Flex sx={{ flexDirection: \"column\", flexGrow: 1 }}>\n      <Flex sx={{ justifyContent: \"center\" }}>\n        <Placeholder style={{ mx: \"20%\" }} />\n      </Flex>\n      <Flex sx={{ my: 1, alignItems: \"center\" }}>\n        <Line style={defaultLineStyle} />\n        <Circle style={defaultCircleStyle} />\n        <Line style={defaultLineStyle} />\n      </Flex>\n\n      <Flex sx={{ flexDirection: \"column\" }}>{label}</Flex>\n    </Flex>\n  );\n};\nconst Event: React.FC<EventProps> = ({\n  isFirst,\n  isLast,\n  isPast,\n  date,\n  label,\n  isEndOfLife,\n  isMilestone = true,\n  isLoading\n}) => {\n  if (isLoading) return <LoadingEvent label={label} />;\n\n  const isToday = date.toLocaleDateString() === new Date().toLocaleDateString();\n  const isUnknownDate = date.toDateString() === UNKNOWN_DATE.toDateString();\n\n  let circleStyle: ThemeUIStyleObject = { ...defaultCircleStyle };\n  let leftLineStyle: ThemeUIStyleObject = { ...defaultLineStyle };\n  let rightLineStyle: ThemeUIStyleObject = { ...defaultLineStyle };\n\n  if (isPast || isEndOfLife) {\n    circleStyle = { ...solidCircleStyle };\n    leftLineStyle = { ...solidLineStyle };\n  }\n\n  if (isPast) {\n    rightLineStyle = { ...solidLineStyle };\n  }\n\n  if (!isMilestone) {\n    circleStyle = { ...transparentCircleStyle };\n  }\n\n  if (isFirst) {\n    leftLineStyle = { ...leftLineStyle, ...fadeLineStyle(\"white\", \"gray\") };\n  }\n\n  if (isLast) {\n    rightLineStyle = { ...rightLineStyle, ...fadeLineStyle(mutedGray, \"white\") };\n  }\n\n  const dateText =\n    isToday && isEndOfLife\n      ? \"Now\"\n      : isUnknownDate\n      ? \"Unknown\"\n      : date.toLocaleDateString(\"en-GB\", { month: \"short\", day: \"2-digit\", year: \"numeric\" });\n\n  return (\n    <Flex sx={{ flexDirection: \"column\", flexGrow: 1 }}>\n      <Flex sx={{ justifyContent: \"center\" }}>\n        <Text sx={{ fontWeight: 400, alignSelf: \"center\" }}>{dateText}</Text>\n      </Flex>\n      <Flex sx={{ my: 1, alignItems: \"center\" }}>\n        <Line style={leftLineStyle} />\n        <Circle style={circleStyle} />\n        <Line style={rightLineStyle} />\n      </Flex>\n\n      <Flex sx={{ flexDirection: \"column\" }}>{label}</Flex>\n    </Flex>\n  );\n};\n\ntype HorizontalTimelineProps = {\n  events: EventType[];\n  style?: ThemeUIStyleObject;\n};\n\nexport const HorizontalTimeline: React.FC<HorizontalTimelineProps> = ({ events, style }) => {\n  // Order by date, then by whether its selected or not (selected is newer)\n  const orderedEvents = [...events].sort((a, b) =>\n    a.date.getTime() === b.date.getTime()\n      ? Number(a.isEndOfLife) - Number(b.isEndOfLife)\n      : a.date.getTime() > b.date.getTime()\n      ? 1\n      : -1\n  );\n\n  const endOfLifeIdx = orderedEvents.findIndex(event => event.isEndOfLife);\n\n  return (\n    <Flex sx={{ flexGrow: 1, ...style }}>\n      {orderedEvents.map((event, idx) => (\n        <Event\n          key={idx}\n          isFirst={idx === 0}\n          isLast={idx === orderedEvents.length - 1}\n          isPast={idx < endOfLifeIdx}\n          date={event.date}\n          label={event.label}\n          isEndOfLife={event.isEndOfLife}\n          isMilestone={event.isMilestone}\n          isLoading={event.isLoading}\n        />\n      ))}\n    </Flex>\n  );\n};\n","import { ThemeUIStyleObject, Flex, Card, Text } from \"theme-ui\";\nimport { InfoIcon } from \"../InfoIcon\";\nimport { Placeholder } from \"../Placeholder\";\n\ntype RecordType = {\n  name: string;\n  description: string;\n  value?: string;\n  type: string;\n  style?: ThemeUIStyleObject;\n};\n\nexport const Record: React.FC<RecordType> = ({ name, description, value, type, style }) => {\n  return (\n    <Flex sx={{ flexDirection: \"column\", ...style }}>\n      <Flex as=\"h4\" sx={{ fontWeight: \"300\", alignItems: \"baseline\", justifyContent: \"center\" }}>\n        {name} <InfoIcon size=\"xs\" tooltip={<Card variant=\"tooltip\">{description}</Card>} />\n      </Flex>\n      <Text as=\"h3\" sx={{ display: \"flex\", justifyContent: \"center\" }}>\n        {value ? (\n          <Text sx={{ fontWeight: \"400\" }}>{value}</Text>\n        ) : (\n          <Placeholder style={{ mx: \"20%\" }} />\n        )}\n        &nbsp;\n        {value && <Text sx={{ fontWeight: \"light\", opacity: 0.8 }}>{type}</Text>}\n      </Text>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { Button } from \"theme-ui\";\nimport { useBondView } from \"../../../context/BondViewContext\";\nimport type { SelectBondPayload } from \"../../../context/transitions\";\nimport { CANCEL_BOND, CLAIM_BOND } from \"../../../lexicon\";\n\nconst CHICKEN_EMOJI_CURSOR = `url(\"data:image/svg+xml;utf8, <svg xmlns='http://www.w3.org/2000/svg' width='32' height='32'  style='font-size: 24px'><text y='20'>🐔</text></svg>\"), auto`;\ntype ActionsProps = {\n  bondId: string;\n  disabled?: boolean;\n};\n\nexport const Actions: React.FC<ActionsProps> = ({ bondId, disabled = false }) => {\n  const { dispatchEvent } = useBondView();\n\n  const handleCancelBondPressed = () => {\n    dispatchEvent(\"CANCEL_BOND_PRESSED\", { bondId } as SelectBondPayload);\n  };\n\n  const handleClaimBondPressed = () => {\n    console.log(\"CLAIM\", bondId);\n    dispatchEvent(\"CLAIM_BOND_PRESSED\", { bondId } as SelectBondPayload);\n  };\n\n  const cursor = disabled ? \"auto\" : CHICKEN_EMOJI_CURSOR;\n\n  return (\n    <>\n      <Button\n        disabled={disabled}\n        variant=\"outline\"\n        sx={{ height: \"44px\" }}\n        style={{\n          cursor\n        }}\n        onClick={handleCancelBondPressed}\n      >\n        {CANCEL_BOND.term}\n      </Button>\n      <Button\n        disabled={disabled}\n        variant=\"outline\"\n        sx={{ height: \"44px\" }}\n        style={{\n          cursor\n        }}\n        onClick={handleClaimBondPressed}\n      >\n        {CLAIM_BOND.term}\n      </Button>\n    </>\n  );\n};\n","import { Card, Flex, Button, Image, ThemeUIStyleObject } from \"theme-ui\";\nimport { EventType, HorizontalTimeline } from \"../../../HorizontalTimeline\";\nimport { Record } from \"../../Record\";\nimport { Actions } from \"./actions/Actions\";\nimport { BLusdAmmTokenIndex, Bond as BondType, SwapPressedPayload } from \"../../context/transitions\";\nimport { Label, SubLabel } from \"../../../HorizontalTimeline\";\nimport * as l from \"../../lexicon\";\nimport { statuses, useBondView } from \"../../context/BondViewContext\";\n\nconst getBondEvents = (bond: BondType): EventType[] => {\n  return [\n    {\n      date: new Date(bond.startTime),\n      label: (\n        <>\n          <Label description=\"bMSD accrual starts off at 0 and increases over time.\">\n            {l.BOND_CREATED.term}\n          </Label>\n          <SubLabel>{`0.00 bMSD`}</SubLabel>\n        </>\n      )\n    },\n    {\n      date: new Date(bond.status === \"PENDING\" ? Date.now() : bond?.endTime ?? 0),\n      label: (\n        <>\n          <Label description={l.ACCRUED_AMOUNT.description} style={{ fontWeight: 500 }}>\n            {bond.status === \"PENDING\" ? l.ACCRUED_AMOUNT.term : statuses[bond.status]}\n          </Label>\n          <SubLabel style={{ fontWeight: 400 }}>\n            {bond.status === \"PENDING\" ? `${bond.accrued.prettify(2)} bMSD` : \"\"}\n          </SubLabel>\n        </>\n      ),\n      isEndOfLife: true,\n      isMilestone: bond.status !== \"PENDING\"\n    },\n    {\n      date: new Date(bond.breakEvenTime),\n      label: (\n        <>\n          <Label description=\"How many bMSD are required to break-even at the current market price.\">\n            {l.BREAK_EVEN_TIME.term}\n          </Label>\n          <SubLabel>{`${bond?.breakEvenAccrual?.prettify(2) ?? \"?\"} bMSD`}</SubLabel>\n        </>\n      )\n    },\n    {\n      date: new Date(bond.rebondTime),\n      label: (\n        <>\n          <Label description=\"How many bMSD are recommended before claiming the bond, selling the bMSD for MSD, and then opening another bond.\">\n            {l.OPTIMUM_REBOND_TIME.term}\n          </Label>\n          <SubLabel>{`${bond?.rebondAccrual?.prettify(2) ?? \"?\"} bMSD`}</SubLabel>\n        </>\n      )\n    }\n  ];\n};\n\ntype BondProps = { bond: BondType; style?: ThemeUIStyleObject };\n\nexport const Bond: React.FC<BondProps> = ({ bond, style }) => {\n  const events = getBondEvents(bond);\n  const { dispatchEvent } = useBondView();\n\n  const handleSellBLusdPressed = () => {\n    dispatchEvent(\"SWAP_PRESSED\", { inputToken: BLusdAmmTokenIndex.BLUSD } as SwapPressedPayload);\n  };\n\n  return (\n    <Flex\n      sx={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: \"12px\",\n        ...style\n      }}\n    >\n      <Flex\n        sx={{\n          flexShrink: 0,\n          boxShadow: 2,\n          borderRadius: 8.5,\n          border: 1,\n          borderColor: \"muted\",\n          bg: \"background\"\n        }}\n      >\n        <Image\n          sx={{ cursor: \"pointer\", minWidth: \"150px\" }}\n          src={bond.tokenUri}\n          alt=\"TODO\"\n          onClick={() => {\n            window.open(\"https://testnets.opensea.io/\", \"_blank\");\n          }}\n        />\n      </Flex>\n      <Card mt={[0, 0, 0, 0]} sx={{ borderRadius: 12, flexGrow: 1 }}>\n        <Flex p={[2, 3]} sx={{ flexDirection: \"column\" }}>\n          <HorizontalTimeline\n            style={{ fontSize: \"14.5px\", justifyContent: \"center\", pt: 2, mx: 3 }}\n            events={events}\n          />\n\n          <Flex mt={4} variant=\"layout.actions\" sx={{ justifyContent: \"flex-end\" }}>\n            <Flex\n              sx={{\n                justifyContent: \"flex-start\",\n                flexGrow: 1,\n                alignItems: \"center\",\n                pl: 4,\n                gap: \"0 28px\",\n                fontSize: \"14.5px\"\n              }}\n            >\n              <Record\n                name={l.BOND_DEPOSIT.term}\n                value={bond.deposit.prettify(2)}\n                type=\"MSD\"\n                description={l.BOND_DEPOSIT.description}\n              />\n              {bond.status === \"PENDING\" && (\n                <Record\n                  name={l.MARKET_VALUE.term}\n                  value={bond?.marketValue?.prettify(2) ?? \"0\"}\n                  type=\"MSD\"\n                  description={l.MARKET_VALUE.description}\n                />\n              )}\n            </Flex>\n            {bond.status === \"PENDING\" && <Actions bondId={bond.id} />}\n            {bond.status !== \"PENDING\" && bond.status === \"CLAIMED\" && (\n              <Button variant=\"outline\" sx={{ height: \"44px\" }} onClick={handleSellBLusdPressed}>\n                Sell bMSD\n              </Button>\n            )}\n          </Flex>\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n","import { Card, Flex, ThemeUIStyleObject } from \"theme-ui\";\nimport { EventType, HorizontalTimeline, UNKNOWN_DATE } from \"../../../HorizontalTimeline\";\nimport { Record } from \"../../Record\";\nimport { Actions } from \"./actions/Actions\";\nimport type { OptimisticBond as OptimisticBondType } from \"../../context/transitions\";\nimport { Label, SubLabel } from \"../../../HorizontalTimeline\";\nimport * as l from \"../../lexicon\";\nimport { Placeholder } from \"../../../Placeholder\";\n\nconst getBondEvents = (bond: OptimisticBondType): EventType[] => {\n  return [\n    {\n      date: new Date(bond.startTime),\n      label: (\n        <>\n          <Label description=\"bMSD accrual starts off at 0 and increases over time.\">\n            {l.BOND_CREATED.term}\n          </Label>\n          <SubLabel>{`0.00 bMSD`}</SubLabel>\n        </>\n      )\n    },\n    {\n      date: new Date(Date.now()),\n      label: (\n        <>\n          <Label description={l.ACCRUED_AMOUNT.description} style={{ fontWeight: 500 }}>\n            {l.ACCRUED_AMOUNT.term}\n          </Label>\n          <SubLabel style={{ fontWeight: 400 }}></SubLabel>\n        </>\n      ),\n      isEndOfLife: true\n    },\n    {\n      date: UNKNOWN_DATE,\n      label: (\n        <>\n          <Label description=\"How many bMSD are required to break-even at the current market price.\">\n            {l.BREAK_EVEN_TIME.term}\n          </Label>\n          <SubLabel style={{ fontWeight: 400 }}></SubLabel>\n        </>\n      ),\n      isLoading: true\n    },\n    {\n      date: UNKNOWN_DATE,\n      label: (\n        <>\n          <Label description=\"How many bMSD are recommended before claiming the bond, selling the bMSD for MSD, and then opening another bond.\">\n            {l.OPTIMUM_REBOND_TIME.term}\n          </Label>\n          <SubLabel style={{ fontWeight: 400 }}></SubLabel>\n        </>\n      ),\n      isLoading: true\n    }\n  ];\n};\n\ntype BondProps = { bond: OptimisticBondType; style?: ThemeUIStyleObject };\n\nexport const OptimisticBond: React.FC<BondProps> = ({ bond, style }) => {\n  const events = getBondEvents(bond);\n\n  return (\n    <Flex\n      sx={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: \"12px\",\n        ...style\n      }}\n    >\n      <Flex sx={{ width: 150, height: 210 }}>\n        <Placeholder />\n      </Flex>\n      <Card mt={[0, 0, 0, 0]} sx={{ borderRadius: 12, flexGrow: 1 }}>\n        <Flex p={[2, 3]} sx={{ flexDirection: \"column\" }}>\n          <HorizontalTimeline\n            style={{ fontSize: \"14.5px\", justifyContent: \"center\", pt: 2, mx: 3 }}\n            events={events}\n          />\n\n          <Flex mt={4} variant=\"layout.actions\" sx={{ justifyContent: \"flex-end\" }}>\n            <Flex\n              sx={{\n                justifyContent: \"flex-start\",\n                flexGrow: 1,\n                alignItems: \"center\",\n                pl: 4,\n                gap: \"0 28px\",\n                fontSize: \"14.5px\"\n              }}\n            >\n              <Record\n                name={l.BOND_DEPOSIT.term}\n                value={bond.deposit.prettify(2)}\n                type=\"MSD\"\n                description={l.BOND_DEPOSIT.description}\n              />\n\n              <Record\n                name={l.MARKET_VALUE.term}\n                type=\"MSD\"\n                description={l.MARKET_VALUE.description}\n              />\n            </Flex>\n            <Actions bondId={bond.id} disabled />\n          </Flex>\n        </Flex>\n      </Card>\n    </Flex>\n  );\n};\n","import { useParams } from \"react-router-dom\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport type { BondStatus, Bond as BondType } from \"../../context/transitions\";\nimport { Bond } from \"./Bond\";\nimport { OptimisticBond } from \"./OptimisticBond\";\n\ntype BondFilter = \"pending\" | \"claimed\" | \"cancelled\";\n\nconst bondFilterToBondStatusMap: Record<BondFilter, BondStatus> = {\n  pending: \"PENDING\",\n  claimed: \"CLAIMED\",\n  cancelled: \"CANCELLED\"\n};\n\nconst getFilteredBonds = (bonds: BondType[], bondFilter: BondFilter) =>\n  bonds.filter(bond => bond.status === bondFilterToBondStatusMap[bondFilter]);\n\ntype FilteredBondsParams = { bondFilter: BondFilter | \"all\" };\n\nexport const FilteredBondList = () => {\n  const { bonds, optimisticBond } = useBondView();\n  const { bondFilter } = useParams<FilteredBondsParams>();\n\n  if (bonds === undefined) return null;\n\n  const isAllOrPending = bondFilter === \"all\" || bondFilter === \"pending\";\n  const showOptimisticBond = optimisticBond !== undefined && isAllOrPending;\n\n  const filteredBonds = bondFilter === \"all\" ? bonds : getFilteredBonds(bonds, bondFilter);\n\n  return (\n    <>\n      {\n        // @ts-ignore (TS doesn't realise optimisticBond can't be undefined here)\n        showOptimisticBond && <OptimisticBond bond={optimisticBond} style={{ mt: \"16px\" }} />\n      }\n      {filteredBonds.map((bond: BondType, idx: number) => {\n        const isFirst = idx === 0 && !showOptimisticBond;\n        const style = { mt: isFirst ? \"16px\" : \"32px\" };\n        return <Bond bond={bond} key={idx} style={style} />;\n      })}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Flex } from \"theme-ui\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport { Link } from \"../../../Link\";\nimport { FilteredBondList } from \"./FilteredBondList\";\nimport { useBondView } from \"../../context/BondViewContext\";\n\nexport const BondList: React.FC = () => {\n  const { bonds } = useBondView();\n  const { url, path } = useRouteMatch();\n\n  return (\n    <>\n      {bonds && (\n        <Flex as=\"nav\" mt={2}>\n          <Link to={`${url}/all`} p={2}>\n            All\n          </Link>\n          <Link to={`${url}/pending`} p={2}>\n            Pending\n          </Link>\n          <Link to={`${url}/claimed`} p={2}>\n            Claimed\n          </Link>\n          <Link to={`${url}/cancelled`} p={2}>\n            Cancelled\n          </Link>\n        </Flex>\n      )}\n\n      <Switch>\n        <Route exact path={path}>\n          <Redirect to={`${path}/all`} />\n        </Route>\n        <Route path={`${path}/:bondFilter`}>\n          <FilteredBondList />\n        </Route>\n      </Switch>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, Box, Heading, Flex, Button } from \"theme-ui\";\nimport { Empty } from \"./Empty\";\nimport { BondList } from \"./BondList\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { BONDS } from \"../../lexicon\";\nimport { InfoIcon } from \"../../../InfoIcon\";\nimport { LUSD_OVERRIDE_ADDRESS } from \"@liquity/chicken-bonds/lusd/addresses\";\nimport { BLusdAmmTokenIndex, SwapPressedPayload } from \"../../context/transitions\";\n\nexport const Idle: React.FC = () => {\n  const { dispatchEvent, bonds, getLusdFromFaucet, lusdBalance, lpTokenBalance } = useBondView();\n\n  const hasBonds = bonds !== undefined && bonds.length > 0;\n\n  const showLusdFaucet = LUSD_OVERRIDE_ADDRESS !== null && lusdBalance?.eq(0);\n\n  const handleAddLiquidityPressed = () => dispatchEvent(\"ADD_LIQUIDITY_PRESSED\");\n  const handleManageLiquidityPressed = () => dispatchEvent(\"MANAGE_LIQUIDITY_PRESSED\");\n\n  const handleBuyBLusdPressed = () =>\n    dispatchEvent(\"SWAP_PRESSED\", { inputToken: BLusdAmmTokenIndex.LUSD } as SwapPressedPayload);\n\n  const handleSellBLusdPressed = () =>\n    dispatchEvent(\"SWAP_PRESSED\", { inputToken: BLusdAmmTokenIndex.BLUSD } as SwapPressedPayload);\n\n  return (\n    <>\n      <Flex variant=\"layout.actions\" sx={{ mt: 4, mb: 3 }}>\n        {lpTokenBalance?.nonZero ? (\n          <Button variant=\"outline\" onClick={handleManageLiquidityPressed}>\n            Manage liquidity\n          </Button>\n        ) : (\n          <Button variant=\"outline\" onClick={handleAddLiquidityPressed}>\n            Add liquidity\n          </Button>\n        )}\n\n        <Button variant=\"outline\" onClick={handleBuyBLusdPressed}>\n          Buy bMSD\n        </Button>\n\n        <Button variant=\"outline\" onClick={handleSellBLusdPressed}>\n          Sell bMSD\n        </Button>\n\n        {showLusdFaucet && (\n          <Button variant={hasBonds ? \"outline\" : \"primary\"} onClick={() => getLusdFromFaucet()}>\n            Get 10k MSD\n          </Button>\n        )}\n\n        {hasBonds && (\n          <Button variant=\"primary\" onClick={() => dispatchEvent(\"CREATE_BOND_PRESSED\")}>\n            Create another bond\n          </Button>\n        )}\n      </Flex>\n\n      {!hasBonds && (\n        <Card>\n          <Heading>\n            <Flex>\n              {BONDS.term}\n              <InfoIcon\n                placement=\"left\"\n                size=\"xs\"\n                tooltip={<Card variant=\"tooltip\">{BONDS.description}</Card>}\n              />\n            </Flex>\n          </Heading>\n          <Box sx={{ p: [2, 3] }}>\n            <Empty />\n\n            <Flex variant=\"layout.actions\" mt={4}>\n              <Button variant=\"primary\" onClick={() => dispatchEvent(\"CREATE_BOND_PRESSED\")}>\n                Create bond\n              </Button>\n            </Flex>\n          </Box>\n        </Card>\n      )}\n\n      {hasBonds && <BondList />}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Flex, Button, Text, Spinner } from \"theme-ui\";\nimport { ActionDescription } from \"../../../../../ActionDescription\";\nimport { useBondView } from \"../../../../context/BondViewContext\";\n\nexport const Cancel: React.FC = () => {\n  const { dispatchEvent, selectedBond: bond, statuses } = useBondView();\n\n  const isProcessingTransaction = statuses.CANCEL === \"PENDING\";\n\n  const handleConfirmPressed = () => {\n    dispatchEvent(\"CONFIRM_PRESSED\");\n  };\n\n  const handleBackPressed = () => {\n    dispatchEvent(\"BACK_PRESSED\");\n  };\n\n  if (bond === undefined) return null;\n\n  return (\n    <>\n      <ActionDescription>\n        You will receive your bonded{\" \"}\n        <Text sx={{ fontWeight: \"bold\" }}>{bond.deposit.prettify(2)} MSD</Text> back and forgo{\" \"}\n        <Text sx={{ fontWeight: \"bold\" }}>{bond.accrued.shorten()} bMSD</Text>\n      </ActionDescription>\n\n      <Flex variant=\"layout.actions\">\n        <Button variant=\"cancel\" onClick={handleBackPressed} disabled={isProcessingTransaction}>\n          Back\n        </Button>\n        <Button variant=\"primary\" onClick={handleConfirmPressed} disabled={isProcessingTransaction}>\n          {!isProcessingTransaction && <>Confirm</>}\n          {isProcessingTransaction && <Spinner size=\"28px\" sx={{ color: \"white\" }} />}\n        </Button>\n      </Flex>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Flex, Button, Text, Spinner } from \"theme-ui\";\nimport { ActionDescription } from \"../../../../../ActionDescription\";\nimport { useBondView } from \"../../../../context/BondViewContext\";\n\nexport const Claim: React.FC = () => {\n  const { dispatchEvent, selectedBond: bond, statuses } = useBondView();\n\n  const isProcessingTransaction = statuses.CLAIM === \"PENDING\";\n\n  const handleConfirmPressed = () => {\n    dispatchEvent(\"CONFIRM_PRESSED\");\n  };\n\n  const handleBackPressed = () => {\n    dispatchEvent(\"BACK_PRESSED\");\n  };\n\n  if (bond === undefined) return null;\n\n  return (\n    <>\n      <ActionDescription>\n        You will receive <Text sx={{ fontWeight: \"bold\" }}>{bond.accrued.prettify(2)} bMSD</Text>{\" \"}\n        and forgo your bonded{\" \"}\n        <Text sx={{ fontWeight: \"bold\" }}>{bond.deposit.prettify(2)} MSD</Text>\n      </ActionDescription>\n\n      <Flex variant=\"layout.actions\">\n        <Button variant=\"cancel\" onClick={handleBackPressed} disabled={isProcessingTransaction}>\n          Back\n        </Button>\n        <Button variant=\"primary\" onClick={handleConfirmPressed} disabled={isProcessingTransaction}>\n          {!isProcessingTransaction && <>Confirm</>}\n          {isProcessingTransaction && <Spinner size=\"28px\" sx={{ color: \"white\" }} />}\n        </Button>\n      </Flex>\n    </>\n  );\n};\n","import React from \"react\";\nimport Modal from \"react-modal\";\n\nconst modalStyle = {\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    maxWidth: \"620px\",\n    width: \"580px\",\n    maxHeight: \"94vh\"\n  },\n  overlay: { zIndex: 2 }\n};\n\ntype ModalProps = {\n  onDismiss: () => void;\n  style?: React.CSSProperties;\n};\n\nexport const ReactModal: React.FC<ModalProps> = ({ children, onDismiss, style }) => {\n  const handleDismiss = () => onDismiss();\n\n  return (\n    <Modal\n      isOpen={true}\n      onRequestClose={handleDismiss}\n      style={{ ...modalStyle, content: { ...modalStyle.content, ...style } }}\n      contentLabel=\"TODO\"\n    >\n      {children}\n    </Modal>\n  );\n};\n","import { Decimal } from \"@liquity/lib-base\";\nimport { BigNumber } from \"ethers\";\n\nconst milliseconds = (seconds: number) => seconds * 1000;\n\nconst toFloat = (decimal: Decimal): number => parseFloat(decimal.toString());\n\nconst numberify = (bigNumber: BigNumber): number => bigNumber.toNumber();\n\nconst decimalify = (bigNumber: BigNumber): Decimal =>\n  Decimal.fromBigNumberString(bigNumber.toHexString());\n\nconst percentify = (fraction: number): number => fraction * 100;\n\nconst secondsToDays = (seconds: number): number => seconds / 60 / 60 / 24;\n\nconst daysToMilliseconds = (days: number): number => days * 60 * 60 * 24 * 1000;\n\nconst getBondAgeInDays = (startTime: number): number =>\n  secondsToDays((Date.now() - startTime) / 1000);\n\nconst dateWithoutHours = (timestamp: number) => new Date(new Date(timestamp).toDateString());\n\n// Decimal type doesn't support negatives so use number instead\nconst getReturn = (accrued: Decimal, deposit: Decimal, marketPrice: Decimal): number => {\n  const accruedLusdValue = accrued.mul(marketPrice);\n  return parseFloat(accruedLusdValue.toString()) - parseFloat(deposit.toString());\n};\n\nconst getTokenUri = (encodedTokenUri: string): string => {\n  // HACK/TODO: new goerli deployment has fixed data format issue, switch to it\n  const dataStartIndex = encodedTokenUri.indexOf(\"base64,\") + \"base64,\".length;\n  if (dataStartIndex === -1) return \"TODO:\"; // TODO: should we render an error image?\n\n  const hack = atob(encodedTokenUri.slice(dataStartIndex))\n    .replace(`\"background_color\":`, `,\"background_color\":`) // Goerli fix\n    .replace(\",,\", \",\"); // Rinkeby fix\n\n  const tokenUri = JSON.parse(hack)?.image;\n  return tokenUri;\n};\n\nconst getBreakEvenDays = (\n  alphaAccrualFactor: Decimal,\n  marketPricePremium: Decimal,\n  claimBondFee: Decimal\n): Decimal => {\n  const effectivePremium = marketPricePremium.mul(Decimal.ONE.sub(claimBondFee));\n  if (effectivePremium.lte(Decimal.ONE)) return Decimal.INFINITY;\n  return alphaAccrualFactor.div(effectivePremium.sub(Decimal.ONE));\n};\n\nconst getFutureBLusdAccrualFactor = (\n  floorPrice: Decimal,\n  daysInFuture: Decimal,\n  alphaAccrualFactor: Decimal,\n  bondAgeInDays = Decimal.ZERO\n): Decimal => {\n  const duration = daysInFuture.sub(bondAgeInDays);\n  return Decimal.ONE.div(floorPrice).mul(duration.div(duration.add(alphaAccrualFactor)));\n};\n\nconst getRebondDays = (\n  alphaAccrualFactor: Decimal,\n  marketPricePremium: Decimal,\n  claimBondFee: Decimal\n): Decimal => {\n  const effectivePremium = Decimal.ONE.sub(claimBondFee).mul(marketPricePremium);\n  if (effectivePremium.lte(Decimal.ONE)) return Decimal.INFINITY;\n  const sqrt = Decimal.from(Math.sqrt(parseFloat(effectivePremium.toString())));\n  const dividend = Decimal.ONE.add(sqrt);\n  const divisor = effectivePremium.sub(Decimal.ONE);\n  return alphaAccrualFactor.mul(dividend.div(divisor));\n};\n\nconst getFutureDateByDays = (days: number): Date => {\n  return new Date(Math.round(Date.now() + daysToMilliseconds(days)));\n};\n\nexport {\n  milliseconds,\n  toFloat,\n  numberify,\n  decimalify,\n  percentify,\n  getBondAgeInDays,\n  daysToMilliseconds,\n  dateWithoutHours,\n  getReturn,\n  getTokenUri,\n  getFutureBLusdAccrualFactor,\n  getBreakEvenDays,\n  getRebondDays,\n  getFutureDateByDays\n};\n","/** @jsxImportSource theme-ui */\nimport React from \"react\";\nimport { Flex, Heading, Grid, Close, Box } from \"theme-ui\";\nimport { Record } from \"../../Record\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { HorizontalTimeline, Label, SubLabel } from \"../../../HorizontalTimeline\";\nimport type { EventType } from \"../../../HorizontalTimeline\";\nimport * as l from \"../../lexicon\";\nimport { Cancel } from \"./actions/cancel/Cancel\";\nimport { Claim } from \"./actions/claim/Claim\";\nimport { Warning } from \"../../../Warning\";\nimport { ReactModal } from \"../../../ReactModal\";\nimport { percentify } from \"../../utils\";\n\nexport const Actioning: React.FC = () => {\n  const { dispatchEvent, view, selectedBond: bond } = useBondView();\n\n  const handleDismiss = () => {\n    dispatchEvent(\"ABORT_PRESSED\");\n  };\n\n  if (bond === undefined) return null;\n\n  let Actions;\n  switch (view) {\n    case \"CANCELLING\": {\n      Actions = <Cancel />;\n      break;\n    }\n    case \"CLAIMING\": {\n      Actions = <Claim />;\n      break;\n    }\n  }\n\n  const events: EventType[] = [\n    {\n      date: new Date(bond.startTime),\n      label: (\n        <>\n          <Label>{l.BOND_CREATED.term}</Label>\n          <SubLabel>{`0 bMSD`}</SubLabel>\n        </>\n      )\n    },\n    {\n      date: new Date(bond.breakEvenTime),\n      label: (\n        <>\n          <Label>{l.BREAK_EVEN_TIME.term}</Label>\n          <SubLabel>{`${bond.breakEvenAccrual.prettify(2)} bMSD`}</SubLabel>\n        </>\n      )\n    },\n    {\n      date: new Date(bond.rebondTime),\n      label: (\n        <>\n          <Label>{l.OPTIMUM_REBOND_TIME.term}</Label>\n          <SubLabel>{`${bond.rebondAccrual.prettify(2)} bMSD`}</SubLabel>\n        </>\n      )\n    },\n    {\n      date: new Date(Date.now()),\n      label: (\n        <>\n          <Label description={l.ACCRUED_AMOUNT.description} style={{ fontWeight: 500 }}>\n            {l.ACCRUED_AMOUNT.term}\n          </Label>\n          <SubLabel style={{ fontWeight: 400 }}>{`${bond.accrued.prettify(2)} bMSD`}</SubLabel>\n        </>\n      ),\n      isEndOfLife: true,\n      isMilestone: false\n    }\n  ];\n\n  return (\n    <ReactModal onDismiss={handleDismiss}>\n      <Heading as=\"h2\" sx={{ pt: 2, pb: 3, px: 2 }}>\n        <Flex sx={{ justifyContent: \"center\" }}>\n          {view === \"CANCELLING\" ? l.CANCEL_BOND.term : l.CLAIM_BOND.term}\n        </Flex>\n        <Close\n          onClick={handleDismiss}\n          sx={{\n            position: \"absolute\",\n            right: \"24px\",\n            top: \"24px\"\n          }}\n        />\n      </Heading>\n      <Flex m={4} sx={{ justifyContent: \"center\" }}>\n        <HorizontalTimeline events={events} />\n      </Flex>\n      <Grid gap=\"12px\" columns={3} sx={{ my: 4, justifyItems: \"center\" }}>\n        <Record\n          name={l.BOND_DEPOSIT.term}\n          value={bond.deposit.prettify(2)}\n          type=\"MSD\"\n          description={l.BOND_DEPOSIT.description}\n        />\n\n        <Record\n          name={l.MARKET_VALUE.term}\n          value={bond.marketValue.prettify(2)}\n          type=\"MSD\"\n          description={l.MARKET_VALUE.description}\n        />\n\n        {view === \"CLAIMING\" && (\n          <Record\n            name={l.BOND_RETURN.term}\n            value={bond.claimNowReturn.toFixed(2)}\n            type=\"LUSD\"\n            description={l.BOND_RETURN.description}\n          />\n        )}\n      </Grid>\n      <details>\n        <summary sx={{ pl: 2, mt: 4, cursor: \"pointer\" }}>Rebond estimations</summary>\n        <Grid gap=\"20px\" columns={3} sx={{ my: 2, justifyItems: \"center\" }}>\n          <Record\n            name={l.REBOND_RETURN.term}\n            value={bond.rebondReturn.toFixed(2)}\n            type=\"MSD\"\n            description={l.REBOND_RETURN.description}\n          />\n\n          <Record\n            name={l.REBOND_TIME_ROI.term}\n            value={percentify(bond.rebondRoi).toFixed(2) + \"%\"}\n            type=\"\"\n            description={l.REBOND_TIME_ROI.description}\n          />\n\n          <Record\n            name={l.OPTIMUM_APY.term}\n            value={percentify(bond.rebondApr).toFixed(2) + \"%\"}\n            type=\"\"\n            description={l.OPTIMUM_APY.description}\n          />\n        </Grid>\n      </details>\n\n      <Box mt={3}>\n        {view === \"CLAIMING\" && bond.claimNowReturn < 0 && (\n          <Warning>You are claiming a bond which currently has a negative return</Warning>\n        )}\n        {view === \"CLAIMING\" && bond.accrued.gte(bond.rebondAccrual) && (\n          <Warning>Your bond is ready to rebond - you've accrued more bMSD than required</Warning>\n        )}\n        {view === \"CANCELLING\" && bond.accrued.gte(bond.breakEvenAccrual) && (\n          <Warning>Your are cancelling a bond which has accrued a positive return</Warning>\n        )}\n      </Box>\n\n      {Actions}\n    </ReactModal>\n  );\n};\n","import { createContext, useContext, useState } from \"react\";\n\ntype ReactComponent = Function & (React.FC<any> | React.ComponentClass);\n\nexport type WizardContextType = {\n  next: (() => void) | null;\n  back: (() => void) | null;\n  go: ((component: ReactComponent) => void) | null;\n};\n\nexport const WizardContext = createContext<WizardContextType | null>(null);\n\nexport const useWizard = (): WizardContextType => {\n  const context: WizardContextType | null = useContext(WizardContext);\n\n  if (context === null) {\n    return {\n      next: null,\n      back: null,\n      go: null\n    };\n  }\n\n  return context;\n};\n\nexport type WizardProviderProps = {\n  children: React.ReactComponentElement<any>[];\n  onCancel?: () => void;\n  onFinish?: () => void;\n};\n\nexport const WizardProvider: React.FC<WizardProviderProps> = ({ children, onCancel, onFinish }) => {\n  const [step, setStep] = useState<number>(0);\n  const [history, setHistory] = useState<number[]>([]);\n\n  const next = () => {\n    if (step === children.length - 1 && onFinish) return onFinish();\n    const nextStep = Math.min(children.length - 1, step + 1);\n    setStep(nextStep);\n    setHistory(history.concat(step));\n  };\n\n  const back = () => {\n    if (step === 0 && onCancel) return onCancel();\n    const prev = history.slice(history.length - 1)[0] ?? 0;\n    setStep(prev);\n    setHistory(history.slice(0, history.length - 1));\n  };\n\n  const go = (component: ReactComponent) => {\n    const idx = children.findIndex(child => child.type.name === component.name);\n    if (idx === -1) return;\n    setStep(idx);\n    setHistory(history.concat(step));\n  };\n\n  const provider: WizardContextType = {\n    next,\n    back,\n    go\n  };\n\n  return <WizardContext.Provider value={provider}>{children[step]}</WizardContext.Provider>;\n};\n","import React from \"react\";\nimport { WizardProvider } from \"./Context\";\nimport type { WizardProviderProps } from \"./Context\";\n\nexport const Wizard: React.FC<WizardProviderProps> = ({ children, onFinish, onCancel }) => {\n  return (\n    <WizardProvider onFinish={onFinish} onCancel={onCancel}>\n      {children}\n    </WizardProvider>\n  );\n};\n","import React from \"react\";\nimport { ReactModal } from \"./ReactModal\";\nimport { Wizard } from \"./Wizard/Wizard\";\nimport type { WizardProviderProps } from \"./Wizard/Context\";\n\ntype ModalWizardProps = WizardProviderProps & {\n  onDismiss: () => void;\n  style?: React.CSSProperties;\n};\n\nexport const ModalWizard: React.FC<ModalWizardProps> = ({ children, onDismiss, style }) => {\n  const handleDismiss = () => onDismiss();\n\n  return (\n    <ReactModal onDismiss={handleDismiss} style={style}>\n      <Wizard onCancel={onDismiss}>{children}</Wizard>\n    </ReactModal>\n  );\n};\n","import { BigNumber, CallOverrides, constants, Contract, providers, Signer } from \"ethers\";\nimport {\n  CHICKEN_BOND_MANAGER_ADDRESS,\n  BLUSD_AMM_ADDRESS\n} from \"@liquity/chicken-bonds/lusd/addresses\";\nimport type { BLUSDToken, BondNFT, ChickenBondManager } from \"@liquity/chicken-bonds/lusd/types\";\nimport type { CurveCryptoSwap2ETH } from \"@liquity/chicken-bonds/lusd/types/external\";\nimport type {\n  BondCreatedEventObject,\n  BondCreatedEvent,\n  BondCancelledEventObject,\n  BondCancelledEvent,\n  BondClaimedEventObject,\n  BondClaimedEvent\n} from \"@liquity/chicken-bonds/lusd/types/ChickenBondManager\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport type { LUSDToken } from \"@liquity/lib-ethers/dist/types\";\nimport type { ProtocolInfo, Bond, BondStatus, Stats, Treasury } from \"./transitions\";\nimport {\n  numberify,\n  decimalify,\n  getBondAgeInDays,\n  milliseconds,\n  toFloat,\n  getReturn,\n  getTokenUri,\n  getBreakEvenDays,\n  getFutureBLusdAccrualFactor,\n  getFutureDateByDays,\n  getRebondDays\n} from \"../utils\";\nimport { UNKNOWN_DATE } from \"../../HorizontalTimeline\";\nimport { BLusdAmmTokenIndex } from \"./transitions\";\nimport {\n  AddLiquidityEvent,\n  AddLiquidityEventObject,\n  RemoveLiquidityEvent,\n  RemoveLiquidityEventObject,\n  RemoveLiquidityOneEvent,\n  RemoveLiquidityOneEventObject,\n  TokenExchangeEvent,\n  TokenExchangeEventObject\n} from \"@liquity/chicken-bonds/lusd/types/external/CurveCryptoSwap2ETH\";\n\ntype Maybe<T> = T | undefined;\n\nconst BOND_STATUS: BondStatus[] = [\"NON_EXISTENT\", \"PENDING\", \"CANCELLED\", \"CLAIMED\"];\n\nconst getAccountBonds = async (\n  account: string,\n  bondNft: BondNFT,\n  chickenBondManager: ChickenBondManager,\n  marketPrice: Decimal,\n  alphaAccrualFactor: Decimal,\n  marketPricePremium: Decimal,\n  claimBondFee: Decimal,\n  floorPrice: Decimal\n): Promise<Bond[]> => {\n  const totalBonds = (await bondNft.balanceOf(account)).toNumber();\n\n  const bondIdRequests = Array.from(Array(totalBonds)).map((_, index) =>\n    bondNft.tokenOfOwnerByIndex(account, index)\n  );\n  const bondIds = await Promise.all(bondIdRequests);\n\n  const bondRequests = {\n    deposits: bondIds.map(bondId => bondNft.getBondAmount(bondId)),\n    accrueds: bondIds.map(bondId => chickenBondManager.calcAccruedBLUSD(bondId)),\n    startTimes: bondIds.map(bondId => bondNft.getBondStartTime(bondId)),\n    endTimes: bondIds.map(bondId => bondNft.getBondEndTime(bondId)),\n    statuses: bondIds.map(bondId => bondNft.getBondStatus(bondId)),\n    tokenUris: bondIds.map(bondId => bondNft.tokenURI(bondId))\n  };\n\n  const bondDeposits = await Promise.all(bondRequests.deposits);\n  const bondAccrueds = await Promise.all(bondRequests.accrueds);\n  const bondStartTimes = await Promise.all(bondRequests.startTimes);\n  const bondEndTimes = await Promise.all(bondRequests.endTimes);\n  const bondStatuses = await Promise.all(bondRequests.statuses);\n  const bondTokenUris = await Promise.all(bondRequests.tokenUris);\n\n  const bonds = bondIds\n    .reduce<Bond[]>((accumulator, _, idx) => {\n      const id = numberify(bondIds[idx]).toString();\n      const deposit = decimalify(bondDeposits[idx]);\n      const accrued = decimalify(bondAccrueds[idx]);\n      const startTime = milliseconds(numberify(bondStartTimes[idx]));\n      const endTime = milliseconds(numberify(bondEndTimes[idx]));\n      const status = BOND_STATUS[bondStatuses[idx]];\n      const tokenUri = getTokenUri(bondTokenUris[idx]);\n      const bondAgeInDays = getBondAgeInDays(startTime);\n      const rebondDays = getRebondDays(alphaAccrualFactor, marketPricePremium, claimBondFee);\n      const breakEvenDays = getBreakEvenDays(alphaAccrualFactor, marketPricePremium, claimBondFee);\n      const depositMinusClaimBondFee = Decimal.ONE.sub(claimBondFee).mul(deposit);\n      const rebondAccrual =\n        rebondDays === Decimal.INFINITY\n          ? Decimal.INFINITY\n          : getFutureBLusdAccrualFactor(floorPrice, rebondDays, alphaAccrualFactor).mul(\n              depositMinusClaimBondFee\n            );\n      const breakEvenAccrual =\n        breakEvenDays === Decimal.INFINITY\n          ? Decimal.INFINITY\n          : getFutureBLusdAccrualFactor(floorPrice, breakEvenDays, alphaAccrualFactor).mul(\n              depositMinusClaimBondFee\n            );\n\n      const breakEvenTime =\n        breakEvenDays === Decimal.INFINITY\n          ? UNKNOWN_DATE\n          : getFutureDateByDays(toFloat(breakEvenDays) - bondAgeInDays);\n      const rebondTime =\n        rebondDays === Decimal.INFINITY\n          ? UNKNOWN_DATE\n          : getFutureDateByDays(toFloat(rebondDays) - bondAgeInDays);\n      const marketValue = decimalify(bondAccrueds[idx]).mul(marketPrice);\n\n      // Accrued bLUSD is 0 for cancelled/claimed bonds\n      const claimNowReturn = accrued.isZero ? 0 : getReturn(accrued, deposit, marketPrice);\n      const rebondReturn = accrued.isZero ? 0 : getReturn(rebondAccrual, deposit, marketPrice);\n      const rebondRoi = rebondReturn / toFloat(deposit);\n      const rebondApr = rebondRoi * (365 / toFloat(rebondDays));\n\n      return [\n        ...accumulator,\n        {\n          id,\n          deposit,\n          accrued,\n          startTime,\n          endTime,\n          status,\n          tokenUri,\n          breakEvenAccrual,\n          rebondAccrual,\n          breakEvenTime,\n          rebondTime,\n          marketValue,\n          rebondReturn,\n          claimNowReturn,\n          rebondRoi,\n          rebondApr\n        }\n      ];\n    }, [])\n    .sort((a, b) => (a.startTime > b.startTime ? -1 : a.startTime < b.startTime ? 1 : 0));\n\n  return bonds;\n};\n\nexport const _getProtocolInfo = (\n  marketPrice: Decimal,\n  floorPrice: Decimal,\n  claimBondFee: Decimal,\n  alphaAccrualFactor: Decimal\n) => {\n  const marketPricePremium = marketPrice.div(floorPrice);\n  const hasMarketPremium = marketPricePremium.mul(Decimal.ONE.sub(claimBondFee)).gt(Decimal.ONE);\n\n  const breakEvenDays = getBreakEvenDays(alphaAccrualFactor, marketPricePremium, claimBondFee);\n  const breakEvenTime = getFutureDateByDays(toFloat(breakEvenDays));\n  const rebondDays = getRebondDays(alphaAccrualFactor, marketPricePremium, claimBondFee);\n  const rebondTime = getFutureDateByDays(toFloat(rebondDays));\n  const breakEvenAccrualFactor = getFutureBLusdAccrualFactor(\n    floorPrice,\n    breakEvenDays,\n    alphaAccrualFactor\n  );\n  const rebondAccrualFactor = getFutureBLusdAccrualFactor(\n    floorPrice,\n    rebondDays,\n    alphaAccrualFactor\n  );\n\n  return {\n    marketPricePremium,\n    breakEvenTime,\n    rebondTime,\n    hasMarketPremium,\n    breakEvenAccrualFactor,\n    rebondAccrualFactor,\n    breakEvenDays,\n    rebondDays\n  };\n};\n\nconst getProtocolInfo = async (\n  bLusdToken: BLUSDToken,\n  bLusdAmm: CurveCryptoSwap2ETH,\n  chickenBondManager: ChickenBondManager,\n  reserveSize: Decimal\n): Promise<ProtocolInfo> => {\n  const bLusdSupply = decimalify(await bLusdToken.totalSupply());\n  const marketPrice = Decimal.ONE.div(decimalify(await bLusdAmm.price_oracle()));\n  const fairPrice = marketPrice.mul(1.1); /* TODO: use real formula */\n  const floorPrice = bLusdSupply.isZero ? Decimal.ONE : reserveSize.div(bLusdSupply);\n  const claimBondFee = decimalify(await chickenBondManager.CHICKEN_IN_AMM_FEE());\n  const alphaAccrualFactor = decimalify(await chickenBondManager.accrualParameter()).div(\n    24 * 60 * 60\n  );\n  const {\n    marketPricePremium,\n    breakEvenTime,\n    rebondTime,\n    hasMarketPremium,\n    breakEvenAccrualFactor,\n    rebondAccrualFactor,\n    breakEvenDays,\n    rebondDays\n  } = _getProtocolInfo(marketPrice, floorPrice, claimBondFee, alphaAccrualFactor);\n\n  const simulatedMarketPrice = hasMarketPremium ? marketPrice : floorPrice.mul(1.1);\n\n  return {\n    bLusdSupply,\n    marketPrice,\n    fairPrice,\n    floorPrice,\n    claimBondFee,\n    alphaAccrualFactor,\n    marketPricePremium,\n    breakEvenTime,\n    rebondTime,\n    hasMarketPremium,\n    breakEvenAccrualFactor,\n    rebondAccrualFactor,\n    breakEvenDays,\n    rebondDays,\n    simulatedMarketPrice\n  };\n};\n\nconst getStats = async (chickenBondManager: ChickenBondManager): Promise<Stats> => {\n  const [pendingBonds, cancelledBonds, claimedBonds] = await Promise.all([\n    chickenBondManager.getOpenBondCount(),\n    chickenBondManager.countChickenOut(),\n    chickenBondManager.countChickenIn()\n  ]);\n\n  const totalBonds = pendingBonds.add(cancelledBonds).add(claimedBonds);\n\n  return {\n    pendingBonds: Decimal.from(pendingBonds.toString()),\n    cancelledBonds: Decimal.from(cancelledBonds.toString()),\n    claimedBonds: Decimal.from(claimedBonds.toString()),\n    totalBonds: Decimal.from(totalBonds.toString())\n  };\n};\n\nconst getTreasury = async (chickenBondManager: ChickenBondManager): Promise<Treasury> => {\n  const [pending, reserve, permanent] = await chickenBondManager.getTreasury();\n\n  return {\n    pending: decimalify(pending),\n    reserve: decimalify(reserve),\n    permanent: decimalify(permanent),\n    total: decimalify(pending.add(reserve).add(permanent))\n  };\n};\n\n// Very minimal type that only contains what we need\nexport interface ERC20 {\n  balanceOf(account: string, _overrides?: CallOverrides): Promise<BigNumber>;\n  totalSupply(_overrides?: CallOverrides): Promise<BigNumber>;\n}\n\nconst erc20From = (tokenAddress: string, signerOrProvider: Signer | providers.Provider) =>\n  (new Contract(\n    tokenAddress,\n    [\n      \"function balanceOf(address) view returns (uint256)\",\n      \"function totalSupply() view returns (uint256)\"\n    ],\n    signerOrProvider\n  ) as unknown) as ERC20;\n\nconst getLpToken = async (pool: CurveCryptoSwap2ETH) =>\n  erc20From(await pool.token(), pool.signer ?? pool.provider);\n\nconst getTokenBalance = async (account: string, token: ERC20): Promise<Decimal> => {\n  return decimalify(await token.balanceOf(account));\n};\n\nconst getTokenTotalSupply = async (token: ERC20): Promise<Decimal> => {\n  return decimalify(await token.totalSupply());\n};\n\nconst isInfiniteBondApproved = async (account: string, lusdToken: LUSDToken): Promise<boolean> => {\n  const allowance = await lusdToken.allowance(account, CHICKEN_BOND_MANAGER_ADDRESS);\n\n  // Unlike bLUSD, LUSD doesn't explicitly handle infinite approvals, therefore the allowance will\n  // start to decrease from 2**64.\n  // However, it is practically impossible that it would decrease below 2**63.\n  return allowance.gt(constants.MaxInt256);\n};\n\nconst approveInfiniteBond = async (lusdToken: LUSDToken | undefined): Promise<void> => {\n  if (lusdToken === undefined) throw new Error(\"approveInfiniteBond() failed: a dependency is null\");\n  console.log(\"approveInfiniteBond() started\");\n  try {\n    await (await lusdToken.approve(CHICKEN_BOND_MANAGER_ADDRESS, constants.MaxUint256._hex)).wait();\n    console.log(\"approveInfiniteBond() succceeded\");\n  } catch (error: unknown) {\n    throw new Error(`approveInfiniteBond() failed: ${error}`);\n  }\n};\n\nconst createBond = async (\n  lusdAmount: Decimal,\n  chickenBondManager: ChickenBondManager | undefined\n): Promise<BondCreatedEventObject> => {\n  if (chickenBondManager === undefined) throw new Error(\"createBond() failed: a dependency is null\");\n  const receipt = await (await chickenBondManager.createBond(lusdAmount.hex)).wait();\n  const createdEvent = receipt?.events?.find(\n    e => e.event === \"BondCreated\"\n  ) as Maybe<BondCreatedEvent>;\n\n  if (createdEvent === undefined) {\n    throw new Error(\"createBond() failed: couldn't find BondCreated event\");\n  }\n\n  console.log(\"createBond() finished:\", createdEvent.args);\n  return createdEvent.args;\n};\n\nconst cancelBond = async (\n  bondId: string,\n  minimumLusd: Decimal,\n  chickenBondManager: ChickenBondManager | undefined\n): Promise<BondCancelledEventObject> => {\n  if (chickenBondManager === undefined) throw new Error(\"cancelBond() failed: a dependency is null\");\n  console.log(\"cancelBond() started:\", bondId, minimumLusd.toString());\n  const receipt = await (await chickenBondManager.chickenOut(bondId, minimumLusd.hex)).wait();\n  const cancelledEvent = receipt?.events?.find(\n    e => e.event === \"BondCancelled\"\n  ) as Maybe<BondCancelledEvent>;\n\n  if (cancelledEvent === undefined) {\n    throw new Error(\"cancelBond() failed: couldn't find BondCancelled event\");\n  }\n  console.log(\"cancelBond() finished:\", cancelledEvent.args);\n  return cancelledEvent.args;\n};\n\nconst claimBond = async (\n  bondId: string,\n  chickenBondManager: ChickenBondManager | undefined\n): Promise<BondClaimedEventObject> => {\n  try {\n    if (chickenBondManager === undefined)\n      throw new Error(\"claimBond() failed: a dependency is null\");\n    console.log(\"claimBond() started\", bondId);\n    const receipt = await (await chickenBondManager.chickenIn(bondId)).wait();\n    const bondClaimedEvent = receipt.events?.find(\n      e => e.event === \"BondClaimed\"\n    ) as Maybe<BondClaimedEvent>;\n\n    if (bondClaimedEvent === undefined) {\n      throw new Error(\"claimBond() failed: couldn't find BondClaimed event\");\n    }\n\n    console.log(\"claimBond() finished\", bondClaimedEvent.args);\n    return bondClaimedEvent.args;\n  } catch (error: unknown) {\n    console.error(\"claimBond() failed:\", error);\n    throw error;\n  }\n};\n\nconst isTokenApprovedWithBLusdAmm = async (\n  account: string,\n  token: LUSDToken | BLUSDToken\n): Promise<boolean> => {\n  const allowance = await token.allowance(account, BLUSD_AMM_ADDRESS);\n\n  // Unlike bLUSD, LUSD doesn't explicitly handle infinite approvals, therefore the allowance will\n  // start to decrease from 2**64.\n  // However, it is practically impossible that it would decrease below 2**63.\n  return allowance.gt(constants.MaxInt256);\n};\n\nconst approveTokenWithBLusdAmm = async (token: LUSDToken | BLUSDToken | undefined) => {\n  if (token === undefined) {\n    throw new Error(\"approveTokenWithBLusdAmm() failed: a dependency is null\");\n  }\n\n  await (await token.approve(BLUSD_AMM_ADDRESS, constants.MaxUint256)).wait();\n  return;\n};\n\nconst getOtherToken = (thisToken: BLusdAmmTokenIndex) =>\n  thisToken === BLusdAmmTokenIndex.BLUSD ? BLusdAmmTokenIndex.LUSD : BLusdAmmTokenIndex.BLUSD;\n\nconst getExpectedSwapOutput = async (\n  inputToken: BLusdAmmTokenIndex,\n  inputAmount: Decimal,\n  bLusdAmm: CurveCryptoSwap2ETH\n): Promise<Decimal> =>\n  decimalify(await bLusdAmm.get_dy(inputToken, getOtherToken(inputToken), inputAmount.hex));\n\nconst swapTokens = async (\n  inputToken: BLusdAmmTokenIndex,\n  inputAmount: Decimal,\n  minOutputAmount: Decimal,\n  bLusdAmm: CurveCryptoSwap2ETH | undefined\n): Promise<TokenExchangeEventObject> => {\n  if (bLusdAmm === undefined) throw new Error(\"swapTokens() failed: a dependency is null\");\n\n  const receipt = await (\n    await bLusdAmm[\"exchange(uint256,uint256,uint256,uint256)\"](\n      inputToken,\n      getOtherToken(inputToken),\n      inputAmount.hex,\n      minOutputAmount.hex\n    )\n  ).wait();\n\n  const exchangeEvent = receipt?.events?.find(\n    e => e.event === \"TokenExchange\"\n  ) as Maybe<TokenExchangeEvent>;\n\n  if (exchangeEvent === undefined) {\n    throw new Error(\"swapTokens() failed: couldn't find TokenExchange event\");\n  }\n\n  console.log(\"swapTokens() finished:\", exchangeEvent.args);\n  return exchangeEvent.args;\n};\n\nconst amountsFrom = (bLusdAmount: Decimal, lusdAmount: Decimal) =>\n  Array.from({\n    length: 2,\n    [BLusdAmmTokenIndex.BLUSD]: bLusdAmount.hex,\n    [BLusdAmmTokenIndex.LUSD]: lusdAmount.hex\n  }) as [string, string];\n\nconst getExpectedLpTokens = async (\n  bLusdAmount: Decimal,\n  lusdAmount: Decimal,\n  bLusdAmm: CurveCryptoSwap2ETH\n): Promise<Decimal> =>\n  decimalify(await bLusdAmm.calc_token_amount(amountsFrom(bLusdAmount, lusdAmount)));\n\nconst addLiquidity = async (\n  bLusdAmount: Decimal,\n  lusdAmount: Decimal,\n  minLpTokens: Decimal,\n  bLusdAmm: CurveCryptoSwap2ETH | undefined\n): Promise<AddLiquidityEventObject> => {\n  if (bLusdAmm === undefined) throw new Error(\"addLiquidity() failed: a dependency is null\");\n\n  const amounts = amountsFrom(bLusdAmount, lusdAmount);\n\n  const gasEstimate = await bLusdAmm.estimateGas[\"add_liquidity(uint256[2],uint256)\"](\n    amounts,\n    minLpTokens.hex\n  );\n\n  const receipt = await (\n    await bLusdAmm[\"add_liquidity(uint256[2],uint256)\"](\n      amounts,\n      minLpTokens.hex,\n      { gasLimit: gasEstimate.mul(6).div(5) } // Add 20% overhead (we've seen it fail otherwise)\n    )\n  ).wait();\n\n  const addLiquidityEvent = receipt?.events?.find(\n    e => e.event === \"AddLiquidity\"\n  ) as Maybe<AddLiquidityEvent>;\n\n  if (addLiquidityEvent === undefined) {\n    throw new Error(\"addLiquidity() failed: couldn't find AddLiquidity event\");\n  }\n\n  console.log(\"addLiquidity() finished:\", addLiquidityEvent.args);\n  return addLiquidityEvent.args;\n};\n\nconst getCoinBalances = (pool: CurveCryptoSwap2ETH) =>\n  Promise.all([pool.balances(0).then(decimalify), pool.balances(1).then(decimalify)]);\n\nconst getExpectedWithdrawal = async (\n  burnLp: Decimal,\n  output: BLusdAmmTokenIndex | \"both\",\n  bLusdAmm: CurveCryptoSwap2ETH\n): Promise<Map<BLusdAmmTokenIndex, Decimal>> => {\n  if (output === \"both\") {\n    const lpToken = await getLpToken(bLusdAmm);\n    const [totalLp, coinBalances] = await Promise.all([\n      getTokenTotalSupply(lpToken),\n      getCoinBalances(bLusdAmm)\n    ]);\n\n    if (totalLp.isZero || burnLp.isZero) {\n      return new Map([\n        [BLusdAmmTokenIndex.BLUSD, Decimal.ZERO],\n        [BLusdAmmTokenIndex.LUSD, Decimal.ZERO]\n      ]);\n    }\n\n    return new Map(coinBalances.map((balance, i) => [i, balance.mulDiv(burnLp, totalLp)]));\n  } else {\n    return new Map([\n      [output, await bLusdAmm.calc_withdraw_one_coin(burnLp.hex, output).then(decimalify)]\n    ]);\n  }\n};\n\nconst removeLiquidity = async (\n  burnLpTokens: Decimal,\n  minBLusdAmount: Decimal,\n  minLusdAmount: Decimal,\n  bLusdAmm: CurveCryptoSwap2ETH | undefined\n): Promise<RemoveLiquidityEventObject> => {\n  if (bLusdAmm === undefined) throw new Error(\"removeLiquidity() failed: a dependency is null\");\n\n  const minAmounts = amountsFrom(minBLusdAmount, minLusdAmount);\n\n  const receipt = await (\n    await bLusdAmm[\"remove_liquidity(uint256,uint256[2])\"](burnLpTokens.hex, minAmounts)\n  ).wait();\n\n  const removeLiquidityEvent = receipt?.events?.find(\n    e => e.event === \"RemoveLiquidity\"\n  ) as Maybe<RemoveLiquidityEvent>;\n\n  if (removeLiquidityEvent === undefined) {\n    throw new Error(\"removeLiquidity() failed: couldn't find RemoveLiquidity event\");\n  }\n\n  console.log(\"removeLiquidity() finished:\", removeLiquidityEvent.args);\n  return removeLiquidityEvent.args;\n};\n\nconst removeLiquidityOneCoin = async (\n  burnLpTokens: Decimal,\n  output: BLusdAmmTokenIndex,\n  minAmount: Decimal,\n  bLusdAmm: CurveCryptoSwap2ETH | undefined\n): Promise<RemoveLiquidityOneEventObject> => {\n  if (bLusdAmm === undefined)\n    throw new Error(\"removeLiquidityOneCoin() failed: a dependency is null\");\n\n  const gasEstimate = await bLusdAmm.estimateGas[\n    \"remove_liquidity_one_coin(uint256,uint256,uint256)\"\n  ](burnLpTokens.hex, output, minAmount.hex);\n\n  const receipt = await (\n    await bLusdAmm[\"remove_liquidity_one_coin(uint256,uint256,uint256)\"](\n      burnLpTokens.hex,\n      output,\n      minAmount.hex,\n      { gasLimit: gasEstimate.mul(6).div(5) } // Add 20% overhead (we've seen it fail otherwise)\n    )\n  ).wait();\n\n  const removeLiquidityOneEvent = receipt?.events?.find(\n    e => e.event === \"RemoveLiquidityOne\"\n  ) as Maybe<RemoveLiquidityOneEvent>;\n\n  if (removeLiquidityOneEvent === undefined) {\n    throw new Error(\"removeLiquidityOneCoin() failed: couldn't find RemoveLiquidityOne event\");\n  }\n\n  console.log(\"removeLiquidityOneCoin() finished:\", removeLiquidityOneEvent.args);\n  return removeLiquidityOneEvent.args;\n};\n\nexport type BondsApi = {\n  getAccountBonds: (\n    account: string,\n    bondNft: BondNFT,\n    chickenBondManager: ChickenBondManager,\n    marketPrice: Decimal,\n    alphaAccrualFactor: Decimal,\n    marketPricePremium: Decimal,\n    claimBondFee: Decimal,\n    floorPrice: Decimal\n  ) => Promise<Bond[]>;\n  getStats: (chickenBondManager: ChickenBondManager) => Promise<Stats>;\n  getTreasury: (chickenBondManager: ChickenBondManager) => Promise<Treasury>;\n  getLpToken: (pool: CurveCryptoSwap2ETH) => Promise<ERC20>;\n  getTokenBalance: (account: string, token: ERC20) => Promise<Decimal>;\n  getTokenTotalSupply: (token: ERC20) => Promise<Decimal>;\n  getProtocolInfo: (\n    bLusdToken: BLUSDToken,\n    bLusdAmm: CurveCryptoSwap2ETH,\n    chickenBondManager: ChickenBondManager,\n    reserveSize: Decimal\n  ) => Promise<ProtocolInfo>;\n  approveInfiniteBond: (lusdToken: LUSDToken | undefined) => Promise<void>;\n  isInfiniteBondApproved: (account: string, lusdToken: LUSDToken) => Promise<boolean>;\n  isTokenApprovedWithBLusdAmm: (account: string, token: LUSDToken | BLUSDToken) => Promise<boolean>;\n  approveTokenWithBLusdAmm: (token: LUSDToken | BLUSDToken | undefined) => Promise<void>;\n  getExpectedSwapOutput: (\n    inputToken: BLusdAmmTokenIndex,\n    inputAmount: Decimal,\n    bLusdAmm: CurveCryptoSwap2ETH\n  ) => Promise<Decimal>;\n  swapTokens: (\n    inputToken: BLusdAmmTokenIndex,\n    inputAmount: Decimal,\n    minOutputAmount: Decimal,\n    bLusdAmm: CurveCryptoSwap2ETH | undefined\n  ) => Promise<TokenExchangeEventObject>;\n  getCoinBalances: (pool: CurveCryptoSwap2ETH) => Promise<[Decimal, Decimal]>;\n  getExpectedLpTokens: (\n    bLusdAmount: Decimal,\n    lusdAmount: Decimal,\n    bLusdAmm: CurveCryptoSwap2ETH\n  ) => Promise<Decimal>;\n  addLiquidity: (\n    bLusdAmount: Decimal,\n    lusdAmount: Decimal,\n    minLpTokens: Decimal,\n    bLusdAmm: CurveCryptoSwap2ETH | undefined\n  ) => Promise<AddLiquidityEventObject>;\n  getExpectedWithdrawal: (\n    burnLp: Decimal,\n    output: BLusdAmmTokenIndex | \"both\",\n    bLusdAmm: CurveCryptoSwap2ETH\n  ) => Promise<Map<BLusdAmmTokenIndex, Decimal>>;\n  removeLiquidity: (\n    burnLpTokens: Decimal,\n    minBLusdAmount: Decimal,\n    minLusdAmount: Decimal,\n    bLusdAmm: CurveCryptoSwap2ETH | undefined\n  ) => Promise<RemoveLiquidityEventObject>;\n  removeLiquidityOneCoin: (\n    burnLpTokens: Decimal,\n    output: BLusdAmmTokenIndex,\n    minAmount: Decimal,\n    bLusdAmm: CurveCryptoSwap2ETH | undefined\n  ) => Promise<RemoveLiquidityOneEventObject>;\n  createBond: (\n    lusdAmount: Decimal,\n    chickenBondManager: ChickenBondManager | undefined\n  ) => Promise<BondCreatedEventObject>;\n  cancelBond: (\n    bondId: string,\n    minimumLusd: Decimal,\n    chickenBondManager: ChickenBondManager | undefined\n  ) => Promise<BondCancelledEventObject>;\n  claimBond: (\n    bondId: string,\n    chickenBondManager: ChickenBondManager | undefined\n  ) => Promise<BondClaimedEventObject>;\n};\n\nexport const api: BondsApi = {\n  getAccountBonds,\n  getStats,\n  getTreasury,\n  getLpToken,\n  getTokenBalance,\n  getTokenTotalSupply,\n  getProtocolInfo,\n  approveInfiniteBond,\n  isInfiniteBondApproved,\n  createBond,\n  cancelBond,\n  claimBond,\n  isTokenApprovedWithBLusdAmm,\n  approveTokenWithBLusdAmm,\n  getExpectedSwapOutput,\n  swapTokens,\n  getCoinBalances,\n  getExpectedLpTokens,\n  addLiquidity,\n  getExpectedWithdrawal,\n  removeLiquidity,\n  removeLiquidityOneCoin\n};\n","import { useState, useCallback, useEffect } from \"react\";\nimport { TransactionStatus } from \"../components/Bonds/context/transitions\";\n\nexport function useTransaction<T extends unknown[]>(\n  transactionFunction: (...params: T) => Promise<void>,\n  dependencies: unknown[]\n): [(...params: T) => Promise<void>, TransactionStatus] {\n  const [status, setStatus] = useState<TransactionStatus>(\"IDLE\");\n\n  useEffect(() => {\n    if (status === \"CONFIRMED\" || status === \"FAILED\") {\n      const timeout = setTimeout(() => {\n        setStatus(\"IDLE\");\n      }, 2600);\n      return () => clearTimeout(timeout);\n    }\n  }, [status]);\n\n  const transaction = useCallback(\n    async (...args: T) => {\n      try {\n        setStatus(\"PENDING\");\n        await transactionFunction(...args);\n        setStatus(\"CONFIRMED\");\n      } catch (error: unknown) {\n        setStatus(\"FAILED\");\n        throw new Error(`useTransaction(${args}) ${error}`);\n      }\n    },\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [transactionFunction, ...dependencies]\n  );\n\n  return [transaction, status];\n}\n","import { Flex, Spinner, Heading } from \"theme-ui\";\n\nexport const AppLoader = () => (\n  <Flex sx={{ alignItems: \"center\", justifyContent: \"center\", height: \"100vh\" }}>\n    <Spinner sx={{ m: 2, color: \"text\" }} size=\"32px\" />\n    <Heading>Maddy is cooking...</Heading>\n  </Flex>\n);\n","import { useState, useEffect } from \"react\";\nimport { ContractInterface, ethers } from \"ethers\";\nimport { useLiquity } from \"./LiquityContext\";\n\ntype ContractStatus = \"UNKNOWN\" | \"LOADED\" | \"FAILED\";\ntype Contract<TContractType> = { instance: TContractType | undefined; status: ContractStatus };\n\nexport function useContract<TContractType>(\n  address: string | null,\n  abi: ContractInterface\n): [TContractType | undefined, ContractStatus] {\n  const { provider, liquity } = useLiquity();\n  const [contract, setContract] = useState<Contract<TContractType>>();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (contract !== undefined || address === null) return;\n\n        // TODO: only useful in dev mode\n        const exists = (await provider.getCode(address)) !== \"0x\";\n        if (!exists) throw new Error(`Contract ${address} doesn't exist.`);\n\n        const connectedContract = (new ethers.Contract(\n          address,\n          abi,\n          liquity.connection.signer\n        ) as unknown) as TContractType;\n\n        setContract({ instance: connectedContract, status: \"LOADED\" });\n      } catch (e) {\n        setContract({ instance: undefined, status: \"FAILED\" });\n        console.error(e);\n        console.error(\n          `Contract ${address} doesn't appear to be deployed. Did you forget to re-run yarn deploy:chicken-bonds?`\n        );\n      }\n    })();\n  }, [provider, liquity.connection.signer, address, abi, contract]);\n\n  return [contract?.instance, contract?.status || \"UNKNOWN\"];\n}\n","import type { Decimal } from \"@liquity/lib-base\";\nimport {\n  BLUSDToken,\n  BondNFT,\n  ChickenBondManager,\n  ERC20Faucet,\n  ERC20Faucet__factory\n} from \"@liquity/chicken-bonds/lusd/types\";\nimport type { CurveCryptoSwap2ETH } from \"@liquity/chicken-bonds/lusd/types/external\";\nimport { CurveCryptoSwap2ETH__factory } from \"@liquity/chicken-bonds/lusd/types/external\";\nimport {\n  BLUSDToken__factory,\n  BondNFT__factory,\n  ChickenBondManager__factory\n} from \"@liquity/chicken-bonds/lusd/types\";\nimport {\n  BLUSD_AMM_ADDRESS,\n  BLUSD_TOKEN_ADDRESS,\n  BOND_NFT_ADDRESS,\n  CHICKEN_BOND_MANAGER_ADDRESS,\n  LUSD_OVERRIDE_ADDRESS\n} from \"@liquity/chicken-bonds/lusd/addresses\";\nimport type { LUSDToken } from \"@liquity/lib-ethers/dist/types\";\nimport LUSDTokenAbi from \"@liquity/lib-ethers/abi/LUSDToken.json\";\nimport { useContract } from \"../../../hooks/useContract\";\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { useCallback } from \"react\";\nimport type { BondsApi } from \"./api\";\nimport type { Bond, ProtocolInfo, Stats, Treasury } from \"./transitions\";\nimport { BLusdAmmTokenIndex } from \"./transitions\";\n\ntype BondsInformation = {\n  treasury: Treasury;\n  protocolInfo: ProtocolInfo;\n  bonds: Bond[];\n  stats: Stats;\n  bLusdBalance: Decimal;\n  lusdBalance: Decimal;\n  lpTokenBalance: Decimal;\n  lpTokenSupply: Decimal;\n  bLusdAmmBLusdBalance: Decimal;\n  bLusdAmmLusdBalance: Decimal;\n};\n\ntype BondContracts = {\n  lusdToken: LUSDToken | undefined;\n  bLusdToken: BLUSDToken | undefined;\n  bondNft: BondNFT | undefined;\n  chickenBondManager: ChickenBondManager | undefined;\n  bLusdAmm: CurveCryptoSwap2ETH | undefined;\n  hasFoundContracts: boolean;\n  getLatestData: (account: string, api: BondsApi) => Promise<BondsInformation | undefined>;\n};\n\nexport const useBondContracts = (): BondContracts => {\n  const { liquity } = useLiquity();\n\n  const [lusdTokenDefault, lusdTokenDefaultStatus] = useContract<LUSDToken>(\n    liquity.connection.addresses.lusdToken,\n    LUSDTokenAbi\n  );\n  const [lusdTokenOverride, lusdTokenOverrideStatus] = useContract<ERC20Faucet>(\n    LUSD_OVERRIDE_ADDRESS,\n    ERC20Faucet__factory.abi\n  );\n\n  const [lusdToken, lusdTokenStatus] =\n    LUSD_OVERRIDE_ADDRESS === null\n      ? [lusdTokenDefault, lusdTokenDefaultStatus]\n      : [(lusdTokenOverride as unknown) as LUSDToken, lusdTokenOverrideStatus];\n\n  const [bLusdToken, bLusdTokenStatus] = useContract<BLUSDToken>(\n    BLUSD_TOKEN_ADDRESS,\n    BLUSDToken__factory.abi\n  );\n\n  const [bondNft, bondNftStatus] = useContract<BondNFT>(BOND_NFT_ADDRESS, BondNFT__factory.abi);\n  const [chickenBondManager, chickenBondManagerStatus] = useContract<ChickenBondManager>(\n    CHICKEN_BOND_MANAGER_ADDRESS,\n    ChickenBondManager__factory.abi\n  );\n\n  const [bLusdAmm, bLusdAmmStatus] = useContract<CurveCryptoSwap2ETH>(\n    BLUSD_AMM_ADDRESS,\n    CurveCryptoSwap2ETH__factory.abi\n  );\n\n  const hasFoundContracts =\n    [\n      lusdTokenStatus,\n      bondNftStatus,\n      chickenBondManagerStatus,\n      bLusdTokenStatus,\n      bLusdAmmStatus\n    ].find(status => status === \"FAILED\") === undefined;\n\n  const getLatestData = useCallback(\n    async (account: string, api: BondsApi) => {\n      if (\n        lusdToken === undefined ||\n        bondNft === undefined ||\n        chickenBondManager === undefined ||\n        bLusdToken === undefined ||\n        bLusdAmm === undefined\n      ) {\n        return;\n      }\n\n      const treasury = await api.getTreasury(chickenBondManager);\n      const protocolInfo = await api.getProtocolInfo(\n        bLusdToken,\n        bLusdAmm,\n        chickenBondManager,\n        treasury.reserve\n      );\n      const bonds = await api.getAccountBonds(\n        account,\n        bondNft,\n        chickenBondManager,\n        protocolInfo.marketPrice,\n        protocolInfo.alphaAccrualFactor,\n        protocolInfo.marketPricePremium,\n        protocolInfo.claimBondFee,\n        protocolInfo.floorPrice\n      );\n      const stats = await api.getStats(chickenBondManager);\n\n      // TODO cache LP token? Or add to addresses.json?\n      const lpToken = await api.getLpToken(bLusdAmm);\n\n      const [\n        bLusdBalance,\n        lusdBalance,\n        lpTokenBalance,\n        lpTokenSupply,\n        bLusdAmmCoinBalances\n      ] = await Promise.all([\n        api.getTokenBalance(account, bLusdToken),\n        api.getTokenBalance(account, lusdToken),\n        api.getTokenBalance(account, lpToken),\n        api.getTokenTotalSupply(lpToken),\n        api.getCoinBalances(bLusdAmm)\n      ]);\n\n      return {\n        treasury,\n        protocolInfo,\n        bonds,\n        stats,\n        bLusdBalance,\n        lusdBalance,\n        lpTokenBalance,\n        lpTokenSupply,\n        bLusdAmmBLusdBalance: bLusdAmmCoinBalances[BLusdAmmTokenIndex.BLUSD],\n        bLusdAmmLusdBalance: bLusdAmmCoinBalances[BLusdAmmTokenIndex.LUSD]\n      };\n    },\n    [chickenBondManager, bondNft, bLusdToken, lusdToken, bLusdAmm]\n  );\n\n  return {\n    lusdToken,\n    bLusdToken,\n    bondNft,\n    chickenBondManager,\n    bLusdAmm,\n    getLatestData,\n    hasFoundContracts\n  };\n};\n","import React, { useState, useCallback, useEffect, useRef, useMemo } from \"react\";\nimport { BondViewContext, BondViewContextType } from \"./BondViewContext\";\nimport type {\n  Stats,\n  BondView,\n  BondEvent,\n  Payload,\n  Bond,\n  Treasury,\n  BondTransactionStatuses,\n  CreateBondPayload,\n  ProtocolInfo,\n  OptimisticBond,\n  SwapPayload,\n  ApprovePressedPayload,\n  ManageLiquidityPayload\n} from \"./transitions\";\nimport { BLusdAmmTokenIndex } from \"./transitions\";\nimport { transitions } from \"./transitions\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { useLiquity } from \"../../../hooks/LiquityContext\";\nimport { api, _getProtocolInfo } from \"./api\";\nimport { useTransaction } from \"../../../hooks/useTransaction\";\nimport { AppLoader } from \"../../AppLoader\";\nimport { LUSD_OVERRIDE_ADDRESS } from \"@liquity/chicken-bonds/lusd/addresses\";\nimport type { ERC20Faucet } from \"@liquity/chicken-bonds/lusd/types\";\nimport { useBondContracts } from \"./useBondContracts\";\n\n// Refresh backend values every 15 seconds\nconst SYNCHRONIZE_INTERVAL_MS = 15 * 1000;\n\nconst isValidEvent = (view: BondView, event: BondEvent): boolean => {\n  return transitions[view][event] !== undefined;\n};\n\nconst transition = (view: BondView, event: BondEvent): BondView => {\n  const nextView = transitions[view][event] ?? view;\n  return nextView;\n};\n\nexport const EXAMPLE_NFT = \"./bonds/egg-nft.png\";\n\nexport const BondViewProvider: React.FC = props => {\n  const { children } = props;\n  const [view, setView] = useState<BondView>(\"IDLE\");\n  const viewRef = useRef<BondView>(view);\n  const [selectedBondId, setSelectedBondId] = useState<string>();\n  const [optimisticBond, setOptimisticBond] = useState<OptimisticBond>();\n  const [shouldSynchronize, setShouldSynchronize] = useState<boolean>(true);\n  const [bonds, setBonds] = useState<Bond[]>();\n  const [treasury, setTreasury] = useState<Treasury>();\n  const [stats, setStats] = useState<Stats>();\n  const [protocolInfo, setProtocolInfo] = useState<ProtocolInfo>();\n  const [simulatedProtocolInfo, setSimulatedProtocolInfo] = useState<ProtocolInfo>();\n  const [isInfiniteBondApproved, setIsInfiniteBondApproved] = useState(false);\n  const [isLusdApprovedWithBlusdAmm, setIsLusdApprovedWithBlusdAmm] = useState(false);\n  const [isBLusdApprovedWithBlusdAmm, setIsBLusdApprovedWithBlusdAmm] = useState(false);\n  const [isSynchronizing, setIsSynchronizing] = useState(true);\n  const [inputToken, setInputToken] = useState<BLusdAmmTokenIndex>(BLusdAmmTokenIndex.BLUSD);\n  const [statuses, setStatuses] = useState<BondTransactionStatuses>({\n    APPROVE: \"IDLE\",\n    CREATE: \"IDLE\",\n    CANCEL: \"IDLE\",\n    CLAIM: \"IDLE\",\n    APPROVE_AMM: \"IDLE\",\n    SWAP: \"IDLE\",\n    MANAGE_LIQUIDITY: \"IDLE\"\n  });\n  const [bLusdBalance, setBLusdBalance] = useState<Decimal>();\n  const [lusdBalance, setLusdBalance] = useState<Decimal>();\n  const [lpTokenBalance, setLpTokenBalance] = useState<Decimal>();\n  const [lpTokenSupply, setLpTokenSupply] = useState<Decimal>();\n  const [bLusdAmmBLusdBalance, setBLusdAmmBLusdBalance] = useState<Decimal>();\n  const [bLusdAmmLusdBalance, setBLusdAmmLusdBalance] = useState<Decimal>();\n  const { account, liquity } = useLiquity();\n  const contracts = useBondContracts();\n\n  const setSimulatedMarketPrice = useCallback(\n    (marketPrice: Decimal) => {\n      if (protocolInfo === undefined) return;\n      const simulatedProtocolInfo = _getProtocolInfo(\n        marketPrice,\n        protocolInfo.floorPrice,\n        protocolInfo.claimBondFee,\n        protocolInfo.alphaAccrualFactor\n      );\n\n      setSimulatedProtocolInfo({\n        ...protocolInfo,\n        ...simulatedProtocolInfo,\n        simulatedMarketPrice: marketPrice\n      });\n    },\n    [protocolInfo]\n  );\n\n  const resetSimulatedMarketPrice = useCallback(() => {\n    if (protocolInfo === undefined) return;\n\n    setSimulatedProtocolInfo({ ...protocolInfo });\n  }, [protocolInfo]);\n\n  const removeBondFromList = useCallback(\n    (bondId: string) => {\n      if (bonds === undefined) return;\n      const idx = bonds.findIndex(bond => bond.id === bondId);\n      const nextBonds = bonds.slice(0, idx).concat(bonds.slice(idx + 1));\n      setBonds(nextBonds);\n    },\n    [bonds]\n  );\n\n  const changeBondStatusToClaimed = useCallback(\n    (bondId: string) => {\n      if (bonds === undefined) return;\n      const idx = bonds.findIndex(bond => bond.id === bondId);\n      const updatedBond: Bond = { ...bonds[idx], status: \"CLAIMED\" };\n      const nextBonds = bonds\n        .slice(0, idx)\n        .concat(updatedBond)\n        .concat(bonds.slice(idx + 1));\n      setBonds(nextBonds);\n    },\n    [bonds]\n  );\n\n  /***** TODO: REMOVE */\n  const getLusdFromFaucet = useCallback(async () => {\n    if (contracts.lusdToken === undefined) return;\n    if (\n      LUSD_OVERRIDE_ADDRESS !== null &&\n      (await contracts.lusdToken.balanceOf(account)).eq(0) &&\n      \"tap\" in contracts.lusdToken\n    ) {\n      await (await ((contracts.lusdToken as unknown) as ERC20Faucet).tap()).wait();\n      setShouldSynchronize(true);\n    }\n  }, [contracts.lusdToken, account]);\n\n  useEffect(() => {\n    (async () => {\n      if (account === undefined || liquity === undefined || contracts.lusdToken === undefined)\n        return;\n\n      if (process.env.REACT_APP_DEMO_MODE === \"true\") {\n        if ((await liquity.getTrove(account)).collateral.eq(0)) {\n          await liquity.openTrove({ depositCollateral: \"11\", borrowLUSD: \"1800\" });\n        }\n      }\n    })();\n  }, [account, liquity, contracts.lusdToken]);\n  /***** /TODO */\n\n  useEffect(() => {\n    (async () => {\n      if (contracts.lusdToken === undefined || account === undefined || isInfiniteBondApproved)\n        return;\n      const isApproved = await api.isInfiniteBondApproved(account, contracts.lusdToken);\n      setIsInfiniteBondApproved(isApproved);\n    })();\n  }, [contracts.lusdToken, account, isInfiniteBondApproved]);\n\n  useEffect(() => {\n    (async () => {\n      if (contracts.lusdToken === undefined || account === undefined || isLusdApprovedWithBlusdAmm)\n        return;\n      const isApproved = await api.isTokenApprovedWithBLusdAmm(account, contracts.lusdToken);\n      setIsLusdApprovedWithBlusdAmm(isApproved);\n    })();\n  }, [contracts.lusdToken, account, isLusdApprovedWithBlusdAmm]);\n\n  useEffect(() => {\n    (async () => {\n      if (contracts.bLusdToken === undefined || account === undefined || isBLusdApprovedWithBlusdAmm)\n        return;\n      const isApproved = await api.isTokenApprovedWithBLusdAmm(account, contracts.bLusdToken);\n      setIsBLusdApprovedWithBlusdAmm(isApproved);\n    })();\n  }, [contracts.bLusdToken, account, isBLusdApprovedWithBlusdAmm]);\n\n  useEffect(() => {\n    if (isSynchronizing) return;\n    const timer = setTimeout(() => setShouldSynchronize(true), SYNCHRONIZE_INTERVAL_MS);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [isSynchronizing]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        if (\n          contracts.lusdToken === undefined ||\n          contracts.bondNft === undefined ||\n          contracts.chickenBondManager === undefined ||\n          contracts.bLusdToken === undefined ||\n          contracts.bLusdAmm === undefined ||\n          !shouldSynchronize\n        ) {\n          return;\n        }\n\n        setShouldSynchronize(false);\n        setIsSynchronizing(true);\n\n        const latest = await contracts.getLatestData(account, api);\n        if (latest === undefined) {\n          setIsSynchronizing(false);\n          return;\n        }\n\n        const {\n          treasury,\n          protocolInfo,\n          bonds,\n          stats,\n          bLusdBalance,\n          lusdBalance,\n          lpTokenBalance,\n          lpTokenSupply,\n          bLusdAmmBLusdBalance,\n          bLusdAmmLusdBalance\n        } = latest;\n\n        setProtocolInfo(protocolInfo);\n\n        // Don't change the simualted price if we already have one since only the user should change it\n        if (simulatedProtocolInfo === undefined) {\n          const simulatedProtocolInfo = _getProtocolInfo(\n            protocolInfo.simulatedMarketPrice,\n            protocolInfo.floorPrice,\n            protocolInfo.claimBondFee,\n            protocolInfo.alphaAccrualFactor\n          );\n          setSimulatedProtocolInfo({\n            ...protocolInfo,\n            ...simulatedProtocolInfo,\n            simulatedMarketPrice: protocolInfo.simulatedMarketPrice\n          });\n        }\n\n        setBLusdBalance(bLusdBalance);\n        setLusdBalance(lusdBalance);\n        setLpTokenBalance(lpTokenBalance);\n        setLpTokenSupply(lpTokenSupply);\n        setBLusdAmmBLusdBalance(bLusdAmmBLusdBalance);\n        setBLusdAmmLusdBalance(bLusdAmmLusdBalance);\n        setStats(stats);\n        setTreasury(treasury);\n        setBonds(bonds);\n        setIsSynchronizing(false);\n        setOptimisticBond(undefined);\n      } catch (error: unknown) {\n        console.error(\"Caught exception\", error);\n      }\n    })();\n  }, [shouldSynchronize, account, contracts, simulatedProtocolInfo]);\n\n  const [approveInfiniteBond, approveStatus] = useTransaction(async () => {\n    await api.approveInfiniteBond(contracts.lusdToken);\n    setIsInfiniteBondApproved(true);\n  }, [contracts.lusdToken]);\n\n  const [approveAmm, approveAmmStatus] = useTransaction(\n    async (tokensNeedingApproval: BLusdAmmTokenIndex[]) => {\n      for (const token of tokensNeedingApproval) {\n        if (token === BLusdAmmTokenIndex.BLUSD) {\n          await api.approveTokenWithBLusdAmm(contracts.bLusdToken);\n          setIsBLusdApprovedWithBlusdAmm(true);\n        } else {\n          await api.approveTokenWithBLusdAmm(contracts.lusdToken);\n          setIsLusdApprovedWithBlusdAmm(true);\n        }\n      }\n    },\n    [contracts.bLusdToken, contracts.lusdToken]\n  );\n\n  const [createBond, createStatus] = useTransaction(\n    async (lusdAmount: Decimal) => {\n      await api.createBond(lusdAmount, contracts.chickenBondManager);\n      const optimisticBond: OptimisticBond = {\n        id: \"OPTIMISTIC_BOND\",\n        deposit: lusdAmount,\n        startTime: Date.now(),\n        status: \"PENDING\"\n      };\n      setOptimisticBond(optimisticBond);\n      setShouldSynchronize(true);\n    },\n    [contracts.chickenBondManager]\n  );\n\n  const [cancelBond, cancelStatus] = useTransaction(\n    async (bondId: string, minimumLusd: Decimal) => {\n      await api.cancelBond(bondId, minimumLusd, contracts.chickenBondManager);\n      removeBondFromList(bondId);\n      setShouldSynchronize(true);\n    },\n    [contracts.chickenBondManager, removeBondFromList]\n  );\n\n  const [claimBond, claimStatus] = useTransaction(\n    async (bondId: string) => {\n      await api.claimBond(bondId, contracts.chickenBondManager);\n      changeBondStatusToClaimed(bondId);\n      setShouldSynchronize(true);\n    },\n    [contracts.chickenBondManager, changeBondStatusToClaimed]\n  );\n\n  const getExpectedSwapOutput = useCallback(\n    async (inputToken: BLusdAmmTokenIndex, inputAmount: Decimal) =>\n      contracts.bLusdAmm\n        ? api.getExpectedSwapOutput(inputToken, inputAmount, contracts.bLusdAmm)\n        : Decimal.ZERO,\n    [contracts.bLusdAmm]\n  );\n\n  const [swapTokens, swapStatus] = useTransaction(\n    async (inputToken: BLusdAmmTokenIndex, inputAmount: Decimal, minOutputAmount: Decimal) => {\n      await api.swapTokens(inputToken, inputAmount, minOutputAmount, contracts.bLusdAmm);\n      setShouldSynchronize(true);\n    },\n    [contracts.bLusdAmm]\n  );\n\n  const getExpectedLpTokens = useCallback(\n    async (bLusdAmount: Decimal, lusdAmount: Decimal) =>\n      contracts.bLusdAmm\n        ? api.getExpectedLpTokens(bLusdAmount, lusdAmount, contracts.bLusdAmm)\n        : Decimal.ZERO,\n    [contracts.bLusdAmm]\n  );\n\n  const [manageLiquidity, manageLiquidityStatus] = useTransaction(\n    async (params: ManageLiquidityPayload) => {\n      if (params.action === \"addLiquidity\") {\n        await api.addLiquidity(\n          params.bLusdAmount,\n          params.lusdAmount,\n          params.minLpTokens,\n          contracts.bLusdAmm\n        );\n      } else if (params.action === \"removeLiquidity\") {\n        await api.removeLiquidity(\n          params.burnLpTokens,\n          params.minBLusdAmount,\n          params.minLusdAmount,\n          contracts.bLusdAmm\n        );\n      } else {\n        await api.removeLiquidityOneCoin(\n          params.burnLpTokens,\n          params.output,\n          params.minAmount,\n          contracts.bLusdAmm\n        );\n      }\n      setShouldSynchronize(true);\n    },\n    [contracts.bLusdAmm]\n  );\n\n  const getExpectedWithdrawal = useCallback(\n    async (\n      burnLp: Decimal,\n      output: BLusdAmmTokenIndex | \"both\"\n    ): Promise<Map<BLusdAmmTokenIndex, Decimal>> =>\n      contracts.bLusdAmm ? api.getExpectedWithdrawal(burnLp, output, contracts.bLusdAmm) : new Map(),\n    [contracts.bLusdAmm]\n  );\n\n  const selectedBond = useMemo(() => bonds?.find(bond => bond.id === selectedBondId), [\n    bonds,\n    selectedBondId\n  ]);\n\n  const dispatchEvent = useCallback(\n    async (event: BondEvent, payload?: Payload) => {\n      if (!isValidEvent(viewRef.current, event)) {\n        console.error(\"invalid event\", event, payload, \"in view\", viewRef.current);\n        return;\n      }\n\n      const nextView = transition(viewRef.current, event);\n      setView(nextView);\n\n      if (payload && \"bondId\" in payload && payload.bondId !== selectedBondId) {\n        setSelectedBondId(payload.bondId);\n      }\n\n      if (payload && \"inputToken\" in payload && payload.inputToken !== inputToken) {\n        setInputToken(payload.inputToken);\n      }\n\n      const isCurrentViewEvent = (_view: BondView, _event: BondEvent) =>\n        viewRef.current === _view && event === _event;\n\n      try {\n        if (isCurrentViewEvent(\"CREATING\", \"APPROVE_PRESSED\")) {\n          await approveInfiniteBond();\n        } else if (isCurrentViewEvent(\"CREATING\", \"CONFIRM_PRESSED\")) {\n          await createBond((payload as CreateBondPayload).deposit);\n          await dispatchEvent(\"CREATE_BOND_CONFIRMED\");\n        } else if (isCurrentViewEvent(\"CANCELLING\", \"CONFIRM_PRESSED\")) {\n          if (selectedBond === undefined) {\n            console.error(\n              \"dispatchEvent() handler: attempted to cancel a bond without selecting a bond\"\n            );\n            return;\n          }\n          await cancelBond(selectedBond.id, selectedBond.deposit);\n          await dispatchEvent(\"CANCEL_BOND_CONFIRMED\");\n        } else if (isCurrentViewEvent(\"CLAIMING\", \"CONFIRM_PRESSED\")) {\n          if (selectedBond === undefined) {\n            console.error(\n              \"dispatchEvent() handler: attempted to claim a bond without selecting a bond\"\n            );\n            return;\n          }\n          await claimBond(selectedBond.id);\n          await dispatchEvent(\"CLAIM_BOND_CONFIRMED\");\n        } else if (isCurrentViewEvent(\"SWAPPING\", \"APPROVE_PRESSED\")) {\n          await approveAmm([inputToken]);\n        } else if (isCurrentViewEvent(\"SWAPPING\", \"CONFIRM_PRESSED\")) {\n          const { inputAmount, minOutputAmount } = payload as SwapPayload;\n          await swapTokens(inputToken, inputAmount, minOutputAmount);\n          await dispatchEvent(\"SWAP_CONFIRMED\");\n        } else if (\n          isCurrentViewEvent(\"ADDING_LIQUIDITY\", \"APPROVE_PRESSED\") ||\n          isCurrentViewEvent(\"MANAGING_LIQUIDITY\", \"APPROVE_PRESSED\")\n        ) {\n          const { tokensNeedingApproval } = payload as ApprovePressedPayload;\n          await approveAmm(tokensNeedingApproval);\n        } else if (\n          isCurrentViewEvent(\"ADDING_LIQUIDITY\", \"CONFIRM_PRESSED\") ||\n          isCurrentViewEvent(\"MANAGING_LIQUIDITY\", \"CONFIRM_PRESSED\")\n        ) {\n          await manageLiquidity(payload as ManageLiquidityPayload);\n          await dispatchEvent(\"MANAGE_LIQUIDITY_CONFIRMED\");\n        }\n      } catch (error: unknown) {\n        console.error(\"dispatchEvent(), event handler failed\\n\\n\", error);\n      }\n    },\n    [\n      selectedBondId,\n      approveInfiniteBond,\n      createBond,\n      cancelBond,\n      claimBond,\n      selectedBond,\n      approveAmm,\n      swapTokens,\n      inputToken,\n      manageLiquidity\n    ]\n  );\n\n  useEffect(() => {\n    setStatuses(statuses => ({\n      ...statuses,\n      APPROVE: approveStatus,\n      CREATE: createStatus,\n      CANCEL: cancelStatus,\n      CLAIM: claimStatus,\n      APPROVE_AMM: approveAmmStatus,\n      SWAP: swapStatus,\n      MANAGE_LIQUIDITY: manageLiquidityStatus\n    }));\n  }, [\n    approveStatus,\n    createStatus,\n    cancelStatus,\n    claimStatus,\n    approveAmmStatus,\n    swapStatus,\n    manageLiquidityStatus\n  ]);\n\n  useEffect(() => {\n    viewRef.current = view;\n  }, [view]);\n\n  const provider: BondViewContextType = {\n    view,\n    dispatchEvent,\n    selectedBondId,\n    optimisticBond,\n    protocolInfo,\n    stats,\n    treasury,\n    bonds,\n    createBond,\n    cancelBond,\n    claimBond,\n    statuses,\n    selectedBond,\n    bLusdBalance,\n    lusdBalance,\n    lpTokenBalance,\n    lpTokenSupply,\n    bLusdAmmBLusdBalance,\n    bLusdAmmLusdBalance,\n    isInfiniteBondApproved,\n    isSynchronizing,\n    getLusdFromFaucet,\n    setSimulatedMarketPrice,\n    resetSimulatedMarketPrice,\n    simulatedProtocolInfo,\n    hasFoundContracts: contracts.hasFoundContracts,\n    isBLusdApprovedWithBlusdAmm,\n    isLusdApprovedWithBlusdAmm,\n    inputToken,\n    isInputTokenApprovedWithBLusdAmm:\n      inputToken === BLusdAmmTokenIndex.BLUSD\n        ? isBLusdApprovedWithBlusdAmm\n        : isLusdApprovedWithBlusdAmm,\n    getExpectedSwapOutput,\n    getExpectedLpTokens,\n    getExpectedWithdrawal\n  };\n\n  // @ts-ignore // TODO REMOVE\n  window.bonds = provider;\n\n  // If contracts don't load it means they're not deployed, we shouldn't block the app from running in this case\n  if (protocolInfo === undefined && contracts.hasFoundContracts) return <AppLoader />;\n\n  return <BondViewContext.Provider value={provider}>{children}</BondViewContext.Provider>;\n};\n","import { Flex, Card, Text, Slider as ThemeUiSlider, Button } from \"theme-ui\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { toFloat } from \"./Bonds/utils\";\nimport { InfoIcon } from \"./InfoIcon\";\n\ntype SliderProps = {\n  name: string;\n  description: string;\n  value: Decimal;\n  type: string;\n  min: string;\n  max: string;\n  step?: number;\n  onSliderChange: (value: Decimal) => void;\n  onReset?: () => void;\n};\n\nexport const HorizontalSlider: React.FC<SliderProps> = ({\n  name,\n  description,\n  value,\n  type,\n  min,\n  max,\n  step = 0.01,\n  onSliderChange,\n  onReset\n}) => {\n  return (\n    <Flex mb={2} sx={{ flexDirection: \"column\" }}>\n      <Flex\n        as=\"h4\"\n        sx={{\n          fontWeight: \"300\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        {onReset && (\n          <Button\n            variant=\"icon\"\n            sx={{\n              position: \"absolute\",\n              left: \"66%\",\n              mt: \"6px\",\n              fontSize: 1\n            }}\n            onClick={onReset}\n          >\n            Reset\n          </Button>\n        )}\n        {name}\n        <InfoIcon size=\"xs\" tooltip={<Card variant=\"tooltip\">{description}</Card>} />\n      </Flex>\n\n      <Flex sx={{ flexGrow: 1, alignItems: \"center\" }}>\n        <Text mr={2} sx={{ fontSize: 1 }}>\n          {min}\n        </Text>\n        <ThemeUiSlider\n          value={toFloat(value)}\n          min={min}\n          max={max}\n          step={step}\n          onChange={e => onSliderChange(Decimal.from(e.target.value))}\n        ></ThemeUiSlider>\n        <Text ml={2} sx={{ fontSize: 1 }}>\n          {max}\n        </Text>\n      </Flex>\n      <Flex sx={{ fontWeight: \"400\", justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text>\n          {value.prettify(2)} {type}\n        </Text>\n      </Flex>\n    </Flex>\n  );\n};\n","/** @jsxImportSource theme-ui */\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { Flex, Heading, Button, Card, Grid, Close, Text, Image, Spinner } from \"theme-ui\";\nimport { Decimal } from \"@liquity/lib-base\";\nimport { EditableRow } from \"../../../Trove/Editor\";\nimport { Record } from \"../../Record\";\nimport { InfoIcon } from \"../../../InfoIcon\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { HorizontalTimeline, Label, SubLabel } from \"../../../HorizontalTimeline\";\nimport { ActionDescription } from \"../../../ActionDescription\";\nimport { EXAMPLE_NFT } from \"../../context/BondViewProvider\";\nimport * as l from \"../../lexicon\";\nimport { useWizard } from \"../../../Wizard/Context\";\nimport { Warning } from \"../../../Warning\";\nimport type { CreateBondPayload } from \"../../context/transitions\";\nimport { dateWithoutHours, getRebondDays, getReturn, percentify, toFloat } from \"../../utils\";\nimport { HorizontalSlider } from \"../../../HorizontalSlider\";\n\ntype DetailsProps = { onBack?: () => void };\n\nexport const Details: React.FC<DetailsProps> = ({ onBack }) => {\n  const {\n    dispatchEvent,\n    statuses,\n    isInfiniteBondApproved,\n    lusdBalance,\n    simulatedProtocolInfo,\n    setSimulatedMarketPrice,\n    resetSimulatedMarketPrice,\n    protocolInfo\n  } = useBondView();\n  const { back } = useWizard();\n  const [deposit, setDeposit] = useState<Decimal>(lusdBalance ?? Decimal.ZERO);\n  const depositEditingState = useState<string>();\n  const isApprovingOrConfirming = useMemo(\n    () => statuses.APPROVE === \"PENDING\" || statuses.CREATE === \"PENDING\",\n    [statuses.APPROVE, statuses.CREATE]\n  );\n  const handleBack = back ?? onBack ?? (() => dispatchEvent(\"BACK_PRESSED\"));\n\n  const handleDismiss = () => {\n    dispatchEvent(\"ABORT_PRESSED\");\n  };\n\n  const handleApprovePressed = () => {\n    dispatchEvent(\"APPROVE_PRESSED\");\n  };\n\n  const handleConfirmPressed = () => {\n    dispatchEvent(\"CONFIRM_PRESSED\", { deposit } as CreateBondPayload);\n  };\n\n  useEffect(() => {\n    return () => resetSimulatedMarketPrice();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (protocolInfo === undefined || simulatedProtocolInfo === undefined || lusdBalance === undefined)\n    return null;\n\n  const depositMinusClaimBondFee = Decimal.ONE.sub(protocolInfo.claimBondFee).mul(deposit);\n  const rebondReturn = getReturn(\n    depositMinusClaimBondFee.mul(simulatedProtocolInfo.rebondAccrualFactor),\n    deposit,\n    simulatedProtocolInfo.simulatedMarketPrice\n  );\n  const rebondRoi = rebondReturn / toFloat(deposit) || 0;\n  const marketPriceMin = protocolInfo.floorPrice.add(0.015).prettify(2); // Add 0.015 to prevent market_price=floor_price infinity issues\n  const marketPriceMax = Decimal.max(\n    protocolInfo.marketPrice.mul(1.1),\n    protocolInfo.floorPrice.mul(1.5)\n  ).prettify(2);\n  const rebondDays = getRebondDays(\n    simulatedProtocolInfo.alphaAccrualFactor,\n    simulatedProtocolInfo.marketPricePremium,\n    protocolInfo.claimBondFee\n  );\n\n  return (\n    <>\n      <Heading as=\"h2\" sx={{ pt: 1, pb: 3, px: 2 }}>\n        <Flex sx={{ justifyContent: \"center\" }}>Bond MSD</Flex>\n        <Close\n          onClick={handleDismiss}\n          sx={{\n            position: \"absolute\",\n            right: \"24px\",\n            top: \"24px\"\n          }}\n        />\n      </Heading>\n\n      <Flex sx={{ justifyContent: \"center\", alignItems: \"center\" }}>\n        <Image\n          sx={{\n            height: 180,\n            border: \"10px solid white\",\n            borderRadius: \"14%\",\n            borderColor: \"white\"\n          }}\n          src={EXAMPLE_NFT}\n        />\n        <InfoIcon\n          tooltip={\n            <Card variant=\"tooltip\" sx={{ width: \"200px\" }}>\n              {l.BOND_NFT.description}\n            </Card>\n          }\n        />\n      </Flex>\n\n      <Flex my={4} sx={{ justifyContent: \"center\" }}>\n        <HorizontalTimeline\n          events={[\n            {\n              date: new Date(dateWithoutHours(Date.now())),\n              label: (\n                <>\n                  <Label subLabel=\"0 bMSD\" description={l.BOND_CREATED.description}>\n                    {l.BOND_CREATED.term}\n                  </Label>\n                  <SubLabel>0 bMSD</SubLabel>\n                </>\n              ),\n              isEndOfLife: true\n            },\n            {\n              date: simulatedProtocolInfo.breakEvenTime,\n              label: (\n                <>\n                  <Label description={l.BREAK_EVEN_TIME.description}>{l.BREAK_EVEN_TIME.term}</Label>\n                  <SubLabel>{`${depositMinusClaimBondFee\n                    .mul(simulatedProtocolInfo.breakEvenAccrualFactor)\n                    .prettify(2)} bMSD`}</SubLabel>\n                </>\n              )\n            },\n            {\n              date: simulatedProtocolInfo.rebondTime,\n              label: (\n                <>\n                  <Label description={l.OPTIMUM_REBOND_TIME.description}>\n                    {l.OPTIMUM_REBOND_TIME.term}\n                  </Label>\n                  <SubLabel>{`${depositMinusClaimBondFee\n                    .mul(simulatedProtocolInfo.rebondAccrualFactor)\n                    .prettify(2)} bMSD`}</SubLabel>\n                </>\n              )\n            }\n          ]}\n        />\n      </Flex>\n\n      <EditableRow\n        label={l.BOND_DEPOSIT.term}\n        inputId=\"bond-deposit-amount\"\n        amount={deposit.prettify(2)}\n        unit=\"MSD\"\n        editingState={depositEditingState}\n        editedAmount={deposit.toString()}\n        setEditedAmount={amount => setDeposit(Decimal.min(lusdBalance, Decimal.from(amount)))}\n        maxAmount={lusdBalance.toString()}\n        maxedOut={deposit.eq(lusdBalance)}\n      ></EditableRow>\n\n      <Grid sx={{ my: 1, mb: 3, justifyItems: \"center\", pl: 2 }} gap=\"20px\" columns={3}>\n        <Record\n          name={l.REBOND_RETURN.term}\n          value={rebondReturn.toFixed(2)}\n          type=\"MSD\"\n          description={l.REBOND_RETURN.description}\n        />\n\n        <Record\n          name={l.REBOND_TIME_ROI.term}\n          value={percentify(rebondRoi).toFixed(2) + \"%\"}\n          type=\"\"\n          description={l.REBOND_TIME_ROI.description}\n        />\n\n        <Record\n          name={l.OPTIMUM_APY.term}\n          value={percentify(rebondRoi * (365 / toFloat(rebondDays))).toFixed(2) + \"%\"}\n          type=\"\"\n          description={l.OPTIMUM_APY.description}\n        />\n      </Grid>\n\n      <HorizontalSlider\n        name={\"Simulate market price\"}\n        description={`\n                The market price of bMSD impacts how long it will take to rebond and break even. The\n                market price has a minimum value (\"floor price\") which is determined by the\n                Treasury's Reserve bucket relative to the bMSD supply.`}\n        value={simulatedProtocolInfo.simulatedMarketPrice}\n        min={marketPriceMin}\n        max={marketPriceMax}\n        type=\"MSD\"\n        onSliderChange={value => setSimulatedMarketPrice(value)}\n        onReset={() => setSimulatedMarketPrice(protocolInfo.marketPrice)}\n      />\n\n      {!isInfiniteBondApproved && (\n        <ActionDescription>\n          <Text>You are approving MSD for bonding</Text>\n        </ActionDescription>\n      )}\n\n      {statuses.APPROVE === \"FAILED\" && (\n        <Warning>Failed to approve spend of MSD. Please try again.</Warning>\n      )}\n\n      {statuses.CREATE === \"FAILED\" && <Warning>Failed to create bond. Please try again.</Warning>}\n\n      {isInfiniteBondApproved && (\n        <ActionDescription>\n          You are bonding <Text sx={{ fontWeight: \"bold\" }}>{deposit.prettify(2)} MSD</Text>\n        </ActionDescription>\n      )}\n\n      <Flex pb={2} sx={{ fontSize: \"15.5px\", justifyContent: \"center\", fontStyle: \"italic\" }}>\n        You can cancel your bond at any time to recover your deposited MSD\n      </Flex>\n\n      <Flex variant=\"layout.actions\">\n        <Button variant=\"cancel\" onClick={handleBack} disabled={isApprovingOrConfirming}>\n          Back\n        </Button>\n        {!isInfiniteBondApproved && (\n          <Button onClick={handleApprovePressed} disabled={isApprovingOrConfirming}>\n            {!isApprovingOrConfirming && <>Approve</>}\n            {isApprovingOrConfirming && (\n              <Spinner size=\"28px\" sx={{ color: \"white\", position: \"absolute\" }} />\n            )}\n          </Button>\n        )}\n        {isInfiniteBondApproved && (\n          <Button onClick={handleConfirmPressed} disabled={isApprovingOrConfirming}>\n            {!isApprovingOrConfirming && <>Confirm</>}\n            {isApprovingOrConfirming && <Spinner size=\"28px\" sx={{ color: \"white\" }} />}\n          </Button>\n        )}\n      </Flex>\n    </>\n  );\n};\n","/** @jsxImportSource theme-ui */\nimport React, { useRef } from \"react\";\nimport { Box, Button, Checkbox, Close, Flex, Heading, Label, Paragraph, Link } from \"theme-ui\";\nimport { Icon } from \"../../../Icon\";\nimport { useWizard } from \"../../../Wizard/Context\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { Details } from \"./Details\";\n\nconst InformationContainer: React.FC = ({ children }) => {\n  const { dispatchEvent } = useBondView();\n  const handleDismiss = () => dispatchEvent(\"ABORT_PRESSED\");\n\n  return (\n    <>\n      <Heading as=\"h2\" sx={{ pt: 2, pb: 3, px: 2 }}>\n        <Flex sx={{ justifyContent: \"center\" }}>Bond MSD</Flex>\n        <Close\n          onClick={handleDismiss}\n          sx={{\n            position: \"absolute\",\n            right: \"24px\",\n            top: \"24px\"\n          }}\n        />\n      </Heading>\n\n      <Flex sx={{ justifyContent: \"center\" }}>\n        <Icon name=\"question-circle\" size=\"6x\" />\n      </Flex>\n\n      {children}\n    </>\n  );\n};\n\nexport const Information: React.FC = () => {\n  const hideMessageRef = useRef<HTMLInputElement>(null);\n\n  const { go, back } = useWizard();\n\n  const handleUnderstandPressed = () => {\n    if (hideMessageRef?.current?.checked) {\n      window.localStorage.setItem(\"LIQUITY.BOND_FAQ.VISISBLE\", \"true\");\n    }\n    go && go(Details);\n  };\n\n  return (\n    <InformationContainer>\n      <Box sx={{ p: [2, 3] }}>\n        <Paragraph sx={{ mt: 2 }}>\n          Deposit MSD to create a bond which exchanges MSD to bMSD over time.\n        </Paragraph>\n        {/* <Paragraph sx={{ mt: 2 }}>\n          bLUSD is a derivative of LUSD which is fully-backed by LUSD and redeemable, but has a\n          higher yield than LUSD.\n        </Paragraph> */}\n        <Paragraph sx={{ mt: 2 }}>\n          Bonds can be cancelled at any time to fully recover the initially deposited MSD.\n        </Paragraph>\n        <Paragraph sx={{ mt: 2 }}>\n          Please take some time to understand how MSD bonds work:\n        </Paragraph>\n\n        <ul>\n          <li>\n            <Link sx={{ cursor: \"pointer\" }} href=\"http://google.com\" target=\"external\">\n              What is a principal-protected investment?\n            </Link>\n          </li>\n          <li>\n            <Link sx={{ cursor: \"pointer\" }} href=\"http://google.com\" target=\"external\">\n              How do traditional bonds work?\n            </Link>\n          </li>\n          <li>\n            <Link sx={{ cursor: \"pointer\" }} href=\"http://google.com\" target=\"external\">\n              How do existing DeFi bonds work?\n            </Link>\n          </li>\n          <li>\n            <Link sx={{ cursor: \"pointer\" }} href=\"http://google.com\" target=\"external\">\n              How do MSD bonds work?\n            </Link>\n          </li>\n          <li>\n            <Link sx={{ cursor: \"pointer\" }} href=\"http://google.com\" target=\"external\">\n              What is the MSD bonding process?\n            </Link>\n          </li>\n        </ul>\n      </Box>\n\n      <Flex variant=\"layout.actions\">\n        <Flex sx={{ justifyContent: \"flex-end\", flexDirection: \"column\" }}>\n          <Label sx={{ fontSize: \"14px\" }}>\n            <Flex>\n              <Checkbox ref={hideMessageRef} />\n              Don't show this message again\n            </Flex>\n          </Label>\n        </Flex>\n        <Button variant=\"cancel\" onClick={back ? back : () => {}}>\n          Back\n        </Button>\n        <Button onClick={handleUnderstandPressed}>I understand</Button>\n      </Flex>\n    </InformationContainer>\n  );\n};\n","import React from \"react\";\nimport { ModalWizard } from \"../../../ModalWizard\";\nimport { ReactModal } from \"../../../ReactModal\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { Information } from \"./Information\";\nimport { Details } from \"./Details\";\n\nexport const Creating: React.FC = () => {\n  const { dispatchEvent } = useBondView();\n\n  const handleDismiss = () => {\n    dispatchEvent(\"ABORT_PRESSED\");\n  };\n  const ignoreInformation = window.localStorage.getItem(\"LIQUITY.BOND_FAQ.VISISBLE\") === \"true\";\n\n  return !ignoreInformation ? (\n    <ModalWizard onDismiss={handleDismiss}>\n      <Information />\n      <Details />\n    </ModalWizard>\n  ) : (\n    <ReactModal onDismiss={handleDismiss}>\n      <Details />\n    </ReactModal>\n  );\n};\n","import { Decimal, Percent } from \"@liquity/lib-base\";\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Button, Spinner, Heading, Close } from \"theme-ui\";\nimport { Amount } from \"../../../ActionDescription\";\nimport { ErrorDescription } from \"../../../ErrorDescription\";\nimport { Icon } from \"../../../Icon\";\nimport { DisabledEditableRow, EditableRow, StaticRow } from \"../../../Trove/Editor\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { BLusdAmmTokenIndex } from \"../../context/transitions\";\n\nconst tokenSymbol: Record<BLusdAmmTokenIndex, string> = {\n  [BLusdAmmTokenIndex.BLUSD]: \"bMSD\",\n  [BLusdAmmTokenIndex.LUSD]: \"MSD\"\n};\n\nconst outputToken: Record<BLusdAmmTokenIndex, BLusdAmmTokenIndex> = {\n  [BLusdAmmTokenIndex.BLUSD]: BLusdAmmTokenIndex.LUSD,\n  [BLusdAmmTokenIndex.LUSD]: BLusdAmmTokenIndex.BLUSD\n};\n\nconst marginalAmount = Decimal.ONE.div(1000);\n\nexport const SwapPane: React.FC = () => {\n  const {\n    dispatchEvent,\n    statuses,\n    inputToken,\n    lusdBalance,\n    bLusdBalance,\n    isInputTokenApprovedWithBLusdAmm,\n    getExpectedSwapOutput\n  } = useBondView();\n  const editingState = useState<string>();\n  const inputTokenBalance =\n    (inputToken === BLusdAmmTokenIndex.BLUSD ? bLusdBalance : lusdBalance) ?? Decimal.ZERO;\n  const [inputAmount, setInputAmount] = useState<Decimal>(Decimal.ZERO);\n  const [outputAmount, setOutputAmount] = useState<Decimal>(Decimal.ZERO);\n  const [exchangeRate, setExchangeRate] = useState<Decimal>(Decimal.ZERO);\n  const [priceImpact, setPriceImpact] = useState<Decimal>(Decimal.ZERO);\n  const priceImpactPct = new Percent(priceImpact);\n\n  const isApprovePending = statuses.APPROVE_AMM === \"PENDING\";\n  const isSwapPending = statuses.SWAP === \"PENDING\";\n  const isBalanceInsufficient = inputAmount.gt(inputTokenBalance);\n\n  const handleDismiss = () => {\n    dispatchEvent(\"ABORT_PRESSED\");\n  };\n\n  const handleApprovePressed = () => {\n    dispatchEvent(\"APPROVE_PRESSED\");\n  };\n\n  const handleConfirmPressed = () => {\n    dispatchEvent(\"CONFIRM_PRESSED\", {\n      inputAmount,\n      minOutputAmount: outputAmount.mul(0.995) // 0.5% slippage tolerance\n    });\n  };\n\n  const handleBackPressed = () => {\n    dispatchEvent(\"BACK_PRESSED\");\n  };\n\n  useEffect(() => {\n    let cancelled = false;\n\n    const timeoutId = setTimeout(async () => {\n      try {\n        const [marginalOutput, outputAmount] = await Promise.all([\n          getExpectedSwapOutput(inputToken, marginalAmount),\n          inputAmount.nonZero && getExpectedSwapOutput(inputToken, inputAmount)\n        ]);\n\n        if (cancelled) return;\n\n        const marginalExchangeRate = marginalOutput.div(marginalAmount);\n        const exchangeRate = outputAmount?.div(inputAmount);\n        const priceImpact = exchangeRate?.lte(marginalExchangeRate)\n          ? marginalExchangeRate.sub(exchangeRate).div(marginalExchangeRate)\n          : Decimal.ZERO;\n\n        setOutputAmount(outputAmount ?? Decimal.ZERO);\n        setExchangeRate(exchangeRate ?? marginalExchangeRate);\n        setPriceImpact(priceImpact);\n      } catch (error) {\n        console.error(\"getExpectedSwapOutput() failed\");\n        console.log(error);\n      }\n    }, 200);\n\n    return () => {\n      clearTimeout(timeoutId);\n      cancelled = true;\n    };\n  }, [inputToken, inputAmount, getExpectedSwapOutput]);\n\n  return (\n    <>\n      <Heading as=\"h2\" sx={{ pt: 2, pb: 3, px: 2 }}>\n        <Flex sx={{ justifyContent: \"center\" }}>\n          {inputToken === BLusdAmmTokenIndex.BLUSD ? <>Sell</> : <>Buy</>} bMSD\n        </Flex>\n        <Close\n          onClick={handleDismiss}\n          sx={{\n            position: \"absolute\",\n            right: \"24px\",\n            top: \"24px\"\n          }}\n        />\n      </Heading>\n\n      <EditableRow\n        label=\"Sell\"\n        inputId=\"swap-input-amount\"\n        amount={inputAmount.prettify(2)}\n        unit={tokenSymbol[inputToken]}\n        editingState={editingState}\n        editedAmount={inputAmount.toString()}\n        setEditedAmount={amount => setInputAmount(Decimal.from(amount))}\n        maxAmount={inputTokenBalance.toString()}\n        maxedOut={inputAmount.eq(inputTokenBalance)}\n      />\n\n      <Flex sx={{ justifyContent: \"center\", mb: 3 }}>\n        <Icon name=\"arrow-down\" size=\"lg\" />\n      </Flex>\n\n      <DisabledEditableRow\n        label=\"Buy\"\n        inputId=\"swap-output-amount\"\n        amount={outputAmount.prettify(2)}\n        unit={tokenSymbol[outputToken[inputToken]]}\n      />\n\n      <StaticRow\n        label=\"Exchange rate\"\n        inputId=\"swap-exchange-rate\"\n        amount={exchangeRate.prettify(4)}\n        unit={`${tokenSymbol[inputToken]}:${tokenSymbol[outputToken[inputToken]]}`}\n      />\n\n      <StaticRow\n        label=\"Price impact\"\n        inputId=\"swap-price-impact\"\n        amount={priceImpactPct.toString(4)}\n        color={priceImpact.gte(0.005) ? \"danger\" : undefined}\n      />\n\n      {isBalanceInsufficient && (\n        <ErrorDescription>\n          Amount exceeds your balance by{\" \"}\n          <Amount>\n            {inputAmount.sub(inputTokenBalance).prettify(2)} {tokenSymbol[inputToken]}\n          </Amount>\n        </ErrorDescription>\n      )}\n\n      <Flex variant=\"layout.actions\">\n        <Button\n          variant=\"cancel\"\n          onClick={handleBackPressed}\n          disabled={isApprovePending || isSwapPending}\n        >\n          Back\n        </Button>\n\n        {isInputTokenApprovedWithBLusdAmm ? (\n          <Button\n            variant=\"primary\"\n            onClick={handleConfirmPressed}\n            disabled={inputAmount.isZero || isBalanceInsufficient || isSwapPending}\n          >\n            {isSwapPending ? <Spinner size=\"28px\" sx={{ color: \"white\" }} /> : <>Confirm</>}\n          </Button>\n        ) : (\n          <Button variant=\"primary\" onClick={handleApprovePressed} disabled={isApprovePending}>\n            {isApprovePending ? <Spinner size=\"28px\" sx={{ color: \"white\" }} /> : <>Approve</>}\n          </Button>\n        )}\n      </Flex>\n    </>\n  );\n};\n","import React from \"react\";\nimport { ReactModal } from \"../../../ReactModal\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { SwapPane } from \"./SwapPane\";\n\nexport const Swapping: React.FC = () => {\n  const { dispatchEvent } = useBondView();\n\n  const handleDismiss = () => {\n    dispatchEvent(\"ABORT_PRESSED\");\n  };\n\n  return (\n    <ReactModal onDismiss={handleDismiss}>\n      <SwapPane />\n    </ReactModal>\n  );\n};\n","/** @jsxImportSource theme-ui */\nimport { Decimal } from \"@liquity/lib-base\";\nimport { Flex, Text, Box } from \"theme-ui\";\nimport { StaticRow } from \"../../../Trove/Editor\";\nimport { useBondView } from \"../../context/BondViewContext\";\n\nconst PoolBalance: React.FC<{ symbol: string }> = ({ symbol, children }) => (\n  <>\n    <Text sx={{ fontWeight: \"medium\" }}>{children}</Text>\n    &nbsp;\n    <Text sx={{ fontWeight: \"light\", opacity: 0.8 }}>{symbol}</Text>\n  </>\n);\n\nexport const PoolDetails: React.FC = () => {\n  const { lpTokenSupply, bLusdAmmBLusdBalance, bLusdAmmLusdBalance } = useBondView();\n\n  return (\n    <details>\n      <summary sx={{ cursor: \"pointer\", mb: 3 }}>Pool details</summary>\n\n      <Box sx={{ mt: 3 }}>\n        <StaticRow label=\"Pool balance\" inputId=\"deposit-pool-balance\">\n          <Flex sx={{ alignItems: \"center\" }}>\n            <PoolBalance symbol=\"bMSD\">\n              {(bLusdAmmBLusdBalance ?? Decimal.ZERO).prettify(2)}\n            </PoolBalance>\n\n            <Text sx={{ fontWeight: \"light\", mx: \"12px\" }}>+</Text>\n\n            <PoolBalance symbol=\"MSD\">\n              {(bLusdAmmLusdBalance ?? Decimal.ZERO).prettify(2)}\n            </PoolBalance>\n          </Flex>\n        </StaticRow>\n\n        <StaticRow\n          label=\"LP token supply\"\n          inputId=\"deposit-mint-lp-tokens\"\n          amount={(lpTokenSupply ?? Decimal.ZERO).prettify(2)}\n        />\n      </Box>\n    </details>\n  );\n};\n","import { Decimal } from \"@liquity/lib-base\";\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Button, Spinner } from \"theme-ui\";\nimport { Amount } from \"../../../ActionDescription\";\nimport { ErrorDescription } from \"../../../ErrorDescription\";\nimport { Icon } from \"../../../Icon\";\nimport { DisabledEditableRow, EditableRow } from \"../../../Trove/Editor\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { BLusdAmmTokenIndex } from \"../../context/transitions\";\nimport { PoolDetails } from \"./PoolDetails\";\n\nexport const DepositPane: React.FC = () => {\n  const {\n    dispatchEvent,\n    statuses,\n    lusdBalance,\n    bLusdBalance,\n    isBLusdApprovedWithBlusdAmm,\n    isLusdApprovedWithBlusdAmm,\n    getExpectedLpTokens\n  } = useBondView();\n\n  const editingState = useState<string>();\n  const [bLusdAmount, setBLusdAmount] = useState<Decimal>(Decimal.ZERO);\n  const [lusdAmount, setLusdAmount] = useState<Decimal>(Decimal.ZERO);\n  const [lpTokens, setLpTokens] = useState<Decimal>(Decimal.ZERO);\n\n  const coalescedBLusdBalance = bLusdBalance ?? Decimal.ZERO;\n  const coalescedLusdBalance = lusdBalance ?? Decimal.ZERO;\n\n  const isApprovePending = statuses.APPROVE_AMM === \"PENDING\";\n  const isManageLiquidityPending = statuses.MANAGE_LIQUIDITY === \"PENDING\";\n  const isBLusdBalanceInsufficient = bLusdAmount.gt(coalescedBLusdBalance);\n  const isLusdBalanceInsufficient = lusdAmount.gt(coalescedLusdBalance);\n  const isAnyBalanceInsufficient = isBLusdBalanceInsufficient || isLusdBalanceInsufficient;\n\n  const tokensNeedingApproval = [\n    bLusdAmount.isZero || isBLusdApprovedWithBlusdAmm ? [] : [BLusdAmmTokenIndex.BLUSD],\n    lusdAmount.isZero || isLusdApprovedWithBlusdAmm ? [] : [BLusdAmmTokenIndex.LUSD]\n  ].flat();\n\n  const areInputTokensApprovedWithBLusdAmm = tokensNeedingApproval.length === 0;\n\n  const handleApprovePressed = () => {\n    dispatchEvent(\"APPROVE_PRESSED\", { tokensNeedingApproval });\n  };\n\n  const handleConfirmPressed = () => {\n    dispatchEvent(\"CONFIRM_PRESSED\", {\n      action: \"addLiquidity\",\n      bLusdAmount,\n      lusdAmount,\n      minLpTokens: Decimal.ZERO // TODO\n    });\n  };\n\n  const handleBackPressed = () => {\n    dispatchEvent(\"BACK_PRESSED\");\n  };\n\n  useEffect(() => {\n    if (bLusdAmount.isZero && lusdAmount.isZero) {\n      setLpTokens(Decimal.ZERO);\n      return;\n    }\n\n    let cancelled = false;\n\n    const timeoutId = setTimeout(async () => {\n      try {\n        const expectedLpTokens = await getExpectedLpTokens(bLusdAmount, lusdAmount);\n        if (cancelled) return;\n        setLpTokens(expectedLpTokens);\n      } catch (error) {\n        console.error(\"getExpectedLpTokens() failed\");\n        console.log(error);\n      }\n    }, 200);\n\n    return () => {\n      clearTimeout(timeoutId);\n      cancelled = true;\n    };\n  }, [bLusdAmount, lusdAmount, getExpectedLpTokens]);\n\n  return (\n    <>\n      <EditableRow\n        label=\"Deposit #1\"\n        inputId=\"deposit-blusd\"\n        amount={bLusdAmount.prettify(2)}\n        unit=\"bMSD\"\n        editingState={editingState}\n        editedAmount={bLusdAmount.toString()}\n        setEditedAmount={amount => setBLusdAmount(Decimal.from(amount))}\n        maxAmount={coalescedBLusdBalance.toString()}\n        maxedOut={bLusdAmount.eq(coalescedBLusdBalance)}\n      />\n\n      <EditableRow\n        label=\"Deposit #2\"\n        inputId=\"deposit-lusd\"\n        amount={lusdAmount.prettify(2)}\n        unit=\"MSD\"\n        editingState={editingState}\n        editedAmount={lusdAmount.toString()}\n        setEditedAmount={amount => setLusdAmount(Decimal.from(amount))}\n        maxAmount={coalescedLusdBalance.toString()}\n        maxedOut={lusdAmount.eq(coalescedLusdBalance)}\n      />\n\n      <Flex sx={{ justifyContent: \"center\", mb: 3 }}>\n        <Icon name=\"arrow-down\" size=\"lg\" />\n      </Flex>\n\n      <DisabledEditableRow\n        label=\"Mint LP tokens\"\n        inputId=\"deposit-mint-lp-tokens\"\n        amount={lpTokens.prettify(2)}\n      />\n\n      <PoolDetails />\n\n      {isAnyBalanceInsufficient && (\n        <ErrorDescription>\n          Deposit exceeds your balance by{\" \"}\n          {isBLusdBalanceInsufficient && (\n            <>\n              <Amount>{bLusdAmount.sub(coalescedBLusdBalance).prettify(2)} bLUSD</Amount>\n              {isLusdBalanceInsufficient && <> and </>}\n            </>\n          )}\n          {isLusdBalanceInsufficient && (\n            <Amount>{lusdAmount.sub(coalescedLusdBalance).prettify(2)} LUSD</Amount>\n          )}\n        </ErrorDescription>\n      )}\n\n      <Flex variant=\"layout.actions\">\n        <Button\n          variant=\"cancel\"\n          onClick={handleBackPressed}\n          disabled={isApprovePending || isManageLiquidityPending}\n        >\n          Back\n        </Button>\n\n        {areInputTokensApprovedWithBLusdAmm ? (\n          <Button\n            variant=\"primary\"\n            onClick={handleConfirmPressed}\n            disabled={\n              (bLusdAmount.isZero && lusdAmount.isZero) ||\n              isAnyBalanceInsufficient ||\n              isManageLiquidityPending\n            }\n          >\n            {isManageLiquidityPending ? (\n              <Spinner size=\"28px\" sx={{ color: \"white\" }} />\n            ) : (\n              <>Confirm</>\n            )}\n          </Button>\n        ) : (\n          <Button variant=\"primary\" onClick={handleApprovePressed} disabled={isApprovePending}>\n            {isApprovePending ? <Spinner size=\"28px\" sx={{ color: \"white\" }} /> : <>Approve</>}\n          </Button>\n        )}\n      </Flex>\n    </>\n  );\n};\n","import { Decimal } from \"@liquity/lib-base\";\nimport React, { useEffect, useState } from \"react\";\nimport { Flex, Button, Spinner, Label, Radio, Text } from \"theme-ui\";\nimport { Amount } from \"../../../ActionDescription\";\nimport { ErrorDescription } from \"../../../ErrorDescription\";\nimport { Icon } from \"../../../Icon\";\nimport { DisabledEditableRow, EditableRow } from \"../../../Trove/Editor\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { BLusdAmmTokenIndex } from \"../../context/transitions\";\nimport { PoolDetails } from \"./PoolDetails\";\n\nconst tokenSymbol = new Map([\n  [BLusdAmmTokenIndex.BLUSD, \"bMSD\"],\n  [BLusdAmmTokenIndex.LUSD, \"MSD\"]\n]);\n\nconst WithdrawnAmount: React.FC<{ symbol: string }> = ({ symbol, children }) => (\n  <>\n    <Text sx={{ fontWeight: \"medium\" }}>{children}</Text>\n    &nbsp;\n    <Text sx={{ fontWeight: \"light\", opacity: 0.8 }}>{symbol}</Text>\n  </>\n);\n\nconst checkOutput = (value: string): BLusdAmmTokenIndex | \"both\" => {\n  if (value === \"both\") {\n    return \"both\";\n  }\n\n  const i = parseInt(value);\n  if (i === BLusdAmmTokenIndex.BLUSD || i === BLusdAmmTokenIndex.LUSD) {\n    return i;\n  }\n\n  throw new Error(`invalid output choice \"${value}\"`);\n};\n\nconst zeros = new Map<BLusdAmmTokenIndex, Decimal>([\n  [BLusdAmmTokenIndex.BLUSD, Decimal.ZERO],\n  [BLusdAmmTokenIndex.LUSD, Decimal.ZERO]\n]);\n\nexport const WithdrawPane: React.FC = () => {\n  const { dispatchEvent, statuses, lpTokenBalance, getExpectedWithdrawal } = useBondView();\n\n  const editingState = useState<string>();\n  const [burnLpTokens, setBurnLp] = useState<Decimal>(Decimal.ZERO);\n  const [output, setOutput] = useState<BLusdAmmTokenIndex | \"both\">(\"both\");\n  const [withdrawal, setWithdrawal] = useState<Map<BLusdAmmTokenIndex, Decimal>>(zeros);\n\n  const coalescedLpTokenBalance = lpTokenBalance ?? Decimal.ZERO;\n  const isManageLiquidityPending = statuses.MANAGE_LIQUIDITY === \"PENDING\";\n  const isBalanceInsufficient = burnLpTokens.gt(coalescedLpTokenBalance);\n\n  const handleOutputChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setOutput(checkOutput(e.target.value));\n\n  const handleConfirmPressed = () => {\n    if (output === \"both\") {\n      dispatchEvent(\"CONFIRM_PRESSED\", {\n        action: \"removeLiquidity\",\n        burnLpTokens,\n        minBLusdAmount: Decimal.ZERO, // TODO\n        minLusdAmount: Decimal.ZERO // TODO\n      });\n    } else {\n      dispatchEvent(\"CONFIRM_PRESSED\", {\n        action: \"removeLiquidityOneCoin\",\n        burnLpTokens,\n        output,\n        minAmount: Decimal.ZERO // TODO\n      });\n    }\n  };\n\n  const handleBackPressed = () => {\n    dispatchEvent(\"BACK_PRESSED\");\n  };\n\n  useEffect(() => {\n    if (burnLpTokens.isZero) {\n      setWithdrawal(output === \"both\" ? zeros : new Map([[output, Decimal.ZERO]]));\n      return;\n    }\n\n    let cancelled = false;\n\n    const timeoutId = setTimeout(async () => {\n      try {\n        const expectedWithdrawal = await getExpectedWithdrawal(burnLpTokens, output);\n        if (cancelled) return;\n        setWithdrawal(expectedWithdrawal);\n      } catch (error) {\n        console.error(\"getExpectedWithdrawal() failed\");\n        console.log(error);\n      }\n    }, 200);\n\n    return () => {\n      clearTimeout(timeoutId);\n      cancelled = true;\n    };\n  }, [burnLpTokens, getExpectedWithdrawal, output]);\n\n  return (\n    <>\n      <EditableRow\n        label=\"Burn LP Tokens\"\n        inputId=\"withdraw-burn-lp\"\n        amount={burnLpTokens.prettify(2)}\n        editingState={editingState}\n        editedAmount={burnLpTokens.toString()}\n        setEditedAmount={amount => setBurnLp(Decimal.from(amount))}\n        maxAmount={coalescedLpTokenBalance.toString()}\n        maxedOut={burnLpTokens.eq(coalescedLpTokenBalance)}\n      />\n\n      <Flex sx={{ justifyContent: \"center\", mb: 3 }}>\n        <Icon name=\"arrow-down\" size=\"lg\" />\n      </Flex>\n\n      <Flex sx={{ justifyContent: \"center\", mb: 3 }}>\n        {Array.from(tokenSymbol.entries()).map(([key, symbol]) => (\n          <Label key={key} variant=\"radioLabel\">\n            <Radio\n              name=\"withdraw-output-choice\"\n              value={key}\n              checked={output === key}\n              onChange={handleOutputChange}\n            />\n            {symbol}\n          </Label>\n        ))}\n\n        <Label key=\"both\" variant=\"radioLabel\">\n          <Radio\n            name=\"withdraw-output-choice\"\n            value=\"both\"\n            checked={output === \"both\"}\n            onChange={handleOutputChange}\n          />\n          Both\n        </Label>\n      </Flex>\n\n      <DisabledEditableRow label=\"Withdraw\" inputId=\"withdraw-output-amount\">\n        <Flex sx={{ alignItems: \"center\" }}>\n          {Array.from(withdrawal.entries()).map(([token, amount], i) => (\n            <>\n              {i > 0 && <Text sx={{ fontWeight: \"light\", mx: \"12px\" }}>+</Text>}\n              <WithdrawnAmount symbol={tokenSymbol.get(token) ?? \"\"}>\n                {amount.prettify(2)}\n              </WithdrawnAmount>\n            </>\n          ))}\n        </Flex>\n      </DisabledEditableRow>\n\n      <PoolDetails />\n\n      {isBalanceInsufficient && (\n        <ErrorDescription>\n          LP Token amount exceeds your balance by{\" \"}\n          <Amount>{burnLpTokens.sub(coalescedLpTokenBalance).prettify(2)}</Amount>\n        </ErrorDescription>\n      )}\n\n      <Flex variant=\"layout.actions\">\n        <Button variant=\"cancel\" onClick={handleBackPressed} disabled={isManageLiquidityPending}>\n          Back\n        </Button>\n\n        <Button\n          variant=\"primary\"\n          onClick={handleConfirmPressed}\n          disabled={burnLpTokens.isZero || isBalanceInsufficient || isManageLiquidityPending}\n        >\n          {isManageLiquidityPending ? <Spinner size=\"28px\" sx={{ color: \"white\" }} /> : <>Confirm</>}\n        </Button>\n      </Flex>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Close, Flex, Heading, NavLink, NavLinkProps } from \"theme-ui\";\nimport { ReactModal } from \"../../../ReactModal\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { DepositPane } from \"./DepositPane\";\nimport { WithdrawPane } from \"./WithdrawPane\";\n\ninterface LinkProps extends NavLinkProps {\n  active?: boolean;\n}\n\nconst Link: React.FC<LinkProps> = ({ active, children, ...props }) => (\n  <NavLink {...props} sx={{ cursor: \"pointer\", ...(active ? { color: \"primary\" } : {}) }}>\n    {children}\n  </NavLink>\n);\n\nexport const ManagingLiquidity: React.FC = () => {\n  const { dispatchEvent } = useBondView();\n  const [selectedPane, setSelectedPane] = useState<\"deposit\" | \"withdraw\">(\"deposit\");\n\n  const handleDismiss = () => {\n    dispatchEvent(\"ABORT_PRESSED\");\n  };\n\n  return (\n    <ReactModal onDismiss={handleDismiss}>\n      <Heading as=\"h2\" sx={{ pt: 2, pb: 3, px: 2 }}>\n        <Flex sx={{ justifyContent: \"center\" }}>Manage liquidity</Flex>\n        <Close\n          onClick={handleDismiss}\n          sx={{\n            position: \"absolute\",\n            right: \"24px\",\n            top: \"24px\"\n          }}\n        />\n      </Heading>\n\n      <Flex as=\"nav\" sx={{ mb: 3 }}>\n        <Link active={selectedPane === \"deposit\"} onClick={() => setSelectedPane(\"deposit\")}>\n          Deposit\n        </Link>\n\n        <Link active={selectedPane === \"withdraw\"} onClick={() => setSelectedPane(\"withdraw\")}>\n          Withdraw\n        </Link>\n      </Flex>\n\n      {selectedPane === \"deposit\" ? <DepositPane /> : <WithdrawPane />}\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { Close, Flex, Heading } from \"theme-ui\";\nimport { ReactModal } from \"../../../ReactModal\";\nimport { useBondView } from \"../../context/BondViewContext\";\nimport { DepositPane } from \"./DepositPane\";\n\nexport const AddingLiquidity: React.FC = () => {\n  const { dispatchEvent } = useBondView();\n\n  const handleDismiss = () => {\n    dispatchEvent(\"ABORT_PRESSED\");\n  };\n\n  return (\n    <ReactModal onDismiss={handleDismiss}>\n      <Heading as=\"h2\" sx={{ pt: 2, pb: 3, px: 2 }}>\n        <Flex sx={{ justifyContent: \"center\" }}>Add liquidity</Flex>\n\n        <Close\n          onClick={handleDismiss}\n          sx={{\n            position: \"absolute\",\n            right: \"24px\",\n            top: \"24px\"\n          }}\n        />\n      </Heading>\n\n      <DepositPane />\n    </ReactModal>\n  );\n};\n","import React from \"react\";\nimport { useBondView } from \"./context/BondViewContext\";\nimport { Idle } from \"./views/idle/Idle\";\nimport { Actioning } from \"./views/actioning/Actioning\";\nimport { Creating } from \"./views/creating/Creating\";\nimport { InfoMessage } from \"../InfoMessage\";\nimport { Container } from \"theme-ui\";\nimport { Swapping } from \"./views/swapping/Swapping\";\nimport { ManagingLiquidity } from \"./views/managing/ManagingLiquidity\";\nimport { AddingLiquidity } from \"./views/managing/AddingLiquidity\";\n\nexport const Bonds: React.FC = () => {\n  const { view, hasFoundContracts } = useBondView();\n\n  if (!hasFoundContracts) {\n    return (\n      <Container sx={{ position: \"absolute\", left: \"30%\", top: \"40%\" }}>\n        <InfoMessage title=\"Unsupported network\">\n          MSD Bonds haven't been deployed to this network. Please use Ethereum mainnet.\n        </InfoMessage>\n      </Container>\n    );\n  }\n\n  let View = null;\n  switch (view) {\n    case \"CANCELLING\":\n    case \"CLAIMING\": {\n      View = <Actioning />;\n      break;\n    }\n    case \"CREATING\": {\n      View = <Creating />;\n      break;\n    }\n    case \"SWAPPING\": {\n      View = <Swapping />;\n      break;\n    }\n    case \"ADDING_LIQUIDITY\": {\n      View = <AddingLiquidity />;\n      break;\n    }\n    case \"MANAGING_LIQUIDITY\": {\n      View = <ManagingLiquidity />;\n      break;\n    }\n  }\n\n  return (\n    <>\n      <Idle />\n      {View}\n    </>\n  );\n};\n","import { Container } from \"theme-ui\";\nimport { BondStats } from \"../components/BondStats\";\nimport { Bonds as BondPanel } from \"../components/Bonds/Bonds\";\nimport { useBondView } from \"../components/Bonds/context/BondViewContext\";\nimport type {\n  BondTransaction,\n  TransactionStatus as TransactionStatusType\n} from \"../components/Bonds/context/transitions\";\nimport { TransactionStatus } from \"../components/TransactionStatus\";\nimport type { TransactionStateType } from \"../components/TransactionStatus\";\n\ntype BondTransactionStatusToTransactionStateMap = Record<\n  TransactionStatusType,\n  TransactionStateType\n>;\nconst statusMap: BondTransactionStatusToTransactionStateMap = {\n  IDLE: \"idle\",\n  PENDING: \"waitingForConfirmation\",\n  FAILED: \"failed\",\n  CONFIRMED: \"confirmed\"\n};\n\nexport const Bonds: React.FC = () => {\n  const { statuses } = useBondView();\n  const transaction = (Object.keys(statuses) as BondTransaction[]).find(\n    status => statuses[status] !== \"IDLE\"\n  );\n  const status = transaction ? statusMap[statuses[transaction]] : null;\n\n  return (\n    <>\n      <Container variant=\"columns\" sx={{ justifyContent: \"flex-start\" }}>\n        <Container variant=\"left\" sx={{ width: [\"100%\", \"70%\"] }}>\n          <BondPanel />\n        </Container>\n\n        <Container variant=\"right\" sx={{ width: [\"100%\", \"30%\"] }}>\n          <BondStats />\n        </Container>\n      </Container>\n      {status && <TransactionStatus state={status} style={{ zIndex: 9999999999 }} />}\n    </>\n  );\n};\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { LiquityStoreState, UserTroveStatus } from \"@liquity/lib-base\";\nimport { TroveViewContext } from \"./TroveViewContext\";\nimport type { TroveView, TroveEvent } from \"./types\";\n\ntype TroveEventTransitions = Record<TroveView, Partial<Record<TroveEvent, TroveView>>>;\n\nconst transitions: TroveEventTransitions = {\n  NONE: {\n    OPEN_TROVE_PRESSED: \"OPENING\",\n    TROVE_OPENED: \"ACTIVE\"\n  },\n  LIQUIDATED: {\n    OPEN_TROVE_PRESSED: \"OPENING\",\n    TROVE_SURPLUS_COLLATERAL_CLAIMED: \"NONE\",\n    TROVE_OPENED: \"ACTIVE\"\n  },\n  REDEEMED: {\n    OPEN_TROVE_PRESSED: \"OPENING\",\n    TROVE_SURPLUS_COLLATERAL_CLAIMED: \"NONE\",\n    TROVE_OPENED: \"ACTIVE\"\n  },\n  OPENING: {\n    CANCEL_ADJUST_TROVE_PRESSED: \"NONE\",\n    TROVE_OPENED: \"ACTIVE\"\n  },\n  ADJUSTING: {\n    CANCEL_ADJUST_TROVE_PRESSED: \"ACTIVE\",\n    TROVE_ADJUSTED: \"ACTIVE\",\n    TROVE_CLOSED: \"NONE\",\n    TROVE_LIQUIDATED: \"LIQUIDATED\",\n    TROVE_REDEEMED: \"REDEEMED\"\n  },\n  CLOSING: {\n    CANCEL_ADJUST_TROVE_PRESSED: \"ACTIVE\",\n    TROVE_CLOSED: \"NONE\",\n    TROVE_ADJUSTED: \"ACTIVE\",\n    TROVE_LIQUIDATED: \"LIQUIDATED\",\n    TROVE_REDEEMED: \"REDEEMED\"\n  },\n  ACTIVE: {\n    ADJUST_TROVE_PRESSED: \"ADJUSTING\",\n    CLOSE_TROVE_PRESSED: \"CLOSING\",\n    TROVE_CLOSED: \"NONE\",\n    TROVE_LIQUIDATED: \"LIQUIDATED\",\n    TROVE_REDEEMED: \"REDEEMED\"\n  }\n};\n\ntype TroveStateEvents = Partial<Record<UserTroveStatus, TroveEvent>>;\n\nconst troveStatusEvents: TroveStateEvents = {\n  open: \"TROVE_OPENED\",\n  closedByOwner: \"TROVE_CLOSED\",\n  closedByLiquidation: \"TROVE_LIQUIDATED\",\n  closedByRedemption: \"TROVE_REDEEMED\"\n};\n\nconst transition = (view: TroveView, event: TroveEvent): TroveView => {\n  const nextView = transitions[view][event] ?? view;\n  return nextView;\n};\n\nconst getInitialView = (troveStatus: UserTroveStatus): TroveView => {\n  if (troveStatus === \"closedByLiquidation\") {\n    return \"LIQUIDATED\";\n  }\n  if (troveStatus === \"closedByRedemption\") {\n    return \"REDEEMED\";\n  }\n  if (troveStatus === \"open\") {\n    return \"ACTIVE\";\n  }\n  return \"NONE\";\n};\n\nconst select = ({ trove: { status } }: LiquityStoreState) => status;\n\nexport const TroveViewProvider: React.FC = props => {\n  const { children } = props;\n  const troveStatus = useLiquitySelector(select);\n\n  const [view, setView] = useState<TroveView>(getInitialView(troveStatus));\n  const viewRef = useRef<TroveView>(view);\n\n  const dispatchEvent = useCallback((event: TroveEvent) => {\n    const nextView = transition(viewRef.current, event);\n\n    console.log(\n      \"dispatchEvent() [current-view, event, next-view]\",\n      viewRef.current,\n      event,\n      nextView\n    );\n    setView(nextView);\n  }, []);\n\n  useEffect(() => {\n    viewRef.current = view;\n  }, [view]);\n\n  useEffect(() => {\n    const event = troveStatusEvents[troveStatus] ?? null;\n    if (event !== null) {\n      dispatchEvent(event);\n    }\n  }, [troveStatus, dispatchEvent]);\n\n  const provider = {\n    view,\n    dispatchEvent\n  };\n  return <TroveViewContext.Provider value={provider}>{children}</TroveViewContext.Provider>;\n};\n","import React, { useState, useCallback, useEffect, useRef } from \"react\";\nimport { useLiquitySelector } from \"@liquity/lib-react\";\nimport { LiquityStoreState, StabilityDeposit } from \"@liquity/lib-base\";\nimport { StabilityViewContext } from \"./StabilityViewContext\";\nimport type { StabilityView, StabilityEvent } from \"./types\";\n\ntype StabilityEventTransitions = Record<\n  StabilityView,\n  Partial<Record<StabilityEvent, StabilityView>>\n>;\n\nconst transitions: StabilityEventTransitions = {\n  NONE: {\n    DEPOSIT_PRESSED: \"DEPOSITING\"\n  },\n  DEPOSITING: {\n    CANCEL_PRESSED: \"NONE\",\n    DEPOSIT_CONFIRMED: \"ACTIVE\"\n  },\n  ACTIVE: {\n    REWARDS_CLAIMED: \"ACTIVE\",\n    ADJUST_DEPOSIT_PRESSED: \"ADJUSTING\",\n    DEPOSIT_EMPTIED: \"NONE\"\n  },\n  ADJUSTING: {\n    CANCEL_PRESSED: \"ACTIVE\",\n    DEPOSIT_CONFIRMED: \"ACTIVE\",\n    DEPOSIT_EMPTIED: \"NONE\"\n  }\n};\n\nconst transition = (view: StabilityView, event: StabilityEvent): StabilityView => {\n  const nextView = transitions[view][event] ?? view;\n  return nextView;\n};\n\nconst getInitialView = (stabilityDeposit: StabilityDeposit): StabilityView => {\n  return stabilityDeposit.isEmpty ? \"NONE\" : \"ACTIVE\";\n};\n\nconst select = ({ stabilityDeposit }: LiquityStoreState): StabilityDeposit => stabilityDeposit;\n\nexport const StabilityViewProvider: React.FC = props => {\n  const { children } = props;\n  const stabilityDeposit = useLiquitySelector(select);\n\n  const [view, setView] = useState<StabilityView>(getInitialView(stabilityDeposit));\n  const viewRef = useRef<StabilityView>(view);\n\n  const dispatchEvent = useCallback((event: StabilityEvent) => {\n    const nextView = transition(viewRef.current, event);\n\n    console.log(\n      \"dispatchEvent() [current-view, event, next-view]\",\n      viewRef.current,\n      event,\n      nextView\n    );\n    setView(nextView);\n  }, []);\n\n  useEffect(() => {\n    viewRef.current = view;\n  }, [view]);\n\n  useEffect(() => {\n    if (stabilityDeposit.isEmpty) {\n      dispatchEvent(\"DEPOSIT_EMPTIED\");\n    }\n  }, [stabilityDeposit.isEmpty, dispatchEvent]);\n\n  const provider = {\n    view,\n    dispatchEvent\n  };\n\n  return <StabilityViewContext.Provider value={provider}>{children}</StabilityViewContext.Provider>;\n};\n","import { createContext, useContext } from \"react\";\n\nexport type StakingView = \"ACTIVE\" | \"ADJUSTING\" | \"NONE\";\n\nexport type StakingViewAction = { type: \"startAdjusting\" | \"cancelAdjusting\" };\n\nexport type StakingViewContextType = {\n  view: StakingView;\n\n  // Indicates that a staking TX is pending.\n  // The panel should be covered with a spinner overlay when this is true.\n  changePending: boolean;\n\n  // Dispatch an action that changes the Staking panel's view.\n  dispatch: (action: StakingViewAction) => void;\n};\n\nexport const StakingViewContext = createContext<StakingViewContextType | null>(null);\n\nexport const useStakingView = (): StakingViewContextType => {\n  const context = useContext(StakingViewContext);\n\n  if (context === null) {\n    throw new Error(\"You must add a <TroveViewProvider> into the React tree\");\n  }\n\n  return context;\n};\n","import { useEffect } from \"react\";\n\nimport { LiquityStoreState, LQTYStake } from \"@liquity/lib-base\";\nimport { LiquityStoreUpdate, useLiquityReducer } from \"@liquity/lib-react\";\n\nimport { useMyTransactionState } from \"../../Transaction\";\n\nimport { StakingViewAction, StakingViewContext } from \"./StakingViewContext\";\n\ntype StakingViewProviderAction =\n  | LiquityStoreUpdate\n  | StakingViewAction\n  | { type: \"startChange\" | \"abortChange\" };\n\ntype StakingViewProviderState = {\n  lqtyStake: LQTYStake;\n  changePending: boolean;\n  adjusting: boolean;\n};\n\nconst init = ({ lqtyStake }: LiquityStoreState): StakingViewProviderState => ({\n  lqtyStake,\n  changePending: false,\n  adjusting: false\n});\n\nconst reduce = (\n  state: StakingViewProviderState,\n  action: StakingViewProviderAction\n): StakingViewProviderState => {\n  // console.log(state);\n  // console.log(action);\n\n  switch (action.type) {\n    case \"startAdjusting\":\n      return { ...state, adjusting: true };\n\n    case \"cancelAdjusting\":\n      return { ...state, adjusting: false };\n\n    case \"startChange\":\n      return { ...state, changePending: true };\n\n    case \"abortChange\":\n      return { ...state, changePending: false };\n\n    case \"updateStore\": {\n      const {\n        oldState: { lqtyStake: oldStake },\n        stateChange: { lqtyStake: updatedStake }\n      } = action;\n\n      if (updatedStake) {\n        const changeCommitted =\n          !updatedStake.stakedLQTY.eq(oldStake.stakedLQTY) ||\n          updatedStake.collateralGain.lt(oldStake.collateralGain) ||\n          updatedStake.lusdGain.lt(oldStake.lusdGain);\n\n        return {\n          ...state,\n          lqtyStake: updatedStake,\n          adjusting: false,\n          changePending: changeCommitted ? false : state.changePending\n        };\n      }\n    }\n  }\n\n  return state;\n};\n\nexport const StakingViewProvider: React.FC = ({ children }) => {\n  const stakingTransactionState = useMyTransactionState(\"stake\");\n  const [{ adjusting, changePending, lqtyStake }, dispatch] = useLiquityReducer(reduce, init);\n\n  useEffect(() => {\n    if (\n      stakingTransactionState.type === \"waitingForApproval\" ||\n      stakingTransactionState.type === \"waitingForConfirmation\"\n    ) {\n      dispatch({ type: \"startChange\" });\n    } else if (\n      stakingTransactionState.type === \"failed\" ||\n      stakingTransactionState.type === \"cancelled\"\n    ) {\n      dispatch({ type: \"abortChange\" });\n    }\n  }, [stakingTransactionState.type, dispatch]);\n\n  return (\n    <StakingViewContext.Provider\n      value={{\n        view: adjusting ? \"ADJUSTING\" : lqtyStake.isEmpty ? \"NONE\" : \"ACTIVE\",\n        changePending,\n        dispatch\n      }}\n    >\n      {children}\n    </StakingViewContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Flex, Container } from \"theme-ui\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Wallet } from \"@ethersproject/wallet\";\n\nimport { Decimal, Difference, Trove } from \"@liquity/lib-base\";\nimport { LiquityStoreProvider } from \"@liquity/lib-react\";\n\nimport { useLiquity } from \"./hooks/LiquityContext\";\nimport { TransactionMonitor } from \"./components/Transaction\";\nimport { UserAccount } from \"./components/UserAccount\";\nimport { SystemStatsPopup } from \"./components/SystemStatsPopup\";\nimport { Header } from \"./components/Header\";\n\nimport { PageSwitcher } from \"./pages/PageSwitcher\";\nimport { RiskyTrovesPage } from \"./pages/RiskyTrovesPage\";\nimport { RedemptionPage } from \"./pages/RedemptionPage\";\nimport { Bonds } from \"./pages/Bonds\";\n\nimport { TroveViewProvider } from \"./components/Trove/context/TroveViewProvider\";\nimport { StabilityViewProvider } from \"./components/Stability/context/StabilityViewProvider\";\nimport { StakingViewProvider } from \"./components/Staking/context/StakingViewProvider\";\nimport { BondViewProvider } from \"./components/Bonds/context/BondViewProvider\";\n\ntype LiquityFrontendProps = {\n  loader?: React.ReactNode;\n};\nexport const LiquityFrontend: React.FC<LiquityFrontendProps> = ({ loader }) => {\n  const { account, provider, liquity } = useLiquity();\n\n  // For console tinkering ;-)\n  Object.assign(window, {\n    account,\n    provider,\n    liquity,\n    Trove,\n    Decimal,\n    Difference,\n    Wallet\n  });\n\n  return (\n    <LiquityStoreProvider {...{ loader }} store={liquity.store}>\n      <Router>\n        <TroveViewProvider>\n          <StabilityViewProvider>\n            <StakingViewProvider>\n              <BondViewProvider>\n                <Flex sx={{ flexDirection: \"column\", minHeight: \"100%\" }}>\n                  <Header>\n                    <UserAccount />\n                    <SystemStatsPopup />\n                  </Header>\n\n                  <Container\n                    variant=\"main\"\n                    sx={{\n                      display: \"flex\",\n                      flexGrow: 1,\n                      flexDirection: \"column\",\n                      alignItems: \"center\"\n                    }}\n                  >\n                    <Switch>\n                      <Route path=\"/\" exact>\n                        <PageSwitcher />\n                      </Route>\n                      <Route path=\"/bonds\">\n                        <Bonds />\n                      </Route>\n                      <Route path=\"/risky-troves\">\n                        <RiskyTrovesPage />\n                      </Route>\n                      <Route path=\"/redemption\">\n                        <RedemptionPage />\n                      </Route>\n                    </Switch>\n                  </Container>\n                </Flex>\n              </BondViewProvider>\n            </StakingViewProvider>\n          </StabilityViewProvider>\n        </TroveViewProvider>\n      </Router>\n      <TransactionMonitor />\n    </LiquityStoreProvider>\n  );\n};\n","import React from \"react\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Flex, Heading, ThemeProvider, Paragraph, Link } from \"theme-ui\";\n\nimport { BatchedWebSocketAugmentedWeb3Provider } from \"@liquity/providers\";\nimport { LiquityProvider } from \"./hooks/LiquityContext\";\nimport { WalletConnector } from \"./components/WalletConnector\";\nimport { TransactionProvider } from \"./components/Transaction\";\nimport { Icon } from \"./components/Icon\";\nimport { getConfig } from \"./config\";\nimport theme from \"./theme\";\n\nimport { DisposableWalletProvider } from \"./testUtils/DisposableWalletProvider\";\nimport { LiquityFrontend } from \"./LiquityFrontend\";\nimport { AppLoader } from \"./components/AppLoader\";\n\nif (window.ethereum) {\n  // Silence MetaMask warning in console\n  Object.assign(window.ethereum, { autoRefreshOnNetworkChange: false });\n}\n\nif (process.env.REACT_APP_DEMO_MODE === \"true\") {\n  const ethereum = new DisposableWalletProvider(\n    process.env.REACT_APP_RPC_URL || `http://${window.location.hostname}:8545`,\n    \"0x4d5db4107d237df6a3d58ee5f70ae63d73d7658d4026f2eefd2f204c81682cb7\"\n  );\n\n  Object.assign(window, { ethereum });\n}\n\n// Start pre-fetching the config\ngetConfig().then(config => {\n  // console.log(\"Frontend config:\");\n  // console.log(config);\n  Object.assign(window, { config });\n});\n\nconst EthersWeb3ReactProvider: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={provider => new BatchedWebSocketAugmentedWeb3Provider(provider)}>\n      {children}\n    </Web3ReactProvider>\n  );\n};\n\nconst UnsupportedMainnetFallback: React.FC = () => (\n  <Flex\n    sx={{\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100vh\",\n      textAlign: \"center\"\n    }}\n  >\n    <Heading sx={{ mb: 3 }}>\n      <Icon name=\"exclamation-triangle\" /> This app is for testing purposes only.\n    </Heading>\n\n    <Paragraph sx={{ mb: 3 }}>\n      Please change your network to Görli or Arbitrum.\n    </Paragraph>\n\n    <Paragraph>\n      If you'd like to use the Liquity Protocol on mainnet, please pick a frontend{\" \"}\n      <Link href=\"\">\n        here <Icon name=\"external-link-alt\" size=\"xs\" />\n      </Link>\n      .\n    </Paragraph>\n  </Flex>\n);\n\nconst App = () => {\n  const unsupportedNetworkFallback = (chainId: number) => (\n    <Flex\n      sx={{\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100vh\",\n        textAlign: \"center\"\n      }}\n    >\n      <Heading sx={{ mb: 3 }}>\n        <Icon name=\"exclamation-triangle\" /> Liquity is not yet deployed to{\" \"}\n        {chainId === 1 ? \"mainnet\" : \"this network\"}.\n      </Heading>\n      Please switch to Görli or Arbitrum.\n    </Flex>\n  );\n\n  return (\n    <EthersWeb3ReactProvider>\n      <ThemeProvider theme={theme}>\n        <WalletConnector loader={<AppLoader />}>\n          <LiquityProvider\n            loader={<AppLoader />}\n            unsupportedNetworkFallback={unsupportedNetworkFallback}\n            unsupportedMainnetFallback={<UnsupportedMainnetFallback />}\n          >\n            <TransactionProvider>\n              <LiquityFrontend loader={<AppLoader />} />\n            </TransactionProvider>\n          </LiquityProvider>\n        </WalletConnector>\n      </ThemeProvider>\n    </EthersWeb3ReactProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Modal from \"react-modal\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nModal.setAppElement(\"#root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}